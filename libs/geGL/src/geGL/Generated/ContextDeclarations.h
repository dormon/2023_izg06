GEGL_EXPORT void glMultiDrawArraysIndirectBindlessCountNV(GLenum mode,const void* indirect,GLsizei drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount)const;
GEGL_EXPORT void glTextureParameterfv(GLuint texture,GLenum pname,const GLfloat* param)const;
GEGL_EXPORT void glGetListParameterivSGIX(GLuint list,GLenum pname,GLint* params)const;
GEGL_EXPORT void glProgramUniform1i64ARB(GLuint program,GLint location,GLint64 x)const;
GEGL_EXPORT void glVertexArrayElementBuffer(GLuint vaobj,GLuint buffer)const;
GEGL_EXPORT void glHintPGI(GLenum target,GLint mode)const;
GEGL_EXPORT void glStencilMaskSeparate(GLenum face,GLuint mask)const;
GEGL_EXPORT void glGetFramebufferAttachmentParameterivEXT(GLenum target,GLenum attachment,GLenum pname,GLint* params)const;
GEGL_EXPORT void glTextureStorage3DMultisample(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)const;
GEGL_EXPORT void glGetIntegerIndexedvEXT(GLenum target,GLuint index,GLint* data)const;
GEGL_EXPORT void glCopyTexImage1D(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)const;
GEGL_EXPORT void glVertexAttrib4usv(GLuint index,const GLushort* v)const;
GEGL_EXPORT void glTexRenderbufferNV(GLenum target,GLuint renderbuffer)const;
GEGL_EXPORT void glVertexAttrib3hvNV(GLuint index,const GLhalfNV* v)const;
GEGL_EXPORT void glProgramUniform4ui64ARB(GLuint program,GLint location,GLuint64 x,GLuint64 y,GLuint64 z,GLuint64 w)const;
GEGL_EXPORT void glInstrumentsBufferSGIX(GLsizei size,GLint* buffer)const;
GEGL_EXPORT void glIndexi(GLint c)const;
GEGL_EXPORT void glMultiTexCoord2sARB(GLenum target,GLshort s,GLshort t)const;
GEGL_EXPORT void glProgramEnvParameter4fARB(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glCompressedTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid* data)const;
GEGL_EXPORT void glEvalCoord2d(GLdouble u,GLdouble v)const;
GEGL_EXPORT void glEvalCoord2f(GLfloat u,GLfloat v)const;
GEGL_EXPORT void glIndexd(GLdouble c)const;
GEGL_EXPORT void glSecondaryColor3hvNV(const GLhalfNV* v)const;
GEGL_EXPORT void glIndexf(GLfloat c)const;
GEGL_EXPORT void glFrustumxOES(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)const;
GEGL_EXPORT void glTextureStorage3DEXT(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)const;
GEGL_EXPORT void glDrawCommandsStatesNV(GLuint buffer,const GLintptr* indirects,const GLsizei* sizes,const GLuint* states,const GLuint* fbos,GLuint count)const;
GEGL_EXPORT void glUniform4uiEXT(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)const;
GEGL_EXPORT void glProgramUniform3ui64ARB(GLuint program,GLint location,GLuint64 x,GLuint64 y,GLuint64 z)const;
GEGL_EXPORT void glIndexs(GLshort c)const;
GEGL_EXPORT void glVertexArrayBindVertexBufferEXT(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)const;
GEGL_EXPORT void glConvolutionParameteriEXT(GLenum target,GLenum pname,GLint params)const;
GEGL_EXPORT void glColor4ubVertex2fSUN(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y)const;
GEGL_EXPORT void glProgramUniform1ivEXT(GLuint program,GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glGetnMapfv(GLenum target,GLenum query,GLsizei bufSize,GLfloat* v)const;
GEGL_EXPORT void glTransformFeedbackBufferRange(GLuint xfb,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
GEGL_EXPORT void glPathGlyphsNV(GLuint firstPathName,GLenum fontTarget,const void* fontName,GLbitfield fontStyle,GLsizei numGlyphs,GLenum type,const void* charcodes,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)const;
GEGL_EXPORT void glSecondaryColor3fv(const GLfloat* v)const;
GEGL_EXPORT void glGetCombinerInputParameterivNV(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLint* params)const;
GEGL_EXPORT void glEndPerfMonitorAMD(GLuint monitor)const;
GEGL_EXPORT void glPointParameterfvARB(GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glVertex2xOES(GLfixed x)const;
GEGL_EXPORT void glDrawElementsInstancedBaseInstance(GLenum mode,GLsizei count,GLenum type,const void* indices,GLsizei instancecount,GLuint baseinstance)const;
GEGL_EXPORT void glMultTransposeMatrixdARB(const GLdouble* m)const;
GEGL_EXPORT void glVertexAttribL4dEXT(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glVertex4iv(const GLint* v)const;
GEGL_EXPORT void glCoverStrokePathInstancedNV(GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat* transformValues)const;
GEGL_EXPORT void glDeformSGIX(GLbitfield mask)const;
GEGL_EXPORT void glUniform2ui64NV(GLint location,GLuint64EXT x,GLuint64EXT y)const;
GEGL_EXPORT void glCopyPathNV(GLuint resultPath,GLuint srcPath)const;
GEGL_EXPORT void glVertexAttribP4ui(GLuint index,GLenum type,GLboolean normalized,GLuint value)const;
GEGL_EXPORT void glVertexAttribL2d(GLuint index,GLdouble x,GLdouble y)const;
GEGL_EXPORT void glGetMultisamplefv(GLenum pname,GLuint index,GLfloat* val)const;
GEGL_EXPORT void glCompressedMultiTexSubImage3DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void* bits)const;
GEGL_EXPORT GLvdpauSurfaceNV glVDPAURegisterOutputSurfaceNV(const void* vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint* textureNames)const;
GEGL_EXPORT void glMinSampleShading(GLfloat value)const;
GEGL_EXPORT void glProgramUniform4fEXT(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)const;
GEGL_EXPORT void glCoverStrokePathNV(GLuint path,GLenum coverMode)const;
GEGL_EXPORT void glTextureImage2DMultisampleNV(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)const;
GEGL_EXPORT void glVertex3bOES(GLbyte x,GLbyte y,GLbyte z)const;
GEGL_EXPORT void glImportMemoryWin32HandleEXT(GLuint memory,GLuint64 size,GLenum handleType,void* handle)const;
GEGL_EXPORT void glTessellationFactorAMD(GLfloat factor)const;
GEGL_EXPORT void glDebugMessageControl(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint* ids,GLboolean enabled)const;
GEGL_EXPORT GLboolean glIsObjectBufferATI(GLuint buffer)const;
GEGL_EXPORT void glPopAttrib()const;
GEGL_EXPORT void glProgramUniform4iEXT(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)const;
GEGL_EXPORT void glVertexAttrib4ubNV(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)const;
GEGL_EXPORT void glColorMaterial(GLenum face,GLenum mode)const;
GEGL_EXPORT void glVertexAttrib2svARB(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glMinSampleShadingARB(GLfloat value)const;
GEGL_EXPORT void glColor3b(GLbyte red,GLbyte green,GLbyte blue)const;
GEGL_EXPORT void glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(GLuint rc,GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glColor3f(GLfloat red,GLfloat green,GLfloat blue)const;
GEGL_EXPORT void glVDPAUGetSurfaceivNV(GLvdpauSurfaceNV surface,GLenum pname,GLsizei bufSize,GLsizei* length,GLint* values)const;
GEGL_EXPORT void glColor3d(GLdouble red,GLdouble green,GLdouble blue)const;
GEGL_EXPORT void glGetnMapiv(GLenum target,GLenum query,GLsizei bufSize,GLint* v)const;
GEGL_EXPORT void glColor3i(GLint red,GLint green,GLint blue)const;
GEGL_EXPORT void glGetInternalformatSampleivNV(GLenum target,GLenum internalformat,GLsizei samples,GLenum pname,GLsizei bufSize,GLint* params)const;
GEGL_EXPORT void glVertexAttrib4ubv(GLuint index,const GLubyte* v)const;
GEGL_EXPORT void glColor3s(GLshort red,GLshort green,GLshort blue)const;
GEGL_EXPORT void glVertexAttribs4hvNV(GLuint index,GLsizei n,const GLhalfNV* v)const;
GEGL_EXPORT void glVertexAttrib4NubvARB(GLuint index,const GLubyte* v)const;
GEGL_EXPORT void glMultiTexCoord3hvNV(GLenum target,const GLhalfNV* v)const;
GEGL_EXPORT void glMatrixPushEXT(GLenum mode)const;
GEGL_EXPORT void glProgramUniform2fEXT(GLuint program,GLint location,GLfloat v0,GLfloat v1)const;
GEGL_EXPORT void glGetVertexArrayIndexediv(GLuint vaobj,GLuint index,GLenum pname,GLint* param)const;
GEGL_EXPORT void glBlitFramebuffer(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)const;
GEGL_EXPORT void glMultiTexCoordP2ui(GLenum texture,GLenum type,GLuint coords)const;
GEGL_EXPORT void glColorPointerListIBM(GLint size,GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
GEGL_EXPORT void glVertexAttribL4d(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glGetFragmentMaterialfvSGIX(GLenum face,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glVertex2iv(const GLint* v)const;
GEGL_EXPORT void glGetTexEnvxvOES(GLenum target,GLenum pname,GLfixed* params)const;
GEGL_EXPORT void glUniformMatrix3dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glGetVertexAttribLdvEXT(GLuint index,GLenum pname,GLdouble* params)const;
GEGL_EXPORT void glTexCoordP3uiv(GLenum type,const GLuint* coords)const;
GEGL_EXPORT void glDeformationMap3dSGIX(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,GLdouble w1,GLdouble w2,GLint wstride,GLint worder,const GLdouble* points)const;
GEGL_EXPORT void glResumeTransformFeedback()const;
GEGL_EXPORT void glInsertEventMarkerEXT(GLsizei length,const GLchar* marker)const;
GEGL_EXPORT void glTessellationModeAMD(GLenum mode)const;
GEGL_EXPORT void glDrawCommandsAddressNV(GLenum primitiveMode,const GLuint64* indirects,const GLsizei* sizes,GLuint count)const;
GEGL_EXPORT void glFogi(GLenum pname,GLint param)const;
GEGL_EXPORT void glGetTexParameterxvOES(GLenum target,GLenum pname,GLfixed* params)const;
GEGL_EXPORT void glVertexPointer(GLint size,GLenum type,GLsizei stride,const GLvoid* ptr)const;
GEGL_EXPORT void glGetPerfMonitorCounterDataAMD(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint* data,GLint* bytesWritten)const;
GEGL_EXPORT void glFogf(GLenum pname,GLfloat param)const;
GEGL_EXPORT void glMultiTexCoord1d(GLenum target,GLdouble s)const;
GEGL_EXPORT void glMultiTexCoord1f(GLenum target,GLfloat s)const;
GEGL_EXPORT void glGetMultiTexParameterivEXT(GLenum texunit,GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glProgramUniformMatrix3x4fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glVertexAttribI2i(GLuint index,GLint x,GLint y)const;
GEGL_EXPORT void glMultiTexCoord1i(GLenum target,GLint s)const;
GEGL_EXPORT void glDeleteSemaphoresEXT(GLsizei n,const GLuint* semaphores)const;
GEGL_EXPORT void glLoadProgramNV(GLenum target,GLuint id,GLsizei len,const GLubyte* program)const;
GEGL_EXPORT void glWriteMaskEXT(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)const;
GEGL_EXPORT GLenum glGetGraphicsResetStatus()const;
GEGL_EXPORT void glVertexAttrib1fv(GLuint index,const GLfloat* v)const;
GEGL_EXPORT void glMultiTexCoord1s(GLenum target,GLshort s)const;
GEGL_EXPORT void glImageTransformParameterfvHP(GLenum target,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glFramebufferTexture2D(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)const;
GEGL_EXPORT void glGetFragmentLightfvSGIX(GLenum light,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glListParameterfSGIX(GLuint list,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glTexCoord3sv(const GLshort* v)const;
GEGL_EXPORT void glNamedFramebufferRenderbufferEXT(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)const;
GEGL_EXPORT void glFragmentLightModelfSGIX(GLenum pname,GLfloat param)const;
GEGL_EXPORT void glIndexPointerEXT(GLenum type,GLsizei stride,GLsizei count,const void* pointer)const;
GEGL_EXPORT void glBlendEquationSeparateATI(GLenum modeRGB,GLenum modeA)const;
GEGL_EXPORT void glVertexArrayAttribIFormat(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)const;
GEGL_EXPORT void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(GLuint rc,GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glReplacementCodeubvSUN(const GLubyte* code)const;
GEGL_EXPORT void glGenFramebuffers(GLsizei n,GLuint* framebuffers)const;
GEGL_EXPORT void glPixelMapx(GLenum map,GLint size,const GLfixed* values)const;
GEGL_EXPORT void glTexSubImage3DEXT(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glGetAttachedShaders(GLuint program,GLsizei maxCount,GLsizei* count,GLuint* shaders)const;
GEGL_EXPORT void glGetPixelTexGenParameterfvSGIS(GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glReplacementCodeuiNormal3fVertex3fSUN(GLuint rc,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT GLuint glGetDebugMessageLogAMD(GLuint count,GLsizei bufsize,GLenum* categories,GLuint* severities,GLuint* ids,GLsizei* lengths,GLchar* message)const;
GEGL_EXPORT void glVertexStream4sATI(GLenum stream,GLshort x,GLshort y,GLshort z,GLshort w)const;
GEGL_EXPORT void glVertexAttribs4dvNV(GLuint index,GLsizei count,const GLdouble* v)const;
GEGL_EXPORT void glGetnMapdvARB(GLenum target,GLenum query,GLsizei bufSize,GLdouble* v)const;
GEGL_EXPORT void glOrthofOES(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)const;
GEGL_EXPORT void glViewportArrayv(GLuint first,GLsizei count,const GLfloat* v)const;
GEGL_EXPORT void glDrawElementArrayATI(GLenum mode,GLsizei count)const;
GEGL_EXPORT void glBufferStorageMemEXT(GLenum target,GLsizeiptr size,GLuint memory,GLuint64 offset)const;
GEGL_EXPORT void glGetPathColorGenfvNV(GLenum color,GLenum pname,GLfloat* value)const;
GEGL_EXPORT void glWindowPos3iMESA(GLint x,GLint y,GLint z)const;
GEGL_EXPORT void glMultiTexCoord2s(GLenum target,GLshort s,GLshort t)const;
GEGL_EXPORT void glVertex3dv(const GLdouble* v)const;
GEGL_EXPORT void glVertexAttribI3uivEXT(GLuint index,const GLuint* v)const;
GEGL_EXPORT void glUniform3ui64ARB(GLint location,GLuint64 x,GLuint64 y,GLuint64 z)const;
GEGL_EXPORT void glVertexAttrib2fvNV(GLuint index,const GLfloat* v)const;
GEGL_EXPORT void glGetNamedBufferSubDataEXT(GLuint buffer,GLintptr offset,GLsizeiptr size,void* data)const;
GEGL_EXPORT void glConvolutionFilter2D(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid* image)const;
GEGL_EXPORT void glMemoryBarrierByRegion(GLbitfield barriers)const;
GEGL_EXPORT void glVertexArrayBindingDivisor(GLuint vaobj,GLuint bindingindex,GLuint divisor)const;
GEGL_EXPORT void glMatrixRotatedEXT(GLenum mode,GLdouble angle,GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glTexCoord2sv(const GLshort* v)const;
GEGL_EXPORT GLboolean glIsProgramNV(GLuint id)const;
GEGL_EXPORT void glUniform2dv(GLint location,GLsizei count,const GLdouble* value)const;
GEGL_EXPORT void glGetPixelMapuiv(GLenum map,GLuint* values)const;
GEGL_EXPORT void glDepthBoundsEXT(GLclampd zmin,GLclampd zmax)const;
GEGL_EXPORT void glVertexAttrib4hvNV(GLuint index,const GLhalfNV* v)const;
GEGL_EXPORT void glMultiTexParameteriEXT(GLenum texunit,GLenum target,GLenum pname,GLint param)const;
GEGL_EXPORT void glGetPointerv(GLenum pname,GLvoid** params)const;
GEGL_EXPORT void glPathCommandsNV(GLuint path,GLsizei numCommands,const GLubyte* commands,GLsizei numCoords,GLenum coordType,const void* coords)const;
GEGL_EXPORT void glGetListParameterfvSGIX(GLuint list,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glGetUniformuiv(GLuint program,GLint location,GLuint* params)const;
GEGL_EXPORT void glDebugMessageInsertAMD(GLenum category,GLenum severity,GLuint id,GLsizei length,const GLchar* buf)const;
GEGL_EXPORT void glFrustum(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble near_val,GLdouble far_val)const;
GEGL_EXPORT void glVertexAttribL1ui64vNV(GLuint index,const GLuint64EXT* v)const;
GEGL_EXPORT void glClearColorxOES(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)const;
GEGL_EXPORT void glProgramUniformMatrix3fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glSampleMaskIndexedNV(GLuint index,GLbitfield mask)const;
GEGL_EXPORT void glCompileShaderIncludeARB(GLuint shader,GLsizei count,const GLchar*const* path,const GLint* length)const;
GEGL_EXPORT void glGetArrayObjectfvATI(GLenum array,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glVertexStream4svATI(GLenum stream,const GLshort* coords)const;
GEGL_EXPORT void glMultiTexCoord4iARB(GLenum target,GLint s,GLint t,GLint r,GLint q)const;
GEGL_EXPORT void glVariantfvEXT(GLuint id,const GLfloat* addr)const;
GEGL_EXPORT void glMatrixLoadfEXT(GLenum mode,const GLfloat* m)const;
GEGL_EXPORT void glLoadIdentityDeformationMapSGIX(GLbitfield mask)const;
GEGL_EXPORT void glGetRenderbufferParameteriv(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glProgramUniform3fEXT(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)const;
GEGL_EXPORT void glNamedRenderbufferStorage(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glBindFragDataLocation(GLuint program,GLuint color,const GLchar* name)const;
GEGL_EXPORT void glPolygonOffsetClamp(GLfloat factor,GLfloat units,GLfloat clamp)const;
GEGL_EXPORT void glFogCoordPointerListIBM(GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
GEGL_EXPORT GLsync glFenceSync(GLenum condition,GLbitfield flags)const;
GEGL_EXPORT void glGetVertexAttribIivEXT(GLuint index,GLenum pname,GLint* params)const;
GEGL_EXPORT void glFramebufferDrawBuffersEXT(GLuint framebuffer,GLsizei n,const GLenum* bufs)const;
GEGL_EXPORT void glVertexAttribs4fvNV(GLuint index,GLsizei count,const GLfloat* v)const;
GEGL_EXPORT void glPauseTransformFeedbackNV()const;
GEGL_EXPORT void glGetQueryObjecti64vEXT(GLuint id,GLenum pname,GLint64* params)const;
GEGL_EXPORT void glVDPAUSurfaceAccessNV(GLvdpauSurfaceNV surface,GLenum access)const;
GEGL_EXPORT void glValidateProgramPipeline(GLuint pipeline)const;
GEGL_EXPORT void glTexPageCommitmentARB(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)const;
GEGL_EXPORT void glWindowPos3dvARB(const GLdouble* v)const;
GEGL_EXPORT void glStencilStrokePathInstancedNV(GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLint reference,GLuint mask,GLenum transformType,const GLfloat* transformValues)const;
GEGL_EXPORT void glFogfv(GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glGenQueriesARB(GLsizei n,GLuint* ids)const;
GEGL_EXPORT void glProgramUniform2i64NV(GLuint program,GLint location,GLint64EXT x,GLint64EXT y)const;
GEGL_EXPORT void glVertexP4ui(GLenum type,GLuint value)const;
GEGL_EXPORT void glVertexStream1ivATI(GLenum stream,const GLint* coords)const;
GEGL_EXPORT void glProgramEnvParameterI4iNV(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)const;
GEGL_EXPORT void glGenVertexArraysAPPLE(GLsizei n,GLuint* arrays)const;
GEGL_EXPORT void glDrawTransformFeedbackInstanced(GLenum mode,GLuint id,GLsizei instancecount)const;
GEGL_EXPORT void glStencilThenCoverStrokePathNV(GLuint path,GLint reference,GLuint mask,GLenum coverMode)const;
GEGL_EXPORT void glDeleteVertexArraysAPPLE(GLsizei n,const GLuint* arrays)const;
GEGL_EXPORT void glGetNamedBufferParameterui64vNV(GLuint buffer,GLenum pname,GLuint64EXT* params)const;
GEGL_EXPORT GLbitfield glQueryMatrixxOES(GLfixed* mantissa,GLint* exponent)const;
GEGL_EXPORT void glSecondaryColor3usv(const GLushort* v)const;
GEGL_EXPORT void glTranslatexOES(GLfixed x,GLfixed y,GLfixed z)const;
GEGL_EXPORT void glDrawTransformFeedback(GLenum mode,GLuint id)const;
GEGL_EXPORT void glTexCoord2fColor4fNormal3fVertex3fvSUN(const GLfloat* tc,const GLfloat* c,const GLfloat* n,const GLfloat* v)const;
GEGL_EXPORT GLvdpauSurfaceNV glVDPAURegisterVideoSurfaceNV(const void* vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint* textureNames)const;
GEGL_EXPORT void glGetTexParameterIuiv(GLenum target,GLenum pname,GLuint* params)const;
GEGL_EXPORT void glBindBufferBaseNV(GLenum target,GLuint index,GLuint buffer)const;
GEGL_EXPORT void glIndexPointer(GLenum type,GLsizei stride,const GLvoid* ptr)const;
GEGL_EXPORT void glGenQueryResourceTagNV(GLsizei n,GLint* tagIds)const;
GEGL_EXPORT void glVertexAttrib4Nbv(GLuint index,const GLbyte* v)const;
GEGL_EXPORT void glListParameteriSGIX(GLuint list,GLenum pname,GLint param)const;
GEGL_EXPORT void glBlendColorxOES(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)const;
GEGL_EXPORT void glUniformui64vNV(GLint location,GLsizei count,const GLuint64EXT* value)const;
GEGL_EXPORT GLboolean glIsSync(GLsync sync)const;
GEGL_EXPORT void glGetTextureParameterivEXT(GLuint texture,GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glFogCoordhvNV(const GLhalfNV* fog)const;
GEGL_EXPORT void glFramebufferTextureLayerEXT(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)const;
GEGL_EXPORT void glGetObjectPtrLabel(const void* ptr,GLsizei bufSize,GLsizei* length,GLchar* label)const;
GEGL_EXPORT void glTextureParameteri(GLuint texture,GLenum pname,GLint param)const;
GEGL_EXPORT void glMultiTexCoord1fARB(GLenum target,GLfloat s)const;
GEGL_EXPORT void glUniformMatrix2x3dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glFramebufferDrawBufferEXT(GLuint framebuffer,GLenum mode)const;
GEGL_EXPORT void glCopyColorSubTable(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)const;
GEGL_EXPORT void glGetNamedFramebufferParameterfvAMD(GLuint framebuffer,GLenum pname,GLuint numsamples,GLuint pixelindex,GLsizei size,GLfloat* values)const;
GEGL_EXPORT void glVertexAttribL3d(GLuint index,GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glFragmentMaterialfvSGIX(GLenum face,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glMatrixLoadTranspose3x3fNV(GLenum matrixMode,const GLfloat* m)const;
GEGL_EXPORT void glDeleteNamesAMD(GLenum identifier,GLuint num,const GLuint* names)const;
GEGL_EXPORT void glDrawRangeElementsEXT(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void* indices)const;
GEGL_EXPORT void glOrtho(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble near_val,GLdouble far_val)const;
GEGL_EXPORT void glProgramUniform1dvEXT(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
GEGL_EXPORT void glColor4xOES(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)const;
GEGL_EXPORT void glTexImage4DSGIS(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLint border,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glProgramUniform1ui(GLuint program,GLint location,GLuint v0)const;
GEGL_EXPORT void glDeleteBuffersARB(GLsizei n,const GLuint* buffers)const;
GEGL_EXPORT GLboolean glUnmapBufferARB(GLenum target)const;
GEGL_EXPORT void glCopyTexImage2D(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)const;
GEGL_EXPORT void glMaterialxOES(GLenum face,GLenum pname,GLfixed param)const;
GEGL_EXPORT void glProgramUniformMatrix2x4fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT GLboolean glTestObjectAPPLE(GLenum object,GLuint name)const;
GEGL_EXPORT void glRenderbufferStorageEXT(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glVertexAttribL1ui64ARB(GLuint index,GLuint64EXT x)const;
GEGL_EXPORT void glEndFragmentShaderATI()const;
GEGL_EXPORT void glPathParameterivNV(GLuint path,GLenum pname,const GLint* value)const;
GEGL_EXPORT void glUniform4uiv(GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glFrameZoomSGIX(GLint factor)const;
GEGL_EXPORT void glSecondaryColor3fEXT(GLfloat red,GLfloat green,GLfloat blue)const;
GEGL_EXPORT void glLGPUInterlockNVX()const;
GEGL_EXPORT void glVertexAttribL1dv(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glNormalStream3svATI(GLenum stream,const GLshort* coords)const;
GEGL_EXPORT void glPathStencilFuncNV(GLenum func,GLint ref,GLuint mask)const;
GEGL_EXPORT void glSetInvariantEXT(GLuint id,GLenum type,const void* addr)const;
GEGL_EXPORT void glGetTexBumpParameterivATI(GLenum pname,GLint* param)const;
GEGL_EXPORT void glBlendEquationSeparateEXT(GLenum modeRGB,GLenum modeAlpha)const;
GEGL_EXPORT void glEndOcclusionQueryNV()const;
GEGL_EXPORT void glScissorArrayv(GLuint first,GLsizei count,const GLint* v)const;
GEGL_EXPORT void glCallList(GLuint list)const;
GEGL_EXPORT void* glMapTexture2DINTEL(GLuint texture,GLint level,GLbitfield access,GLint* stride,GLenum* layout)const;
GEGL_EXPORT GLVULKANPROCNV glGetVkProcAddrNV(const GLchar* name)const;
GEGL_EXPORT void glPixelTransferxOES(GLenum pname,GLfixed param)const;
GEGL_EXPORT void glDeleteRenderbuffersEXT(GLsizei n,const GLuint* renderbuffers)const;
GEGL_EXPORT void glTexCoord4fColor4fNormal3fVertex4fSUN(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glProgramUniformMatrix4dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glGetnColorTable(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void* table)const;
GEGL_EXPORT void glFramebufferTextureLayerARB(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)const;
GEGL_EXPORT void glVertexAttribL2dvEXT(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glGetCombinerStageParameterfvNV(GLenum stage,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glMultiTexCoord1xvOES(GLenum texture,const GLfixed* coords)const;
GEGL_EXPORT void* glMapBuffer(GLenum target,GLenum access)const;
GEGL_EXPORT void glSecondaryColor3d(GLdouble red,GLdouble green,GLdouble blue)const;
GEGL_EXPORT void glSecondaryColor3f(GLfloat red,GLfloat green,GLfloat blue)const;
GEGL_EXPORT void glVertexAttribLFormat(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)const;
GEGL_EXPORT void glElementPointerAPPLE(GLenum type,const void* pointer)const;
GEGL_EXPORT void glVertexStream1fATI(GLenum stream,GLfloat x)const;
GEGL_EXPORT void glCoverageModulationNV(GLenum components)const;
GEGL_EXPORT void glSecondaryColor3i(GLint red,GLint green,GLint blue)const;
GEGL_EXPORT void glDeleteSync(GLsync sync)const;
GEGL_EXPORT void glGetProgramParameterfvNV(GLenum target,GLuint index,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glMaxShaderCompilerThreadsARB(GLuint count)const;
GEGL_EXPORT void glUniformMatrix4x2dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glVertexArrayVertexAttribLOffsetEXT(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
GEGL_EXPORT void glSecondaryColor3s(GLshort red,GLshort green,GLshort blue)const;
GEGL_EXPORT GLboolean glIsImageHandleResidentNV(GLuint64 handle)const;
GEGL_EXPORT void glUniform3iv(GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glVertexAttribL3i64vNV(GLuint index,const GLint64EXT* v)const;
GEGL_EXPORT void glPolygonMode(GLenum face,GLenum mode)const;
GEGL_EXPORT void glFramebufferSamplePositionsfvAMD(GLenum target,GLuint numsamples,GLuint pixelindex,const GLfloat* values)const;
GEGL_EXPORT void glConvolutionFilter1DEXT(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void* image)const;
GEGL_EXPORT void glVertexAttrib1dvARB(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glTextureSubImage2DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT GLboolean glIsVertexArrayAPPLE(GLuint array)const;
GEGL_EXPORT void glUseProgram(GLuint program)const;
GEGL_EXPORT void glLineStipple(GLint factor,GLushort pattern)const;
GEGL_EXPORT void glMultiTexCoord4fvARB(GLenum target,const GLfloat* v)const;
GEGL_EXPORT GLenum glVideoCaptureNV(GLuint video_capture_slot,GLuint* sequence_num,GLuint64EXT* capture_time)const;
GEGL_EXPORT void glVertexArrayVertexAttribLFormatEXT(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)const;
GEGL_EXPORT void glUniform3fvARB(GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glProgramUniformMatrix3x2fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glCopyTextureSubImage3DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glMultiTexCoord2bvOES(GLenum texture,const GLbyte* coords)const;
GEGL_EXPORT void glDeleteObjectARB(GLhandleARB obj)const;
GEGL_EXPORT void glTextureLightEXT(GLenum pname)const;
GEGL_EXPORT void glRasterPos3i(GLint x,GLint y,GLint z)const;
GEGL_EXPORT void glMultiTexCoord3dARB(GLenum target,GLdouble s,GLdouble t,GLdouble r)const;
GEGL_EXPORT void glNamedFramebufferTextureEXT(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)const;
GEGL_EXPORT void glTextureParameteriEXT(GLuint texture,GLenum target,GLenum pname,GLint param)const;
GEGL_EXPORT void glEvalCoord2xvOES(const GLfixed* coords)const;
GEGL_EXPORT void glBindVideoCaptureStreamBufferNV(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLintptrARB offset)const;
GEGL_EXPORT void glTexImage2DMultisampleCoverageNV(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)const;
GEGL_EXPORT GLint glGetAttribLocationARB(GLhandleARB programObj,const GLcharARB* name)const;
GEGL_EXPORT void glDeleteShader(GLuint shader)const;
GEGL_EXPORT void glVertexAttrib1fARB(GLuint index,GLfloat x)const;
GEGL_EXPORT void glTexCoord2fColor4ubVertex3fSUN(GLfloat s,GLfloat t,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glTexCoord4fVertex4fSUN(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glGetMapdv(GLenum target,GLenum query,GLdouble* v)const;
GEGL_EXPORT void glMapParameterfvNV(GLenum target,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glTextureParameterIuiv(GLuint texture,GLenum pname,const GLuint* params)const;
GEGL_EXPORT void glTransformFeedbackAttribsNV(GLsizei count,const GLint* attribs,GLenum bufferMode)const;
GEGL_EXPORT void glFragmentLightfvSGIX(GLenum light,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glWindowPos3sARB(GLshort x,GLshort y,GLshort z)const;
GEGL_EXPORT void glGetConvolutionParameterfv(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glCopyTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glVertexAttribI3i(GLuint index,GLint x,GLint y,GLint z)const;
GEGL_EXPORT GLhandleARB glCreateShaderObjectARB(GLenum shaderType)const;
GEGL_EXPORT void glVertexAttribFormat(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)const;
GEGL_EXPORT void glGetProgramivARB(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glVertexAttribI4usv(GLuint index,const GLushort* v)const;
GEGL_EXPORT void glTexParameterf(GLenum target,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glVertexAttribBinding(GLuint attribindex,GLuint bindingindex)const;
GEGL_EXPORT void glGetHistogramParameteriv(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glTexParameteri(GLenum target,GLenum pname,GLint param)const;
GEGL_EXPORT void glGetShaderSource(GLuint shader,GLsizei bufSize,GLsizei* length,GLchar* source)const;
GEGL_EXPORT void glVertexAttrib4s(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)const;
GEGL_EXPORT void glVertexAttrib4dvNV(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glVertexAttrib1dvNV(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glPopName()const;
GEGL_EXPORT void glTextureBufferEXT(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer)const;
GEGL_EXPORT void glGetMultiTexImageEXT(GLenum texunit,GLenum target,GLint level,GLenum format,GLenum type,void* pixels)const;
GEGL_EXPORT void glGetPointerIndexedvEXT(GLenum target,GLuint index,void** data)const;
GEGL_EXPORT GLboolean glIsNameAMD(GLenum identifier,GLuint name)const;
GEGL_EXPORT void glColor4ub(GLubyte red,GLubyte green,GLubyte blue,GLubyte alpha)const;
GEGL_EXPORT void glBufferParameteriAPPLE(GLenum target,GLenum pname,GLint param)const;
GEGL_EXPORT void glColor4ui(GLuint red,GLuint green,GLuint blue,GLuint alpha)const;
GEGL_EXPORT void glGetInternalformativ(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint* params)const;
GEGL_EXPORT void glColor4us(GLushort red,GLushort green,GLushort blue,GLushort alpha)const;
GEGL_EXPORT void glVertexAttribP1uiv(GLuint index,GLenum type,GLboolean normalized,const GLuint* value)const;
GEGL_EXPORT void glLinkProgram(GLuint program)const;
GEGL_EXPORT void glTexCoord3s(GLshort s,GLshort t,GLshort r)const;
GEGL_EXPORT void glTexCoord2dv(const GLdouble* v)const;
GEGL_EXPORT void glGetObjectLabel(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei* length,GLchar* label)const;
GEGL_EXPORT void glVertexPointerEXT(GLint size,GLenum type,GLsizei stride,GLsizei count,const void* pointer)const;
GEGL_EXPORT void glDebugMessageCallbackARB(GLDEBUGPROCARB callback,const void* userParam)const;
GEGL_EXPORT const GLubyte* glGetString(GLenum name)const;
GEGL_EXPORT void glGetPathParameterfvNV(GLuint path,GLenum pname,GLfloat* value)const;
GEGL_EXPORT void glLightxvOES(GLenum light,GLenum pname,const GLfixed* params)const;
GEGL_EXPORT void glEndQuery(GLenum target)const;
GEGL_EXPORT void glSecondaryColor3uiv(const GLuint* v)const;
GEGL_EXPORT void glPrioritizeTexturesxOES(GLsizei n,const GLuint* textures,const GLfixed* priorities)const;
GEGL_EXPORT void glEdgeFlagPointer(GLsizei stride,const GLvoid* ptr)const;
GEGL_EXPORT void glFramebufferParameteri(GLenum target,GLenum pname,GLint param)const;
GEGL_EXPORT void glTexCoord3hNV(GLhalfNV s,GLhalfNV t,GLhalfNV r)const;
GEGL_EXPORT void glMultiModeDrawElementsIBM(const GLenum* mode,const GLsizei* count,GLenum type,const void*const* indices,GLsizei primcount,GLint modestride)const;
GEGL_EXPORT void glCopyPixels(GLint x,GLint y,GLsizei width,GLsizei height,GLenum type)const;
GEGL_EXPORT void glVertexAttribI2ui(GLuint index,GLuint x,GLuint y)const;
GEGL_EXPORT void glClampColorARB(GLenum target,GLenum clamp)const;
GEGL_EXPORT void glColorPointervINTEL(GLint size,GLenum type,const void** pointer)const;
GEGL_EXPORT void glDeleteTextures(GLsizei n,const GLuint* textures)const;
GEGL_EXPORT void glGetMinmaxParameterfvEXT(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glWindowPos3sMESA(GLshort x,GLshort y,GLshort z)const;
GEGL_EXPORT void glVertexAttrib4f(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glNamedFramebufferParameteri(GLuint framebuffer,GLenum pname,GLint param)const;
GEGL_EXPORT void glTexCoord2fVertex3fvSUN(const GLfloat* tc,const GLfloat* v)const;
GEGL_EXPORT void glReplacementCodeusSUN(GLushort code)const;
GEGL_EXPORT void glGetNamedFramebufferParameteriv(GLuint framebuffer,GLenum pname,GLint* param)const;
GEGL_EXPORT void glVertexStream1fvATI(GLenum stream,const GLfloat* coords)const;
GEGL_EXPORT void glCreateVertexArrays(GLsizei n,GLuint* arrays)const;
GEGL_EXPORT void glBeginConditionalRender(GLuint id,GLenum mode)const;
GEGL_EXPORT void glGetUnsignedBytevEXT(GLenum pname,GLubyte* data)const;
GEGL_EXPORT void glConvolutionFilter1D(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid* image)const;
GEGL_EXPORT void glMultiTexCoord3fARB(GLenum target,GLfloat s,GLfloat t,GLfloat r)const;
GEGL_EXPORT void glGetQueryObjectuivARB(GLuint id,GLenum pname,GLuint* params)const;
GEGL_EXPORT void glScalexOES(GLfixed x,GLfixed y,GLfixed z)const;
GEGL_EXPORT void glSamplerParameteri(GLuint sampler,GLenum pname,GLint param)const;
GEGL_EXPORT void glSamplerParameterf(GLuint sampler,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glShaderOp1EXT(GLenum op,GLuint res,GLuint arg1)const;
GEGL_EXPORT void glBeginVideoCaptureNV(GLuint video_capture_slot)const;
GEGL_EXPORT void glGetnHistogram(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void* values)const;
GEGL_EXPORT void glUniform1d(GLint location,GLdouble x)const;
GEGL_EXPORT GLint glRenderMode(GLenum mode)const;
GEGL_EXPORT void glClearColorIiEXT(GLint red,GLint green,GLint blue,GLint alpha)const;
GEGL_EXPORT void glSignalSemaphoreEXT(GLuint semaphore,GLuint numBufferBarriers,const GLuint* buffers,GLuint numTextureBarriers,const GLuint* textures,const GLenum* dstLayouts)const;
GEGL_EXPORT void glGetCompressedTexImage(GLenum target,GLint lod,GLvoid* img)const;
GEGL_EXPORT void glCompressedTextureImage1DEXT(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void* bits)const;
GEGL_EXPORT void glGetActiveUniformBlockiv(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint* params)const;
GEGL_EXPORT void glUniform1i(GLint location,GLint v0)const;
GEGL_EXPORT void glMultiDrawArraysIndirectCount(GLenum mode,const void* indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)const;
GEGL_EXPORT void glGetTexEnvfv(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glColorTableParameterivSGI(GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glCullFace(GLenum mode)const;
GEGL_EXPORT void glDeleteFencesAPPLE(GLsizei n,const GLuint* fences)const;
GEGL_EXPORT void glProgramUniform4i(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)const;
GEGL_EXPORT void glUniformHandleui64ARB(GLint location,GLuint64 value)const;
GEGL_EXPORT void glProgramUniform4f(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)const;
GEGL_EXPORT void glViewportIndexedf(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)const;
GEGL_EXPORT void glProgramUniform4d(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)const;
GEGL_EXPORT void glTexCoord1xOES(GLfixed s)const;
GEGL_EXPORT void glVertexStream3ivATI(GLenum stream,const GLint* coords)const;
GEGL_EXPORT GLboolean glPointAlongPathNV(GLuint path,GLsizei startSegment,GLsizei numSegments,GLfloat distance,GLfloat* x,GLfloat* y,GLfloat* tangentX,GLfloat* tangentY)const;
GEGL_EXPORT void glEndQueryARB(GLenum target)const;
GEGL_EXPORT void glVDPAUMapSurfacesNV(GLsizei numSurfaces,const GLvdpauSurfaceNV* surfaces)const;
GEGL_EXPORT void glVertex3i(GLint x,GLint y,GLint z)const;
GEGL_EXPORT void glVertexAttrib4uivARB(GLuint index,const GLuint* v)const;
GEGL_EXPORT void glTextureStorageMem3DEXT(GLuint texture,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLuint memory,GLuint64 offset)const;
GEGL_EXPORT void glAttachShader(GLuint program,GLuint shader)const;
GEGL_EXPORT void glColor4hNV(GLhalfNV red,GLhalfNV green,GLhalfNV blue,GLhalfNV alpha)const;
GEGL_EXPORT void glGetFenceivNV(GLuint fence,GLenum pname,GLint* params)const;
GEGL_EXPORT void glTexCoord2fColor4ubVertex3fvSUN(const GLfloat* tc,const GLubyte* c,const GLfloat* v)const;
GEGL_EXPORT void glGetColorTable(GLenum target,GLenum format,GLenum type,GLvoid* table)const;
GEGL_EXPORT void glFogCoordPointer(GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glTexStorageSparseAMD(GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)const;
GEGL_EXPORT GLboolean glUnmapNamedBuffer(GLuint buffer)const;
GEGL_EXPORT void glTexCoord4bvOES(const GLbyte* coords)const;
GEGL_EXPORT void glVertexAttrib3fARB(GLuint index,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glRasterPos2xOES(GLfixed x,GLfixed y)const;
GEGL_EXPORT void glCreateMemoryObjectsEXT(GLsizei n,GLuint* memoryObjects)const;
GEGL_EXPORT void glColor4ubVertex2fvSUN(const GLubyte* c,const GLfloat* v)const;
GEGL_EXPORT void glSecondaryColor3dv(const GLdouble* v)const;
GEGL_EXPORT void glVertexAttribI4sv(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glDrawTransformFeedbackStreamInstanced(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount)const;
GEGL_EXPORT void glMultiTexCoord4ivARB(GLenum target,const GLint* v)const;
GEGL_EXPORT void glSpriteParameterfSGIX(GLenum pname,GLfloat param)const;
GEGL_EXPORT void glSecondaryColor3sv(const GLshort* v)const;
GEGL_EXPORT void glBindVideoCaptureStreamTextureNV(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLenum target,GLuint texture)const;
GEGL_EXPORT void glTexParameterIuiv(GLenum target,GLenum pname,const GLuint* params)const;
GEGL_EXPORT void glFlushPixelDataRangeNV(GLenum target)const;
GEGL_EXPORT void glWindowPos3fv(const GLfloat* v)const;
GEGL_EXPORT void glVertexAttribLFormatNV(GLuint index,GLint size,GLenum type,GLsizei stride)const;
GEGL_EXPORT void glLightModelfv(GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glGetColorTableSGI(GLenum target,GLenum format,GLenum type,void* table)const;
GEGL_EXPORT void glGetCompressedTexImageARB(GLenum target,GLint level,void* img)const;
GEGL_EXPORT void glConvolutionParameteri(GLenum target,GLenum pname,GLint params)const;
GEGL_EXPORT void glVertexWeighthNV(GLhalfNV weight)const;
GEGL_EXPORT void glColorMaskIndexedEXT(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)const;
GEGL_EXPORT void glColorMaski(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)const;
GEGL_EXPORT void glColorFragmentOp1ATI(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)const;
GEGL_EXPORT void glVertexAttribI4ubvEXT(GLuint index,const GLubyte* v)const;
GEGL_EXPORT void glVertexAttrib1dNV(GLuint index,GLdouble x)const;
GEGL_EXPORT void glUnmapObjectBufferATI(GLuint buffer)const;
GEGL_EXPORT void glNamedProgramLocalParameterI4uiEXT(GLuint program,GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)const;
GEGL_EXPORT void glProgramUniform1iEXT(GLuint program,GLint location,GLint v0)const;
GEGL_EXPORT void glDeleteQueriesARB(GLsizei n,const GLuint* ids)const;
GEGL_EXPORT void glWindowPos3svARB(const GLshort* v)const;
GEGL_EXPORT void glVertex4s(GLshort x,GLshort y,GLshort z,GLshort w)const;
GEGL_EXPORT void glImportMemoryWin32NameEXT(GLuint memory,GLuint64 size,GLenum handleType,const void* name)const;
GEGL_EXPORT void glStringMarkerGREMEDY(GLsizei len,const void* string)const;
GEGL_EXPORT GLboolean glIsTransformFeedback(GLuint id)const;
GEGL_EXPORT void glProgramUniformMatrix2x3dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glGetObjectLabelEXT(GLenum type,GLuint object,GLsizei bufSize,GLsizei* length,GLchar* label)const;
GEGL_EXPORT void glUniformHandleui64vNV(GLint location,GLsizei count,const GLuint64* value)const;
GEGL_EXPORT void glRotated(GLdouble angle,GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT GLboolean glIsProgramPipeline(GLuint pipeline)const;
GEGL_EXPORT void glRotatef(GLfloat angle,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glVertex4i(GLint x,GLint y,GLint z,GLint w)const;
GEGL_EXPORT void glGetActiveSubroutineUniformName(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei* length,GLchar* name)const;
GEGL_EXPORT void glVertexAttrib4sNV(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)const;
GEGL_EXPORT void glProgramLocalParameter4dvARB(GLenum target,GLuint index,const GLdouble* params)const;
GEGL_EXPORT void glReplacementCodeubSUN(GLubyte code)const;
GEGL_EXPORT void glMultiDrawElementsIndirectBindlessNV(GLenum mode,GLenum type,const void* indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)const;
GEGL_EXPORT void glImportSemaphoreWin32HandleEXT(GLuint semaphore,GLenum handleType,void* handle)const;
GEGL_EXPORT void glUniformMatrix3fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glGetnMapfvARB(GLenum target,GLenum query,GLsizei bufSize,GLfloat* v)const;
GEGL_EXPORT void glGetnUniformfv(GLuint program,GLint location,GLsizei bufSize,GLfloat* params)const;
GEGL_EXPORT void glVertexAttribL2dv(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glVertexWeightPointerEXT(GLint size,GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glTangent3sEXT(GLshort tx,GLshort ty,GLshort tz)const;
GEGL_EXPORT void glSecondaryColorPointer(GLint size,GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glAlphaFunc(GLenum func,GLclampf ref)const;
GEGL_EXPORT void glGetNamedStringARB(GLint namelen,const GLchar* name,GLsizei bufSize,GLint* stringlen,GLchar* string)const;
GEGL_EXPORT void glTexCoord4d(GLdouble s,GLdouble t,GLdouble r,GLdouble q)const;
GEGL_EXPORT void glBufferPageCommitmentARB(GLenum target,GLintptr offset,GLsizeiptr size,GLboolean commit)const;
GEGL_EXPORT void glProgramLocalParameters4fvEXT(GLenum target,GLuint index,GLsizei count,const GLfloat* params)const;
GEGL_EXPORT void glStencilFunc(GLenum func,GLint ref,GLuint mask)const;
GEGL_EXPORT void glSemaphoreParameterui64vEXT(GLuint semaphore,GLenum pname,const GLuint64* params)const;
GEGL_EXPORT void glGetVertexAttribdvNV(GLuint index,GLenum pname,GLdouble* params)const;
GEGL_EXPORT void glTexCoord3dv(const GLdouble* v)const;
GEGL_EXPORT void glGetQueryBufferObjectiv(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)const;
GEGL_EXPORT void glTexGenxOES(GLenum coord,GLenum pname,GLfixed param)const;
GEGL_EXPORT void glMultiTexCoord1fvARB(GLenum target,const GLfloat* v)const;
GEGL_EXPORT void glLightEnviSGIX(GLenum pname,GLint param)const;
GEGL_EXPORT void glGetProgramPipelineiv(GLuint pipeline,GLenum pname,GLint* params)const;
GEGL_EXPORT void glVertexStream2ivATI(GLenum stream,const GLint* coords)const;
GEGL_EXPORT void glGetColorTableEXT(GLenum target,GLenum format,GLenum type,void* data)const;
GEGL_EXPORT void glGetShaderInfoLog(GLuint shader,GLsizei bufSize,GLsizei* length,GLchar* infoLog)const;
GEGL_EXPORT void glGetOcclusionQueryuivNV(GLuint id,GLenum pname,GLuint* params)const;
GEGL_EXPORT void glInvalidateNamedFramebufferSubData(GLuint framebuffer,GLsizei numAttachments,const GLenum* attachments,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glVertexAttribL1i64NV(GLuint index,GLint64EXT x)const;
GEGL_EXPORT void glVDPAUInitNV(const void* vdpDevice,const void* getProcAddress)const;
GEGL_EXPORT void glVertexAttrib1hvNV(GLuint index,const GLhalfNV* v)const;
GEGL_EXPORT void glVertexAttribI4i(GLuint index,GLint x,GLint y,GLint z,GLint w)const;
GEGL_EXPORT void glRasterPos2iv(const GLint* v)const;
GEGL_EXPORT void glGetIntegerui64i_vNV(GLenum value,GLuint index,GLuint64EXT* result)const;
GEGL_EXPORT void glUniformHandleui64NV(GLint location,GLuint64 value)const;
GEGL_EXPORT void glWindowPos3ivMESA(const GLint* v)const;
GEGL_EXPORT void glBlendEquationSeparate(GLenum modeRGB,GLenum modeAlpha)const;
GEGL_EXPORT void glDrawElementsInstancedARB(GLenum mode,GLsizei count,GLenum type,const void* indices,GLsizei primcount)const;
GEGL_EXPORT GLuint glGetSubroutineIndex(GLuint program,GLenum shadertype,const GLchar* name)const;
GEGL_EXPORT void glVertexAttrib2sv(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glSamplePatternSGIS(GLenum pattern)const;
GEGL_EXPORT void glEGLImageTargetRenderbufferStorageOES(GLenum target,GLeglImageOES image)const;
GEGL_EXPORT void glPushAttrib(GLbitfield mask)const;
GEGL_EXPORT void glVertex3hNV(GLhalfNV x,GLhalfNV y,GLhalfNV z)const;
GEGL_EXPORT void glRasterPos3xvOES(const GLfixed* coords)const;
GEGL_EXPORT void glPathParameterfNV(GLuint path,GLenum pname,GLfloat value)const;
GEGL_EXPORT void glGetUniformi64vNV(GLuint program,GLint location,GLint64EXT* params)const;
GEGL_EXPORT void glLightiv(GLenum light,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glMaterialxvOES(GLenum face,GLenum pname,const GLfixed* param)const;
GEGL_EXPORT void glNamedProgramLocalParameter4fEXT(GLuint program,GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glVertexAttribL1dEXT(GLuint index,GLdouble x)const;
GEGL_EXPORT void glGetnUniformdvARB(GLuint program,GLint location,GLsizei bufSize,GLdouble* params)const;
GEGL_EXPORT void glSecondaryColor3bEXT(GLbyte red,GLbyte green,GLbyte blue)const;
GEGL_EXPORT void glBeginPerfQueryINTEL(GLuint queryHandle)const;
GEGL_EXPORT void glProgramUniform1uivEXT(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glImageTransformParameterivHP(GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glDeleteBuffers(GLsizei n,const GLuint* buffers)const;
GEGL_EXPORT void glBindProgramPipeline(GLuint pipeline)const;
GEGL_EXPORT void glScissor(GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glProgramUniform4fv(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glGetBooleanv(GLenum pname,GLboolean* params)const;
GEGL_EXPORT void glMaterialfv(GLenum face,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glWindowPos4fvMESA(const GLfloat* v)const;
GEGL_EXPORT void glVertexAttribIPointerEXT(GLuint index,GLint size,GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glProgramBufferParametersfvNV(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLfloat* params)const;
GEGL_EXPORT void glAlphaFuncxOES(GLenum func,GLfixed ref)const;
GEGL_EXPORT void glMultiDrawArraysIndirectAMD(GLenum mode,const void* indirect,GLsizei primcount,GLsizei stride)const;
GEGL_EXPORT void glNormalStream3ivATI(GLenum stream,const GLint* coords)const;
GEGL_EXPORT void glTextureImage3DMultisampleNV(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)const;
GEGL_EXPORT void glProgramUniform4uivEXT(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glReplacementCodeusvSUN(const GLushort* code)const;
GEGL_EXPORT GLint glPollInstrumentsSGIX(GLint* marker_p)const;
GEGL_EXPORT void glGetTextureLevelParameteriv(GLuint texture,GLint level,GLenum pname,GLint* params)const;
GEGL_EXPORT void glVertexAttribI2uiv(GLuint index,const GLuint* v)const;
GEGL_EXPORT void glMapControlPointsNV(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLint uorder,GLint vorder,GLboolean packed,const void* points)const;
GEGL_EXPORT void glColor4dv(const GLdouble* v)const;
GEGL_EXPORT void glInvalidateBufferSubData(GLuint buffer,GLintptr offset,GLsizeiptr length)const;
GEGL_EXPORT void glMultiTexCoord1hNV(GLenum target,GLhalfNV s)const;
GEGL_EXPORT void glPointParameterfv(GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glUniformMatrix2fvARB(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glUniform2fv(GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glVertexPointerListIBM(GLint size,GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
GEGL_EXPORT void glGetMultiTexGenfvEXT(GLenum texunit,GLenum coord,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glGetMinmaxEXT(GLenum target,GLboolean reset,GLenum format,GLenum type,void* values)const;
GEGL_EXPORT GLboolean glIsFenceNV(GLuint fence)const;
GEGL_EXPORT void glMatrixFrustumEXT(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)const;
GEGL_EXPORT void glDispatchComputeIndirect(GLintptr indirect)const;
GEGL_EXPORT GLint glQueryResourceNV(GLenum queryType,GLint tagId,GLuint bufSize,GLint* buffer)const;
GEGL_EXPORT void glMultiTexCoord4bOES(GLenum texture,GLbyte s,GLbyte t,GLbyte r,GLbyte q)const;
GEGL_EXPORT void glProgramEnvParameter4dARB(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glProgramUniform1uiEXT(GLuint program,GLint location,GLuint v0)const;
GEGL_EXPORT void glBindBufferRange(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
GEGL_EXPORT void glNormal3iv(const GLint* v)const;
GEGL_EXPORT void glVertexAttribL3dv(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glGetUniformdv(GLuint program,GLint location,GLdouble* params)const;
GEGL_EXPORT void glGetMultiTexLevelParameterfvEXT(GLenum texunit,GLenum target,GLint level,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glFinalCombinerInputNV(GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)const;
GEGL_EXPORT void glCullParameterdvEXT(GLenum pname,GLdouble* params)const;
GEGL_EXPORT void glMultiTexCoord4s(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)const;
GEGL_EXPORT void glMapVertexAttrib1fAPPLE(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat* points)const;
GEGL_EXPORT void glConvolutionParameterfEXT(GLenum target,GLenum pname,GLfloat params)const;
GEGL_EXPORT void glTexCoord1iv(const GLint* v)const;
GEGL_EXPORT void glProgramUniform3fvEXT(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glColor3uiv(const GLuint* v)const;
GEGL_EXPORT void glRenderGpuMaskNV(GLbitfield mask)const;
GEGL_EXPORT void glListBase(GLuint base)const;
GEGL_EXPORT void glTexCoord2bOES(GLbyte s,GLbyte t)const;
GEGL_EXPORT GLuint glBindMaterialParameterEXT(GLenum face,GLenum value)const;
GEGL_EXPORT void glGlobalAlphaFactorubSUN(GLubyte factor)const;
GEGL_EXPORT void glVertexAttribL1ui64NV(GLuint index,GLuint64EXT x)const;
GEGL_EXPORT void glPointParameterfSGIS(GLenum pname,GLfloat param)const;
GEGL_EXPORT void glGetImageTransformParameterivHP(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glColorSubTableEXT(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void* data)const;
GEGL_EXPORT void glPixelTexGenParameterfvSGIS(GLenum pname,const GLfloat* params)const;
GEGL_EXPORT GLenum glClientWaitSync(GLsync sync,GLbitfield flags,GLuint64 timeout)const;
GEGL_EXPORT void glQueryObjectParameteruiAMD(GLenum target,GLuint id,GLenum pname,GLuint param)const;
GEGL_EXPORT void glVertexAttribs1fvNV(GLuint index,GLsizei count,const GLfloat* v)const;
GEGL_EXPORT void glVertexAttrib4NusvARB(GLuint index,const GLushort* v)const;
GEGL_EXPORT void glVariantPointerEXT(GLuint id,GLenum type,GLuint stride,const void* addr)const;
GEGL_EXPORT void glTextureBuffer(GLuint texture,GLenum internalformat,GLuint buffer)const;
GEGL_EXPORT void glVertexAttribI1uiEXT(GLuint index,GLuint x)const;
GEGL_EXPORT void glInvalidateTexImage(GLuint texture,GLint level)const;
GEGL_EXPORT void glProgramEnvParametersI4ivNV(GLenum target,GLuint index,GLsizei count,const GLint* params)const;
GEGL_EXPORT GLenum glPathGlyphIndexArrayNV(GLuint firstPathName,GLenum fontTarget,const void* fontName,GLbitfield fontStyle,GLuint firstGlyphIndex,GLsizei numGlyphs,GLuint pathParameterTemplate,GLfloat emScale)const;
GEGL_EXPORT void glCopyImageSubData(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)const;
GEGL_EXPORT void glGetUniformSubroutineuiv(GLenum shadertype,GLint location,GLuint* params)const;
GEGL_EXPORT void glBindVertexBuffer(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)const;
GEGL_EXPORT void glMultiTexCoord1iARB(GLenum target,GLint s)const;
GEGL_EXPORT void glDebugMessageInsert(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar* buf)const;
GEGL_EXPORT void glBeginVertexShaderEXT()const;
GEGL_EXPORT GLboolean glIsVariantEnabledEXT(GLuint id,GLenum cap)const;
GEGL_EXPORT void glPassThroughxOES(GLfixed token)const;
GEGL_EXPORT GLboolean glIsSampler(GLuint sampler)const;
GEGL_EXPORT void glConservativeRasterParameterfNV(GLenum pname,GLfloat value)const;
GEGL_EXPORT void glMultiTexGenivEXT(GLenum texunit,GLenum coord,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glNamedFramebufferTexture2DEXT(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)const;
GEGL_EXPORT void glCopyTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)const;
GEGL_EXPORT void glTexCoord1i(GLint s)const;
GEGL_EXPORT GLenum glCheckFramebufferStatus(GLenum target)const;
GEGL_EXPORT void glDrawElementArrayAPPLE(GLenum mode,GLint first,GLsizei count)const;
GEGL_EXPORT void glTexCoord1d(GLdouble s)const;
GEGL_EXPORT void glTexCoord1f(GLfloat s)const;
GEGL_EXPORT void glFragmentLightivSGIX(GLenum light,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glBindImageTexture(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)const;
GEGL_EXPORT void glTransformFeedbackVaryings(GLuint program,GLsizei count,const GLchar*const* varyings,GLenum bufferMode)const;
GEGL_EXPORT void glMulticastBufferSubDataNV(GLbitfield gpuMask,GLuint buffer,GLintptr offset,GLsizeiptr size,const GLvoid* data)const;
GEGL_EXPORT void glDrawRangeElements(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid* indices)const;
GEGL_EXPORT void glTexCoord1s(GLshort s)const;
GEGL_EXPORT void glBindBufferBase(GLenum target,GLuint index,GLuint buffer)const;
GEGL_EXPORT void glColor3bv(const GLbyte* v)const;
GEGL_EXPORT void glSyncTextureINTEL(GLuint texture)const;
GEGL_EXPORT void glCreateSamplers(GLsizei n,GLuint* samplers)const;
GEGL_EXPORT void glCombinerParameterfNV(GLenum pname,GLfloat param)const;
GEGL_EXPORT void glGetArrayObjectivATI(GLenum array,GLenum pname,GLint* params)const;
GEGL_EXPORT void glMultiDrawArrays(GLenum mode,const GLint* first,const GLsizei* count,GLsizei drawcount)const;
GEGL_EXPORT void glSampleMapATI(GLuint dst,GLuint interp,GLenum swizzle)const;
GEGL_EXPORT void glProgramUniform2i64ARB(GLuint program,GLint location,GLint64 x,GLint64 y)const;
GEGL_EXPORT void glBinormal3ivEXT(const GLint* v)const;
GEGL_EXPORT void glMultiDrawArraysIndirectCountARB(GLenum mode,const void* indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)const;
GEGL_EXPORT void glTextureStorageMem1DEXT(GLuint texture,GLsizei levels,GLenum internalFormat,GLsizei width,GLuint memory,GLuint64 offset)const;
GEGL_EXPORT void glWindowPos2ivMESA(const GLint* v)const;
GEGL_EXPORT void glTexCoordP4ui(GLenum type,GLuint coords)const;
GEGL_EXPORT void glMultiTexSubImage1DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glProgramUniformMatrix2x3fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glBufferDataARB(GLenum target,GLsizeiptrARB size,const void* data,GLenum usage)const;
GEGL_EXPORT void glVertexAttribIFormat(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)const;
GEGL_EXPORT void glCreateFramebuffers(GLsizei n,GLuint* framebuffers)const;
GEGL_EXPORT void glNormalStream3dvATI(GLenum stream,const GLdouble* coords)const;
GEGL_EXPORT void glClearAccum(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)const;
GEGL_EXPORT void glUniform3i64vNV(GLint location,GLsizei count,const GLint64EXT* value)const;
GEGL_EXPORT void glNormal3fVertex3fSUN(GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glUniform2uivEXT(GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glBeginQuery(GLenum target,GLuint id)const;
GEGL_EXPORT void glStencilThenCoverStrokePathInstancedNV(GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLint reference,GLuint mask,GLenum coverMode,GLenum transformType,const GLfloat* transformValues)const;
GEGL_EXPORT void glBindBuffer(GLenum target,GLuint buffer)const;
GEGL_EXPORT void glMap2d(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble* points)const;
GEGL_EXPORT void glMap2f(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat* points)const;
GEGL_EXPORT void glMakeImageHandleResidentNV(GLuint64 handle,GLenum access)const;
GEGL_EXPORT void glUniformMatrix2x4fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glGetMultiTexParameterfvEXT(GLenum texunit,GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glDepthRangeIndexed(GLuint index,GLdouble n,GLdouble f)const;
GEGL_EXPORT GLboolean glIsEnabled(GLenum cap)const;
GEGL_EXPORT void glMatrixScalefEXT(GLenum mode,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT GLenum glGetError()const;
GEGL_EXPORT void glGetTexEnviv(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT GLuint glBindTextureUnitParameterEXT(GLenum unit,GLenum value)const;
GEGL_EXPORT void glGetnUniformfvARB(GLuint program,GLint location,GLsizei bufSize,GLfloat* params)const;
GEGL_EXPORT void glReplacementCodeuiNormal3fVertex3fvSUN(const GLuint* rc,const GLfloat* n,const GLfloat* v)const;
GEGL_EXPORT void glDeletePerfQueryINTEL(GLuint queryHandle)const;
GEGL_EXPORT void glActiveVaryingNV(GLuint program,const GLchar* name)const;
GEGL_EXPORT void glGetActiveUniformARB(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei* length,GLint* size,GLenum* type,GLcharARB* name)const;
GEGL_EXPORT void glVertexAttribI3ivEXT(GLuint index,const GLint* v)const;
GEGL_EXPORT void glEvalCoord1d(GLdouble u)const;
GEGL_EXPORT void glNamedCopyBufferSubDataEXT(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)const;
GEGL_EXPORT void glEvalCoord1f(GLfloat u)const;
GEGL_EXPORT void glPixelMapfv(GLenum map,GLsizei mapsize,const GLfloat* values)const;
GEGL_EXPORT void glVertexAttribI1ivEXT(GLuint index,const GLint* v)const;
GEGL_EXPORT GLsync glCreateSyncFromCLeventARB(struct _cl_context* context,struct _cl_event* event,GLbitfield flags)const;
GEGL_EXPORT void glGetPixelMapusv(GLenum map,GLushort* values)const;
GEGL_EXPORT void glGetnColorTableARB(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void* table)const;
GEGL_EXPORT void glAccum(GLenum op,GLfloat value)const;
GEGL_EXPORT void glRasterPos3sv(const GLshort* v)const;
GEGL_EXPORT void glTexCoord2iv(const GLint* v)const;
GEGL_EXPORT void glBlendFunciARB(GLuint buf,GLenum src,GLenum dst)const;
GEGL_EXPORT void glProgramUniform3i64vARB(GLuint program,GLint location,GLsizei count,const GLint64* value)const;
GEGL_EXPORT void glGetFramebufferAttachmentParameteriv(GLenum target,GLenum attachment,GLenum pname,GLint* params)const;
GEGL_EXPORT void glProgramUniform4ui(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)const;
GEGL_EXPORT void glStencilMask(GLuint mask)const;
GEGL_EXPORT void glResetHistogramEXT(GLenum target)const;
GEGL_EXPORT void glLightxOES(GLenum light,GLenum pname,GLfixed param)const;
GEGL_EXPORT void glNamedBufferData(GLuint buffer,GLsizeiptr size,const void* data,GLenum usage)const;
GEGL_EXPORT void glVertexStream3sATI(GLenum stream,GLshort x,GLshort y,GLshort z)const;
GEGL_EXPORT void glVertexAttrib3fvARB(GLuint index,const GLfloat* v)const;
GEGL_EXPORT void glClearNamedBufferSubData(GLuint buffer,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void* data)const;
GEGL_EXPORT void glProgramUniformHandleui64ARB(GLuint program,GLint location,GLuint64 value)const;
GEGL_EXPORT void glUniform3iARB(GLint location,GLint v0,GLint v1,GLint v2)const;
GEGL_EXPORT GLhandleARB glCreateProgramObjectARB()const;
GEGL_EXPORT void glMultiTexCoord1dvARB(GLenum target,const GLdouble* v)const;
GEGL_EXPORT void glGetObjectParameterfvARB(GLhandleARB obj,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glRectsv(const GLshort* v1,const GLshort* v2)const;
GEGL_EXPORT void glMultiTexImage2DEXT(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glProgramUniform1i64NV(GLuint program,GLint location,GLint64EXT x)const;
GEGL_EXPORT void glGetObjectBufferivATI(GLuint buffer,GLenum pname,GLint* params)const;
GEGL_EXPORT void glUniform4i64ARB(GLint location,GLint64 x,GLint64 y,GLint64 z,GLint64 w)const;
GEGL_EXPORT void glReplacementCodeuiColor4ubVertex3fvSUN(const GLuint* rc,const GLubyte* c,const GLfloat* v)const;
GEGL_EXPORT void glBlendFuncSeparateINGR(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)const;
GEGL_EXPORT void glGetVideoCaptureStreamfvNV(GLuint video_capture_slot,GLuint stream,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glVertexAttrib2fARB(GLuint index,GLfloat x,GLfloat y)const;
GEGL_EXPORT void glGetTexGeniv(GLenum coord,GLenum pname,GLint* params)const;
GEGL_EXPORT void glPixelStorei(GLenum pname,GLint param)const;
GEGL_EXPORT void glGetCompressedTextureSubImage(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei bufSize,void* pixels)const;
GEGL_EXPORT void glCopyImageSubDataNV(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)const;
GEGL_EXPORT void glActiveShaderProgram(GLuint pipeline,GLuint program)const;
GEGL_EXPORT void glVertexStream1iATI(GLenum stream,GLint x)const;
GEGL_EXPORT void glPatchParameterfv(GLenum pname,const GLfloat* values)const;
GEGL_EXPORT GLboolean glIsFramebufferEXT(GLuint framebuffer)const;
GEGL_EXPORT void glTextureStorage2D(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glProgramUniform1ui64ARB(GLuint program,GLint location,GLuint64 x)const;
GEGL_EXPORT void glTexBufferRange(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
GEGL_EXPORT void glGetPixelTexGenParameterivSGIS(GLenum pname,GLint* params)const;
GEGL_EXPORT void glTextureSubImage3DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glClipControl(GLenum origin,GLenum depth)const;
GEGL_EXPORT void glGetProgramResourceiv(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum* props,GLsizei bufSize,GLsizei* length,GLint* params)const;
GEGL_EXPORT void glMultiTexCoordP2uiv(GLenum texture,GLenum type,const GLuint* coords)const;
GEGL_EXPORT void glVertexAttribI3ui(GLuint index,GLuint x,GLuint y,GLuint z)const;
GEGL_EXPORT void glSampleMaskSGIS(GLclampf value,GLboolean invert)const;
GEGL_EXPORT void glVertexAttrib4NivARB(GLuint index,const GLint* v)const;
GEGL_EXPORT void glGlobalAlphaFactorfSUN(GLfloat factor)const;
GEGL_EXPORT void glBlendEquationSeparateIndexedAMD(GLuint buf,GLenum modeRGB,GLenum modeAlpha)const;
GEGL_EXPORT void glGetPerfCounterInfoINTEL(GLuint queryId,GLuint counterId,GLuint counterNameLength,GLchar* counterName,GLuint counterDescLength,GLchar* counterDesc,GLuint* counterOffset,GLuint* counterDataSize,GLuint* counterTypeEnum,GLuint* counterDataTypeEnum,GLuint64* rawCounterMaxValue)const;
GEGL_EXPORT void glDeleteProgramsNV(GLsizei n,const GLuint* programs)const;
GEGL_EXPORT void glPixelZoomxOES(GLfixed xfactor,GLfixed yfactor)const;
GEGL_EXPORT void glGetCombinerOutputParameterivNV(GLenum stage,GLenum portion,GLenum pname,GLint* params)const;
GEGL_EXPORT void glRasterPos2xvOES(const GLfixed* coords)const;
GEGL_EXPORT void glGetTexImage(GLenum target,GLint level,GLenum format,GLenum type,GLvoid* pixels)const;
GEGL_EXPORT void glVertexArrayVertexBuffers(GLuint vaobj,GLuint first,GLsizei count,const GLuint* buffers,const GLintptr* offsets,const GLsizei* strides)const;
GEGL_EXPORT void glUniform1ui64NV(GLint location,GLuint64EXT x)const;
GEGL_EXPORT void glProgramParameteri(GLuint program,GLenum pname,GLint value)const;
GEGL_EXPORT void glNormal3xOES(GLfixed nx,GLfixed ny,GLfixed nz)const;
GEGL_EXPORT void glGetMapfv(GLenum target,GLenum query,GLfloat* v)const;
GEGL_EXPORT void glVertexStream2dvATI(GLenum stream,const GLdouble* coords)const;
GEGL_EXPORT void glPathStencilDepthOffsetNV(GLfloat factor,GLfloat units)const;
GEGL_EXPORT GLboolean glIsStateNV(GLuint state)const;
GEGL_EXPORT void glGetIntegerui64vNV(GLenum value,GLuint64EXT* result)const;
GEGL_EXPORT void glGetImageTransformParameterfvHP(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glRasterPos2fv(const GLfloat* v)const;
GEGL_EXPORT void glVertex3xOES(GLfixed x,GLfixed y)const;
GEGL_EXPORT GLboolean glIsMemoryObjectEXT(GLuint memoryObject)const;
GEGL_EXPORT void glWeightPointerARB(GLint size,GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glFinishFenceNV(GLuint fence)const;
GEGL_EXPORT void glDepthRangexOES(GLfixed n,GLfixed f)const;
GEGL_EXPORT void glEnableVertexArrayAttribEXT(GLuint vaobj,GLuint index)const;
GEGL_EXPORT void glProgramUniform2uivEXT(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glGetDoubleIndexedvEXT(GLenum target,GLuint index,GLdouble* data)const;
GEGL_EXPORT void glWindowPos2fMESA(GLfloat x,GLfloat y)const;
GEGL_EXPORT void glSecondaryColor3b(GLbyte red,GLbyte green,GLbyte blue)const;
GEGL_EXPORT void glCopyConvolutionFilter1DEXT(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)const;
GEGL_EXPORT void glWindowPos2sv(const GLshort* v)const;
GEGL_EXPORT void glBindFramebufferEXT(GLenum target,GLuint framebuffer)const;
GEGL_EXPORT GLuint glCreateShader(GLenum type)const;
GEGL_EXPORT GLuint glGenPathsNV(GLsizei range)const;
GEGL_EXPORT void glGenRenderbuffers(GLsizei n,GLuint* renderbuffers)const;
GEGL_EXPORT void glCopyTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glVertexAttrib4ubvARB(GLuint index,const GLubyte* v)const;
GEGL_EXPORT void glDrawTextureNV(GLuint texture,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)const;
GEGL_EXPORT void glVertexAttribs1svNV(GLuint index,GLsizei count,const GLshort* v)const;
GEGL_EXPORT void glClearNamedBufferSubDataEXT(GLuint buffer,GLenum internalformat,GLsizeiptr offset,GLsizeiptr size,GLenum format,GLenum type,const void* data)const;
GEGL_EXPORT void glBlendFuncSeparate(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)const;
GEGL_EXPORT void glPointParameterfARB(GLenum pname,GLfloat param)const;
GEGL_EXPORT void glTexCoord2fv(const GLfloat* v)const;
GEGL_EXPORT void glGetVariantFloatvEXT(GLuint id,GLenum value,GLfloat* data)const;
GEGL_EXPORT void glVertexP2ui(GLenum type,GLuint value)const;
GEGL_EXPORT void glWindowPos2dMESA(GLdouble x,GLdouble y)const;
GEGL_EXPORT void glTexCoord4fv(const GLfloat* v)const;
GEGL_EXPORT void glBindFragDataLocationEXT(GLuint program,GLuint color,const GLchar* name)const;
GEGL_EXPORT void glCompressedTexSubImage1DARB(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void* data)const;
GEGL_EXPORT void glGetTextureImageEXT(GLuint texture,GLenum target,GLint level,GLenum format,GLenum type,void* pixels)const;
GEGL_EXPORT void glFogCoordd(GLdouble coord)const;
GEGL_EXPORT void glPointSize(GLfloat size)const;
GEGL_EXPORT void glBindTextureUnit(GLuint unit,GLuint texture)const;
GEGL_EXPORT void glProgramEnvParameterI4uiNV(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)const;
GEGL_EXPORT void glGetProgramPipelineInfoLog(GLuint pipeline,GLsizei bufSize,GLsizei* length,GLchar* infoLog)const;
GEGL_EXPORT void glProgramUniform4i64vARB(GLuint program,GLint location,GLsizei count,const GLint64* value)const;
GEGL_EXPORT void glVertexAttrib4Nuiv(GLuint index,const GLuint* v)const;
GEGL_EXPORT void glGetUniformfvARB(GLhandleARB programObj,GLint location,GLfloat* params)const;
GEGL_EXPORT void glWaitSync(GLsync sync,GLbitfield flags,GLuint64 timeout)const;
GEGL_EXPORT void glUniform3i(GLint location,GLint v0,GLint v1,GLint v2)const;
GEGL_EXPORT void glBlendEquationSeparatei(GLuint buf,GLenum modeRGB,GLenum modeAlpha)const;
GEGL_EXPORT void glVertexAttrib2hvNV(GLuint index,const GLhalfNV* v)const;
GEGL_EXPORT void glTextureParameterivEXT(GLuint texture,GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glUniform3d(GLint location,GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glUniform3f(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)const;
GEGL_EXPORT void glActiveProgramEXT(GLuint program)const;
GEGL_EXPORT void glProgramUniform3uiv(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glUniform3ui64vARB(GLint location,GLsizei count,const GLuint64* value)const;
GEGL_EXPORT void glProgramUniform1ui64vARB(GLuint program,GLint location,GLsizei count,const GLuint64* value)const;
GEGL_EXPORT void glTextureParameterfEXT(GLuint texture,GLenum target,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glSetFragmentShaderConstantATI(GLuint dst,const GLfloat* value)const;
GEGL_EXPORT void glColorSubTable(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const GLvoid* data)const;
GEGL_EXPORT void glReplacementCodeuiSUN(GLuint code)const;
GEGL_EXPORT void glStateCaptureNV(GLuint state,GLenum mode)const;
GEGL_EXPORT void glBindAttribLocation(GLuint program,GLuint index,const GLchar* name)const;
GEGL_EXPORT void glWeightusvARB(GLint size,const GLushort* weights)const;
GEGL_EXPORT GLint glGetFragDataIndex(GLuint program,const GLchar* name)const;
GEGL_EXPORT void glMultiTexCoord2xOES(GLenum texture,GLfixed s,GLfixed t)const;
GEGL_EXPORT void glColor3sv(const GLshort* v)const;
GEGL_EXPORT void glTexCoord2fVertex3fSUN(GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glGetMemoryObjectParameterivEXT(GLuint memoryObject,GLenum pname,GLint* params)const;
GEGL_EXPORT void glPolygonOffsetEXT(GLfloat factor,GLfloat bias)const;
GEGL_EXPORT void glWeightPathsNV(GLuint resultPath,GLsizei numPaths,const GLuint* paths,const GLfloat* weights)const;
GEGL_EXPORT void glCombinerStageParameterfvNV(GLenum stage,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glPointParameterfEXT(GLenum pname,GLfloat param)const;
GEGL_EXPORT void glCopyTexImage1DEXT(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)const;
GEGL_EXPORT void glVertex4sv(const GLshort* v)const;
GEGL_EXPORT void glMatrixMultfEXT(GLenum mode,const GLfloat* m)const;
GEGL_EXPORT void glCompressedTextureSubImage3DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void* bits)const;
GEGL_EXPORT void glGetTexLevelParameterxvOES(GLenum target,GLint level,GLenum pname,GLfixed* params)const;
GEGL_EXPORT void glVertexAttribL3dvEXT(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glMultiTexCoordP4ui(GLenum texture,GLenum type,GLuint coords)const;
GEGL_EXPORT void glGetTextureLevelParameterivEXT(GLuint texture,GLenum target,GLint level,GLenum pname,GLint* params)const;
GEGL_EXPORT void glAlphaFragmentOp2ATI(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)const;
GEGL_EXPORT void glDeleteFramebuffers(GLsizei n,const GLuint* framebuffers)const;
GEGL_EXPORT void glDrawArrays(GLenum mode,GLint first,GLsizei count)const;
GEGL_EXPORT void glGetTransformFeedbackiv(GLuint xfb,GLenum pname,GLint* param)const;
GEGL_EXPORT void glGetnTexImageARB(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void* img)const;
GEGL_EXPORT void glClear(GLbitfield mask)const;
GEGL_EXPORT void glVertexArrayParameteriAPPLE(GLenum pname,GLint param)const;
GEGL_EXPORT void glMultiTexCoord2dvARB(GLenum target,const GLdouble* v)const;
GEGL_EXPORT void glGetVideoCaptureStreamdvNV(GLuint video_capture_slot,GLuint stream,GLenum pname,GLdouble* params)const;
GEGL_EXPORT void glFragmentLightModelivSGIX(GLenum pname,const GLint* params)const;
GEGL_EXPORT void glVertexAttribP2ui(GLuint index,GLenum type,GLboolean normalized,GLuint value)const;
GEGL_EXPORT void glMultiTexCoordPointerEXT(GLenum texunit,GLint size,GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glProgramUniform3iEXT(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)const;
GEGL_EXPORT void glTranslatef(GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glVertexAttrib4Nub(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)const;
GEGL_EXPORT void glTranslated(GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glSamplerParameterIiv(GLuint sampler,GLenum pname,const GLint* param)const;
GEGL_EXPORT void glTexCoord4hNV(GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)const;
GEGL_EXPORT void glDrawElementsIndirect(GLenum mode,GLenum type,const void* indirect)const;
GEGL_EXPORT void glDeletePerfMonitorsAMD(GLsizei n,GLuint* monitors)const;
GEGL_EXPORT GLboolean glIsRenderbufferEXT(GLuint renderbuffer)const;
GEGL_EXPORT void glDrawCommandsNV(GLenum primitiveMode,GLuint buffer,const GLintptr* indirects,const GLsizei* sizes,GLuint count)const;
GEGL_EXPORT void glUniform3ivARB(GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glBufferSubData(GLenum target,GLintptr offset,GLsizeiptr size,const void* data)const;
GEGL_EXPORT void glSecondaryColor3bv(const GLbyte* v)const;
GEGL_EXPORT void glMatrixMultTransposedEXT(GLenum mode,const GLdouble* m)const;
GEGL_EXPORT void glRequestResidentProgramsNV(GLsizei n,const GLuint* programs)const;
GEGL_EXPORT void glAlphaFragmentOp1ATI(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)const;
GEGL_EXPORT void glGetQueryObjecti64v(GLuint id,GLenum pname,GLint64* params)const;
GEGL_EXPORT void glMatrixMult3x3fNV(GLenum matrixMode,const GLfloat* m)const;
GEGL_EXPORT void glColorTableParameteriv(GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glPathSubCommandsNV(GLuint path,GLsizei commandStart,GLsizei commandsToDelete,GLsizei numCommands,const GLubyte* commands,GLsizei numCoords,GLenum coordType,const void* coords)const;
GEGL_EXPORT void glGetFinalCombinerInputParameterivNV(GLenum variable,GLenum pname,GLint* params)const;
GEGL_EXPORT GLboolean glIsRenderbuffer(GLuint renderbuffer)const;
GEGL_EXPORT void glVertex3iv(const GLint* v)const;
GEGL_EXPORT void glTexGenfv(GLenum coord,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glFrustumfOES(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)const;
GEGL_EXPORT void glBindVertexBuffers(GLuint first,GLsizei count,const GLuint* buffers,const GLintptr* offsets,const GLsizei* strides)const;
GEGL_EXPORT void glMateriali(GLenum face,GLenum pname,GLint param)const;
GEGL_EXPORT void glMultiTexCoord2svARB(GLenum target,const GLshort* v)const;
GEGL_EXPORT void glDisableVertexAttribArray(GLuint index)const;
GEGL_EXPORT void glWindowPos3ivARB(const GLint* v)const;
GEGL_EXPORT void glTexCoordFormatNV(GLint size,GLenum type,GLsizei stride)const;
GEGL_EXPORT void glBlitNamedFramebuffer(GLuint readFramebuffer,GLuint drawFramebuffer,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)const;
GEGL_EXPORT void glMatrixLoadTransposefEXT(GLenum mode,const GLfloat* m)const;
GEGL_EXPORT void glMultiTexGenfEXT(GLenum texunit,GLenum coord,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glShaderStorageBlockBinding(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)const;
GEGL_EXPORT void glMaterialf(GLenum face,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glReplacementCodeuiColor4fNormal3fVertex3fSUN(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT GLenum glCheckNamedFramebufferStatusEXT(GLuint framebuffer,GLenum target)const;
GEGL_EXPORT void glVertexArrayVertexAttribFormatEXT(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)const;
GEGL_EXPORT void glVertex2hNV(GLhalfNV x,GLhalfNV y)const;
GEGL_EXPORT void glDeleteVertexShaderEXT(GLuint id)const;
GEGL_EXPORT void glTexImage3DEXT(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glSignalVkFenceNV(GLuint64 vkFence)const;
GEGL_EXPORT void glProgramLocalParameterI4ivNV(GLenum target,GLuint index,const GLint* params)const;
GEGL_EXPORT void glGlobalAlphaFactoriSUN(GLint factor)const;
GEGL_EXPORT void glTextureStorage1D(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width)const;
GEGL_EXPORT void glBinormal3sEXT(GLshort bx,GLshort by,GLshort bz)const;
GEGL_EXPORT void glGetProgramInterfaceiv(GLuint program,GLenum programInterface,GLenum pname,GLint* params)const;
GEGL_EXPORT void glMatrixIndexPointerARB(GLint size,GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glTexCoordPointerEXT(GLint size,GLenum type,GLsizei stride,GLsizei count,const void* pointer)const;
GEGL_EXPORT void glMultiTexGeniEXT(GLenum texunit,GLenum coord,GLenum pname,GLint param)const;
GEGL_EXPORT void glVertexAttrib2fNV(GLuint index,GLfloat x,GLfloat y)const;
GEGL_EXPORT void glNamedProgramStringEXT(GLuint program,GLenum target,GLenum format,GLsizei len,const void* string)const;
GEGL_EXPORT void* glMapNamedBuffer(GLuint buffer,GLenum access)const;
GEGL_EXPORT void glGetMinmaxParameteriv(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetnUniformdv(GLuint program,GLint location,GLsizei bufSize,GLdouble* params)const;
GEGL_EXPORT void glEndConditionalRenderNVX()const;
GEGL_EXPORT void glBinormal3fEXT(GLfloat bx,GLfloat by,GLfloat bz)const;
GEGL_EXPORT void glNormalStream3iATI(GLenum stream,GLint nx,GLint ny,GLint nz)const;
GEGL_EXPORT void glProgramBufferParametersIivNV(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLint* params)const;
GEGL_EXPORT void glMapGrid1xOES(GLint n,GLfixed u1,GLfixed u2)const;
GEGL_EXPORT void glGetVertexAttribPointervARB(GLuint index,GLenum pname,void** pointer)const;
GEGL_EXPORT void glFlushMappedNamedBufferRangeEXT(GLuint buffer,GLintptr offset,GLsizeiptr length)const;
GEGL_EXPORT void glGetVertexAttribIiv(GLuint index,GLenum pname,GLint* params)const;
GEGL_EXPORT void glVertexP4uiv(GLenum type,const GLuint* value)const;
GEGL_EXPORT void glUniformui64NV(GLint location,GLuint64EXT value)const;
GEGL_EXPORT void glColor4fv(const GLfloat* v)const;
GEGL_EXPORT void glTexParameterxvOES(GLenum target,GLenum pname,const GLfixed* params)const;
GEGL_EXPORT void glPatchParameteri(GLenum pname,GLint value)const;
GEGL_EXPORT void glMap1d(GLenum target,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble* points)const;
GEGL_EXPORT void glGetTexFilterFuncSGIS(GLenum target,GLenum filter,GLfloat* weights)const;
GEGL_EXPORT void glVertexStream3dATI(GLenum stream,GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glVertexArrayVertexBindingDivisorEXT(GLuint vaobj,GLuint bindingindex,GLuint divisor)const;
GEGL_EXPORT void glMultiTexCoord3svARB(GLenum target,const GLshort* v)const;
GEGL_EXPORT void glBindProgramNV(GLenum target,GLuint id)const;
GEGL_EXPORT void glGetConvolutionParameteriv(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetProgramLocalParameterfvARB(GLenum target,GLuint index,GLfloat* params)const;
GEGL_EXPORT GLuint glGenFragmentShadersATI(GLuint range)const;
GEGL_EXPORT void glTexBumpParameterivATI(GLenum pname,const GLint* param)const;
GEGL_EXPORT void glGetNamedFramebufferAttachmentParameteriv(GLuint framebuffer,GLenum attachment,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetnSeparableFilter(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void* row,GLsizei columnBufSize,void* column,void* span)const;
GEGL_EXPORT void glNormal3xvOES(const GLfixed* coords)const;
GEGL_EXPORT void glPassTexCoordATI(GLuint dst,GLuint coord,GLenum swizzle)const;
GEGL_EXPORT void glFramebufferTextureFaceARB(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)const;
GEGL_EXPORT void glProgramUniform1dv(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
GEGL_EXPORT void glTextureStorage2DEXT(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glVertexArrayFogCoordOffsetEXT(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)const;
GEGL_EXPORT void glDeleteNamedStringARB(GLint namelen,const GLchar* name)const;
GEGL_EXPORT void glMulticastGetQueryObjecti64vNV(GLuint gpu,GLuint id,GLenum pname,GLint64* params)const;
GEGL_EXPORT void glGenOcclusionQueriesNV(GLsizei n,GLuint* ids)const;
GEGL_EXPORT void glLighti(GLenum light,GLenum pname,GLint param)const;
GEGL_EXPORT void glTexImage1D(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLint border,GLenum format,GLenum type,const GLvoid* pixels)const;
GEGL_EXPORT void glLightf(GLenum light,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glClientAttribDefaultEXT(GLbitfield mask)const;
GEGL_EXPORT void glVertexAttrib4bvARB(GLuint index,const GLbyte* v)const;
GEGL_EXPORT void glVertexAttribIFormatNV(GLuint index,GLint size,GLenum type,GLsizei stride)const;
GEGL_EXPORT void glStencilFuncSeparate(GLenum face,GLenum func,GLint ref,GLuint mask)const;
GEGL_EXPORT void glGetVertexAttribfvARB(GLuint index,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glVertexAttrib2dNV(GLuint index,GLdouble x,GLdouble y)const;
GEGL_EXPORT void glProgramUniform2iEXT(GLuint program,GLint location,GLint v0,GLint v1)const;
GEGL_EXPORT void glClientActiveVertexStreamATI(GLenum stream)const;
GEGL_EXPORT void glRasterPos3xOES(GLfixed x,GLfixed y,GLfixed z)const;
GEGL_EXPORT void glGetMapParameterivNV(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glSampleCoverage(GLclampf value,GLboolean invert)const;
GEGL_EXPORT void glClearDepthxOES(GLfixed depth)const;
GEGL_EXPORT void glUniformBufferEXT(GLuint program,GLint location,GLuint buffer)const;
GEGL_EXPORT void glTexCoord2fNormal3fVertex3fvSUN(const GLfloat* tc,const GLfloat* n,const GLfloat* v)const;
GEGL_EXPORT void glMulticastGetQueryObjectuivNV(GLuint gpu,GLuint id,GLenum pname,GLuint* params)const;
GEGL_EXPORT void glGetFirstPerfQueryIdINTEL(GLuint* queryId)const;
GEGL_EXPORT GLboolean glUnmapNamedBufferEXT(GLuint buffer)const;
GEGL_EXPORT void glGetTransformFeedbacki_v(GLuint xfb,GLenum pname,GLuint index,GLint* param)const;
GEGL_EXPORT void glUniform4fvARB(GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glRenderbufferStorageMultisampleCoverageNV(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glGetFloati_vEXT(GLenum pname,GLuint index,GLfloat* params)const;
GEGL_EXPORT void glBindAttribLocationARB(GLhandleARB programObj,GLuint index,const GLcharARB* name)const;
GEGL_EXPORT void glBufferAddressRangeNV(GLenum pname,GLuint index,GLuint64EXT address,GLsizeiptr length)const;
GEGL_EXPORT void glGenProgramsARB(GLsizei n,GLuint* programs)const;
GEGL_EXPORT void glMultiTexEnvivEXT(GLenum texunit,GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glSecondaryColor3uiEXT(GLuint red,GLuint green,GLuint blue)const;
GEGL_EXPORT void glCompressedTextureImage2DEXT(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void* bits)const;
GEGL_EXPORT void glUniform2i(GLint location,GLint v0,GLint v1)const;
GEGL_EXPORT void glCopyTexImage2DEXT(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)const;
GEGL_EXPORT void glUniform2d(GLint location,GLdouble x,GLdouble y)const;
GEGL_EXPORT void glVertexAttribL1d(GLuint index,GLdouble x)const;
GEGL_EXPORT void glFramebufferTextureFaceEXT(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)const;
GEGL_EXPORT void glFramebufferTextureLayer(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)const;
GEGL_EXPORT void glMultiTexCoord4bvOES(GLenum texture,const GLbyte* coords)const;
GEGL_EXPORT void glGetVertexArrayPointeri_vEXT(GLuint vaobj,GLuint index,GLenum pname,void** param)const;
GEGL_EXPORT void glNamedProgramLocalParameter4dEXT(GLuint program,GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glBinormal3bEXT(GLbyte bx,GLbyte by,GLbyte bz)const;
GEGL_EXPORT void glConvolutionFilter2DEXT(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void* image)const;
GEGL_EXPORT void glProgramUniform2fv(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glColor3fVertex3fSUN(GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glNormal3fVertex3fvSUN(const GLfloat* n,const GLfloat* v)const;
GEGL_EXPORT void glCopyMultiTexSubImage3DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glProgramLocalParameterI4iNV(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)const;
GEGL_EXPORT void glProgramUniformMatrix2x4dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT GLenum glPathMemoryGlyphIndexArrayNV(GLuint firstPathName,GLenum fontTarget,GLsizeiptr fontSize,const void* fontData,GLsizei faceIndex,GLuint firstGlyphIndex,GLsizei numGlyphs,GLuint pathParameterTemplate,GLfloat emScale)const;
GEGL_EXPORT void glDrawArraysEXT(GLenum mode,GLint first,GLsizei count)const;
GEGL_EXPORT void glBlendEquationEXT(GLenum mode)const;
GEGL_EXPORT void glStencilOp(GLenum fail,GLenum zfail,GLenum zpass)const;
GEGL_EXPORT void glCopyTextureSubImage2DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glTexEnvf(GLenum target,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glVertexAttrib2dvNV(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glGenPerfMonitorsAMD(GLsizei n,GLuint* monitors)const;
GEGL_EXPORT void glGetInteger64i_v(GLenum target,GLuint index,GLint64* data)const;
GEGL_EXPORT void glGetHistogramParameterfv(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glVertexFormatNV(GLint size,GLenum type,GLsizei stride)const;
GEGL_EXPORT void glBlendFuncIndexedAMD(GLuint buf,GLenum src,GLenum dst)const;
GEGL_EXPORT void glTexEnvi(GLenum target,GLenum pname,GLint param)const;
GEGL_EXPORT void glMultiTexCoord1iv(GLenum target,const GLint* v)const;
GEGL_EXPORT GLboolean glIsEnabledi(GLenum target,GLuint index)const;
GEGL_EXPORT void glVertexAttribL2ui64vNV(GLuint index,const GLuint64EXT* v)const;
GEGL_EXPORT void glVertexAttribL4i64NV(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)const;
GEGL_EXPORT void glMatrixTranslatedEXT(GLenum mode,GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glMakeTextureHandleResidentARB(GLuint64 handle)const;
GEGL_EXPORT void glMatrixMultdEXT(GLenum mode,const GLdouble* m)const;
GEGL_EXPORT void glBinormal3dvEXT(const GLdouble* v)const;
GEGL_EXPORT GLsync glImportSyncEXT(GLenum external_sync_type,GLintptr external_sync,GLbitfield flags)const;
GEGL_EXPORT void glGetMapiv(GLenum target,GLenum query,GLint* v)const;
GEGL_EXPORT void glImportSemaphoreFdEXT(GLuint semaphore,GLenum handleType,GLint fd)const;
GEGL_EXPORT void glMultiTexCoord4sv(GLenum target,const GLshort* v)const;
GEGL_EXPORT void glPNTrianglesiATI(GLenum pname,GLint param)const;
GEGL_EXPORT void glBindVertexArrayAPPLE(GLuint array)const;
GEGL_EXPORT void glObjectPtrLabel(const void* ptr,GLsizei length,const GLchar* label)const;
GEGL_EXPORT GLuint glGetDebugMessageLog(GLuint count,GLsizei bufSize,GLenum* sources,GLenum* types,GLuint* ids,GLenum* severities,GLsizei* lengths,GLchar* messageLog)const;
GEGL_EXPORT void glTrackMatrixNV(GLenum target,GLuint address,GLenum matrix,GLenum transform)const;
GEGL_EXPORT void glProgramPathFragmentInputGenNV(GLuint program,GLint location,GLenum genMode,GLint components,const GLfloat* coeffs)const;
GEGL_EXPORT void glTangent3ivEXT(const GLint* v)const;
GEGL_EXPORT void glGetUniformfv(GLuint program,GLint location,GLfloat* params)const;
GEGL_EXPORT void glSecondaryColor3ubv(const GLubyte* v)const;
GEGL_EXPORT void glMakeTextureHandleNonResidentNV(GLuint64 handle)const;
GEGL_EXPORT void glVertexAttribs4ubvNV(GLuint index,GLsizei count,const GLubyte* v)const;
GEGL_EXPORT void glClipPlanexOES(GLenum plane,const GLfixed* equation)const;
GEGL_EXPORT void glMultiTexCoord3iv(GLenum target,const GLint* v)const;
GEGL_EXPORT void glGetnPolygonStippleARB(GLsizei bufSize,GLubyte* pattern)const;
GEGL_EXPORT void glUniform2i64vNV(GLint location,GLsizei count,const GLint64EXT* value)const;
GEGL_EXPORT void glLightModelf(GLenum pname,GLfloat param)const;
GEGL_EXPORT void glDeleteMemoryObjectsEXT(GLsizei n,const GLuint* memoryObjects)const;
GEGL_EXPORT void glMultiTexSubImage2DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glReplacementCodeuiColor3fVertex3fSUN(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glTangent3dvEXT(const GLdouble* v)const;
GEGL_EXPORT void glLightModeli(GLenum pname,GLint param)const;
GEGL_EXPORT void glVertexWeighthvNV(const GLhalfNV* weight)const;
GEGL_EXPORT void glWindowPos3iv(const GLint* v)const;
GEGL_EXPORT void glMultiTexCoordP1uiv(GLenum texture,GLenum type,const GLuint* coords)const;
GEGL_EXPORT void glTransformPathNV(GLuint resultPath,GLuint srcPath,GLenum transformType,const GLfloat* transformValues)const;
GEGL_EXPORT void glProgramNamedParameter4dNV(GLuint id,GLsizei len,const GLubyte* name,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glMultiDrawElementsIndirect(GLenum mode,GLenum type,const void* indirect,GLsizei drawcount,GLsizei stride)const;
GEGL_EXPORT void glProgramUniform1dEXT(GLuint program,GLint location,GLdouble x)const;
GEGL_EXPORT void glCallLists(GLsizei n,GLenum type,const GLvoid* lists)const;
GEGL_EXPORT void glNormal3hvNV(const GLhalfNV* v)const;
GEGL_EXPORT void glGetCombinerOutputParameterfvNV(GLenum stage,GLenum portion,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glVertexAttrib4sARB(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)const;
GEGL_EXPORT void glTexCoord3i(GLint s,GLint t,GLint r)const;
GEGL_EXPORT void glVertexAttribI3uiv(GLuint index,const GLuint* v)const;
GEGL_EXPORT void glPushDebugGroup(GLenum source,GLuint id,GLsizei length,const GLchar* message)const;
GEGL_EXPORT void glTexCoord3f(GLfloat s,GLfloat t,GLfloat r)const;
GEGL_EXPORT void glTexCoord3d(GLdouble s,GLdouble t,GLdouble r)const;
GEGL_EXPORT void glTexCoord2xOES(GLfixed s,GLfixed t)const;
GEGL_EXPORT GLushort glGetStageIndexNV(GLenum shadertype)const;
GEGL_EXPORT void glProgramUniform4i64vNV(GLuint program,GLint location,GLsizei count,const GLint64EXT* value)const;
GEGL_EXPORT void glGetNamedBufferPointervEXT(GLuint buffer,GLenum pname,void** params)const;
GEGL_EXPORT void glTextureBarrierNV()const;
GEGL_EXPORT void glColor4ubVertex3fvSUN(const GLubyte* c,const GLfloat* v)const;
GEGL_EXPORT GLuint glGetCommandHeaderNV(GLenum tokenID,GLuint size)const;
GEGL_EXPORT void glGetPerfMonitorCounterInfoAMD(GLuint group,GLuint counter,GLenum pname,void* data)const;
GEGL_EXPORT void glVertexAttrib1svARB(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glCombinerParameteriNV(GLenum pname,GLint param)const;
GEGL_EXPORT void glMatrixMultTransposefEXT(GLenum mode,const GLfloat* m)const;
GEGL_EXPORT void glDetailTexFuncSGIS(GLenum target,GLsizei n,const GLfloat* points)const;
GEGL_EXPORT GLboolean glAreTexturesResident(GLsizei n,const GLuint* textures,GLboolean* residences)const;
GEGL_EXPORT void glProgramUniform2d(GLuint program,GLint location,GLdouble v0,GLdouble v1)const;
GEGL_EXPORT void glGetConvolutionParameterfvEXT(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glIndexPointerListIBM(GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
GEGL_EXPORT void glVertexAttribI4iEXT(GLuint index,GLint x,GLint y,GLint z,GLint w)const;
GEGL_EXPORT void glProgramUniform2f(GLuint program,GLint location,GLfloat v0,GLfloat v1)const;
GEGL_EXPORT void glRasterPos4sv(const GLshort* v)const;
GEGL_EXPORT void glColor4s(GLshort red,GLshort green,GLshort blue,GLshort alpha)const;
GEGL_EXPORT void glMulticastGetQueryObjectivNV(GLuint gpu,GLuint id,GLenum pname,GLint* params)const;
GEGL_EXPORT void glColorFragmentOp3ATI(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)const;
GEGL_EXPORT void glResizeBuffersMESA()const;
GEGL_EXPORT void glGetMinmaxParameterfv(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glClientActiveTextureARB(GLenum texture)const;
GEGL_EXPORT void glBindVertexArray(GLuint array)const;
GEGL_EXPORT void glColor4b(GLbyte red,GLbyte green,GLbyte blue,GLbyte alpha)const;
GEGL_EXPORT void glColor4f(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)const;
GEGL_EXPORT void glColor4d(GLdouble red,GLdouble green,GLdouble blue,GLdouble alpha)const;
GEGL_EXPORT void glColor4i(GLint red,GLint green,GLint blue,GLint alpha)const;
GEGL_EXPORT void glEdgeFlagFormatNV(GLsizei stride)const;
GEGL_EXPORT void glNamedBufferSubData(GLuint buffer,GLintptr offset,GLsizeiptr size,const void* data)const;
GEGL_EXPORT void glDrawElementsInstanced(GLenum mode,GLsizei count,GLenum type,const void* indices,GLsizei instancecount)const;
GEGL_EXPORT void glGetMultiTexParameterIivEXT(GLenum texunit,GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glVertex2dv(const GLdouble* v)const;
GEGL_EXPORT void glDisableVertexArrayAttribEXT(GLuint vaobj,GLuint index)const;
GEGL_EXPORT GLenum glObjectUnpurgeableAPPLE(GLenum objectType,GLuint name,GLenum option)const;
GEGL_EXPORT void glVertexAttribs2dvNV(GLuint index,GLsizei count,const GLdouble* v)const;
GEGL_EXPORT void glReplacementCodeuiTexCoord2fVertex3fSUN(GLuint rc,GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glGetMapParameterfvNV(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glProgramUniform4ivEXT(GLuint program,GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glProgramUniform3ui64vNV(GLuint program,GLint location,GLsizei count,const GLuint64EXT* value)const;
GEGL_EXPORT void glRectfv(const GLfloat* v1,const GLfloat* v2)const;
GEGL_EXPORT void glTexFilterFuncSGIS(GLenum target,GLenum filter,GLsizei n,const GLfloat* weights)const;
GEGL_EXPORT void glSpriteParameterfvSGIX(GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glCopyMultiTexImage1DEXT(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)const;
GEGL_EXPORT void glGetVertexAttribIuivEXT(GLuint index,GLenum pname,GLuint* params)const;
GEGL_EXPORT void glUniformMatrix2x4dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT GLint glGetProgramResourceLocationIndex(GLuint program,GLenum programInterface,const GLchar* name)const;
GEGL_EXPORT void glColor3hNV(GLhalfNV red,GLhalfNV green,GLhalfNV blue)const;
GEGL_EXPORT void glViewport(GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glProgramNamedParameter4fNV(GLuint id,GLsizei len,const GLubyte* name,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glGetInvariantBooleanvEXT(GLuint id,GLenum value,GLboolean* data)const;
GEGL_EXPORT void glTexStorage2DMultisample(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)const;
GEGL_EXPORT void glPixelStorex(GLenum pname,GLfixed param)const;
GEGL_EXPORT void glVertexAttribL1dvEXT(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glGetActiveSubroutineUniformiv(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint* values)const;
GEGL_EXPORT void glVertexAttribPointerARB(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glCompressedTexSubImage2DARB(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void* data)const;
GEGL_EXPORT void glTexStorageMem1DEXT(GLenum target,GLsizei levels,GLenum internalFormat,GLsizei width,GLuint memory,GLuint64 offset)const;
GEGL_EXPORT void glVertex2hvNV(const GLhalfNV* v)const;
GEGL_EXPORT void glTexBuffer(GLenum target,GLenum internalformat,GLuint buffer)const;
GEGL_EXPORT void glArrayElement(GLint i)const;
GEGL_EXPORT void glValidateProgram(GLuint program)const;
GEGL_EXPORT void glPixelStoref(GLenum pname,GLfloat param)const;
GEGL_EXPORT void glWindowPos3dARB(GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glEvalCoord1dv(const GLdouble* u)const;
GEGL_EXPORT void glVertexAttribs2fvNV(GLuint index,GLsizei count,const GLfloat* v)const;
GEGL_EXPORT void glRecti(GLint x1,GLint y1,GLint x2,GLint y2)const;
GEGL_EXPORT void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(const GLuint* rc,const GLfloat* tc,const GLfloat* c,const GLfloat* n,const GLfloat* v)const;
GEGL_EXPORT void glTexCoord1bOES(GLbyte s)const;
GEGL_EXPORT void glProgramUniform2i64vARB(GLuint program,GLint location,GLsizei count,const GLint64* value)const;
GEGL_EXPORT void glWindowPos2dARB(GLdouble x,GLdouble y)const;
GEGL_EXPORT void glGetProgramParameterdvNV(GLenum target,GLuint index,GLenum pname,GLdouble* params)const;
GEGL_EXPORT void glRectf(GLfloat x1,GLfloat y1,GLfloat x2,GLfloat y2)const;
GEGL_EXPORT void glRectd(GLdouble x1,GLdouble y1,GLdouble x2,GLdouble y2)const;
GEGL_EXPORT void glMap1xOES(GLenum target,GLfixed u1,GLfixed u2,GLint stride,GLint order,GLfixed points)const;
GEGL_EXPORT void glVertexAttrib3fvNV(GLuint index,const GLfloat* v)const;
GEGL_EXPORT void glReferencePlaneSGIX(const GLdouble* equation)const;
GEGL_EXPORT void glMulticastBlitFramebufferNV(GLuint srcGpu,GLuint dstGpu,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)const;
GEGL_EXPORT void glGetCombinerInputParameterfvNV(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLfloat* params)const;
GEGL_EXPORT GLuint64 glGetTextureSamplerHandleARB(GLuint texture,GLuint sampler)const;
GEGL_EXPORT void glBindTexture(GLenum target,GLuint texture)const;
GEGL_EXPORT void glRects(GLshort x1,GLshort y1,GLshort x2,GLshort y2)const;
GEGL_EXPORT void glGetActiveAttribARB(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei* length,GLint* size,GLenum* type,GLcharARB* name)const;
GEGL_EXPORT void glHistogramEXT(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)const;
GEGL_EXPORT GLuint64 glGetTextureSamplerHandleNV(GLuint texture,GLuint sampler)const;
GEGL_EXPORT void glDetachShader(GLuint program,GLuint shader)const;
GEGL_EXPORT void glFinishTextureSUNX()const;
GEGL_EXPORT void glUniformMatrix3x4dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glVertexAttrib4fARB(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glGetPathColorGenivNV(GLenum color,GLenum pname,GLint* value)const;
GEGL_EXPORT GLint glGetProgramResourceLocation(GLuint program,GLenum programInterface,const GLchar* name)const;
GEGL_EXPORT void glVertexArrayAttribLFormat(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)const;
GEGL_EXPORT void glGetTexLevelParameterfv(GLenum target,GLint level,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glVertexArrayVertexAttribOffsetEXT(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLintptr offset)const;
GEGL_EXPORT void glIndexFormatNV(GLenum type,GLsizei stride)const;
GEGL_EXPORT void glMultiTexCoord3i(GLenum target,GLint s,GLint t,GLint r)const;
GEGL_EXPORT void glReplacementCodeuiVertex3fvSUN(const GLuint* rc,const GLfloat* v)const;
GEGL_EXPORT void glViewportIndexedfv(GLuint index,const GLfloat* v)const;
GEGL_EXPORT void glBindBuffersBase(GLenum target,GLuint first,GLsizei count,const GLuint* buffers)const;
GEGL_EXPORT void glTexBumpParameterfvATI(GLenum pname,const GLfloat* param)const;
GEGL_EXPORT void glMatrixIndexuivARB(GLint size,const GLuint* indices)const;
GEGL_EXPORT void glVertexAttrib1hNV(GLuint index,GLhalfNV x)const;
GEGL_EXPORT void glWindowPos3svMESA(const GLshort* v)const;
GEGL_EXPORT void glStencilOpSeparateATI(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)const;
GEGL_EXPORT void glDrawElementsBaseVertex(GLenum mode,GLsizei count,GLenum type,const void* indices,GLint basevertex)const;
GEGL_EXPORT void glBlendEquationSeparateiARB(GLuint buf,GLenum modeRGB,GLenum modeAlpha)const;
GEGL_EXPORT void glVertexAttrib1fNV(GLuint index,GLfloat x)const;
GEGL_EXPORT void glMapVertexAttrib2fAPPLE(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat* points)const;
GEGL_EXPORT void glCompressedTextureSubImage1DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void* bits)const;
GEGL_EXPORT void glClearBufferSubData(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void* data)const;
GEGL_EXPORT void glTexStorage1D(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)const;
GEGL_EXPORT void glVertexAttribI3iEXT(GLuint index,GLint x,GLint y,GLint z)const;
GEGL_EXPORT void glMakeTextureHandleNonResidentARB(GLuint64 handle)const;
GEGL_EXPORT void glMultiDrawElementArrayAPPLE(GLenum mode,const GLint* first,const GLsizei* count,GLsizei primcount)const;
GEGL_EXPORT void glVertexStream4dATI(GLenum stream,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glProgramUniformMatrix2dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glVertexAttribs2hvNV(GLuint index,GLsizei n,const GLhalfNV* v)const;
GEGL_EXPORT void glGetUniformiv(GLuint program,GLint location,GLint* params)const;
GEGL_EXPORT void glClipPlanefOES(GLenum plane,const GLfloat* equation)const;
GEGL_EXPORT void glRenderbufferStorage(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glUniform4ui(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)const;
GEGL_EXPORT void glBindFramebuffer(GLenum target,GLuint framebuffer)const;
GEGL_EXPORT void glValidateProgramARB(GLhandleARB programObj)const;
GEGL_EXPORT void glTexGenf(GLenum coord,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glTexGend(GLenum coord,GLenum pname,GLdouble param)const;
GEGL_EXPORT void glTexGeni(GLenum coord,GLenum pname,GLint param)const;
GEGL_EXPORT void glDeleteFramebuffersEXT(GLsizei n,const GLuint* framebuffers)const;
GEGL_EXPORT void glResetMinmaxEXT(GLenum target)const;
GEGL_EXPORT void glVertexAttrib1fvNV(GLuint index,const GLfloat* v)const;
GEGL_EXPORT GLboolean glIsQueryARB(GLuint id)const;
GEGL_EXPORT void glEnableVariantClientStateEXT(GLuint id)const;
GEGL_EXPORT void glScissorIndexed(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glGetInvariantIntegervEXT(GLuint id,GLenum value,GLint* data)const;
GEGL_EXPORT void glProgramLocalParameterI4uiNV(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)const;
GEGL_EXPORT void glConvolutionParameterxvOES(GLenum target,GLenum pname,const GLfixed* params)const;
GEGL_EXPORT void glGenFramebuffersEXT(GLsizei n,GLuint* framebuffers)const;
GEGL_EXPORT void glVertexArrayColorOffsetEXT(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
GEGL_EXPORT void glMultiTexCoord3ivARB(GLenum target,const GLint* v)const;
GEGL_EXPORT void glVertexWeightfEXT(GLfloat weight)const;
GEGL_EXPORT void glRasterPos4dv(const GLdouble* v)const;
GEGL_EXPORT GLboolean glIsTextureHandleResidentARB(GLuint64 handle)const;
GEGL_EXPORT void glRasterPos2dv(const GLdouble* v)const;
GEGL_EXPORT void glWindowPos4ivMESA(const GLint* v)const;
GEGL_EXPORT void glGetVariantPointervEXT(GLuint id,GLenum value,void** data)const;
GEGL_EXPORT void* glMapNamedBufferRangeEXT(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)const;
GEGL_EXPORT void glGetnUniformui64vARB(GLuint program,GLint location,GLsizei bufSize,GLuint64* params)const;
GEGL_EXPORT GLuint glCreateShaderProgramv(GLenum type,GLsizei count,const GLchar*const* strings)const;
GEGL_EXPORT void glGetQueryObjectiv(GLuint id,GLenum pname,GLint* params)const;
GEGL_EXPORT void glMaxShaderCompilerThreadsKHR(GLuint count)const;
GEGL_EXPORT void glPNTrianglesfATI(GLenum pname,GLfloat param)const;
GEGL_EXPORT void glGlobalAlphaFactorusSUN(GLushort factor)const;
GEGL_EXPORT void glVertexAttrib3dvNV(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glMultiTexCoord3sARB(GLenum target,GLshort s,GLshort t,GLshort r)const;
GEGL_EXPORT void glGenerateMipmap(GLenum target)const;
GEGL_EXPORT void glCompressedTextureSubImage2D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void* data)const;
GEGL_EXPORT void glNamedRenderbufferStorageMultisampleEXT(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glPolygonOffsetClampEXT(GLfloat factor,GLfloat units,GLfloat clamp)const;
GEGL_EXPORT void glTextureRangeAPPLE(GLenum target,GLsizei length,const void* pointer)const;
GEGL_EXPORT void glBlendEquationIndexedAMD(GLuint buf,GLenum mode)const;
GEGL_EXPORT void glTexCoord2d(GLdouble s,GLdouble t)const;
GEGL_EXPORT void glPointParameteri(GLenum pname,GLint param)const;
GEGL_EXPORT void glTexCoord2f(GLfloat s,GLfloat t)const;
GEGL_EXPORT void glGetUnsignedBytei_vEXT(GLenum target,GLuint index,GLubyte* data)const;
GEGL_EXPORT void glColor4iv(const GLint* v)const;
GEGL_EXPORT void* glMapNamedBufferRange(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)const;
GEGL_EXPORT GLboolean glUnmapBuffer(GLenum target)const;
GEGL_EXPORT void glSampleMaskEXT(GLclampf value,GLboolean invert)const;
GEGL_EXPORT void glTexCoord2i(GLint s,GLint t)const;
GEGL_EXPORT void glTexCoord1xvOES(const GLfixed* coords)const;
GEGL_EXPORT void glVertexAttrib1sARB(GLuint index,GLshort x)const;
GEGL_EXPORT void glGetVertexArrayiv(GLuint vaobj,GLenum pname,GLint* param)const;
GEGL_EXPORT void glProgramParameter4dvNV(GLenum target,GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glTexCoord2s(GLshort s,GLshort t)const;
GEGL_EXPORT void glTextureParameterIuivEXT(GLuint texture,GLenum target,GLenum pname,const GLuint* params)const;
GEGL_EXPORT void glGetColorTableParameterfvSGI(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glTexCoord4dv(const GLdouble* v)const;
GEGL_EXPORT void glVertexAttrib1svNV(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glNamedFramebufferTextureFaceEXT(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLenum face)const;
GEGL_EXPORT void glProgramUniform2ui64vNV(GLuint program,GLint location,GLsizei count,const GLuint64EXT* value)const;
GEGL_EXPORT void glStencilFillPathNV(GLuint path,GLenum fillMode,GLuint mask)const;
GEGL_EXPORT void glNormal3dv(const GLdouble* v)const;
GEGL_EXPORT void glReleaseShaderCompiler()const;
GEGL_EXPORT void glTexStorageMem3DEXT(GLenum target,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLuint memory,GLuint64 offset)const;
GEGL_EXPORT void glTexCoord3bvOES(const GLbyte* coords)const;
GEGL_EXPORT GLboolean glIsVertexAttribEnabledAPPLE(GLuint index,GLenum pname)const;
GEGL_EXPORT void glTexCoord1dv(const GLdouble* v)const;
GEGL_EXPORT void glReadPixels(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLvoid* pixels)const;
GEGL_EXPORT void glVertexAttribI3iv(GLuint index,const GLint* v)const;
GEGL_EXPORT void glSetFenceAPPLE(GLuint fence)const;
GEGL_EXPORT void glWeightsvARB(GLint size,const GLshort* weights)const;
GEGL_EXPORT void glShadeModel(GLenum mode)const;
GEGL_EXPORT void glTextureStorageMem3DMultisampleEXT(GLuint texture,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset)const;
GEGL_EXPORT void glMapGrid1d(GLint un,GLdouble u1,GLdouble u2)const;
GEGL_EXPORT void glGetHistogramParameterivEXT(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glConservativeRasterParameteriNV(GLenum pname,GLint param)const;
GEGL_EXPORT void glClearNamedBufferData(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void* data)const;
GEGL_EXPORT void glClearDepthf(GLfloat d)const;
GEGL_EXPORT void glCreatePerfQueryINTEL(GLuint queryId,GLuint* queryHandle)const;
GEGL_EXPORT void glFogCoordfEXT(GLfloat coord)const;
GEGL_EXPORT void glVertexAttrib2dARB(GLuint index,GLdouble x,GLdouble y)const;
GEGL_EXPORT void glMultiTexCoord4dARB(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)const;
GEGL_EXPORT void glReadnPixelsARB(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void* data)const;
GEGL_EXPORT void glMultiTexBufferEXT(GLenum texunit,GLenum target,GLenum internalformat,GLuint buffer)const;
GEGL_EXPORT void glWindowPos4dvMESA(const GLdouble* v)const;
GEGL_EXPORT void glInvalidateNamedFramebufferData(GLuint framebuffer,GLsizei numAttachments,const GLenum* attachments)const;
GEGL_EXPORT void glSecondaryColorPointerListIBM(GLint size,GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
GEGL_EXPORT void glRectiv(const GLint* v1,const GLint* v2)const;
GEGL_EXPORT void glColorP4ui(GLenum type,GLuint color)const;
GEGL_EXPORT void glUseProgramStages(GLuint pipeline,GLbitfield stages,GLuint program)const;
GEGL_EXPORT void glRasterPos3dv(const GLdouble* v)const;
GEGL_EXPORT void glPathTexGenNV(GLenum texCoordSet,GLenum genMode,GLint components,const GLfloat* coeffs)const;
GEGL_EXPORT void glVertexBlendEnviATI(GLenum pname,GLint param)const;
GEGL_EXPORT void glUniform3i64ARB(GLint location,GLint64 x,GLint64 y,GLint64 z)const;
GEGL_EXPORT void glLoadMatrixf(const GLfloat* m)const;
GEGL_EXPORT void glProgramUniform2dEXT(GLuint program,GLint location,GLdouble x,GLdouble y)const;
GEGL_EXPORT void glVertexAttribI4iv(GLuint index,const GLint* v)const;
GEGL_EXPORT void glNamedFramebufferDrawBuffer(GLuint framebuffer,GLenum buf)const;
GEGL_EXPORT void glColor4ubv(const GLubyte* v)const;
GEGL_EXPORT void glColor3hvNV(const GLhalfNV* v)const;
GEGL_EXPORT void glGetMapAttribParameterfvNV(GLenum target,GLuint index,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glGetBufferSubData(GLenum target,GLintptr offset,GLsizeiptr size,void* data)const;
GEGL_EXPORT void glGetVertexAttribLdv(GLuint index,GLenum pname,GLdouble* params)const;
GEGL_EXPORT void glGetnUniformuiv(GLuint program,GLint location,GLsizei bufSize,GLuint* params)const;
GEGL_EXPORT void glGetUniformui64vNV(GLuint program,GLint location,GLuint64EXT* params)const;
GEGL_EXPORT void glNamedRenderbufferStorageEXT(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glVertexAttrib3dNV(GLuint index,GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glTextureStorage1DEXT(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)const;
GEGL_EXPORT void glPixelTexGenParameteriSGIS(GLenum pname,GLint param)const;
GEGL_EXPORT void glColorTableEXT(GLenum target,GLenum internalFormat,GLsizei width,GLenum format,GLenum type,const void* table)const;
GEGL_EXPORT void glGenBuffers(GLsizei n,GLuint* buffers)const;
GEGL_EXPORT void glMultiTexCoord3xvOES(GLenum texture,const GLfixed* coords)const;
GEGL_EXPORT void glExecuteProgramNV(GLenum target,GLuint id,const GLfloat* params)const;
GEGL_EXPORT void glVariantArrayObjectATI(GLuint id,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)const;
GEGL_EXPORT void glColor3xvOES(const GLfixed* components)const;
GEGL_EXPORT void glGetnConvolutionFilterARB(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void* image)const;
GEGL_EXPORT void glNormalFormatNV(GLenum type,GLsizei stride)const;
GEGL_EXPORT void glGetInvariantFloatvEXT(GLuint id,GLenum value,GLfloat* data)const;
GEGL_EXPORT void glClearNamedFramebufferiv(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLint* value)const;
GEGL_EXPORT void glTexImage3D(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid* pixels)const;
GEGL_EXPORT void glGenSamplers(GLsizei count,GLuint* samplers)const;
GEGL_EXPORT GLboolean glIsFramebuffer(GLuint framebuffer)const;
GEGL_EXPORT void glProgramUniform3dvEXT(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
GEGL_EXPORT void glGetVertexAttribfvNV(GLuint index,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glDrawRangeElementArrayAPPLE(GLenum mode,GLuint start,GLuint end,GLint first,GLsizei count)const;
GEGL_EXPORT void glUniform3i64NV(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)const;
GEGL_EXPORT void glMatrixPopEXT(GLenum mode)const;
GEGL_EXPORT void glVertexStream1sATI(GLenum stream,GLshort x)const;
GEGL_EXPORT void glGetnPixelMapuivARB(GLenum map,GLsizei bufSize,GLuint* values)const;
GEGL_EXPORT void glMultiTexEnviEXT(GLenum texunit,GLenum target,GLenum pname,GLint param)const;
GEGL_EXPORT void glVertexAttribI2iEXT(GLuint index,GLint x,GLint y)const;
GEGL_EXPORT void glProgramParameter4fvNV(GLenum target,GLuint index,const GLfloat* v)const;
GEGL_EXPORT void glWaitSemaphoreEXT(GLuint semaphore,GLuint numBufferBarriers,const GLuint* buffers,GLuint numTextureBarriers,const GLuint* textures,const GLenum* srcLayouts)const;
GEGL_EXPORT void glNamedFramebufferSampleLocationsfvNV(GLuint framebuffer,GLuint start,GLsizei count,const GLfloat* v)const;
GEGL_EXPORT void glTexCoordP4uiv(GLenum type,const GLuint* coords)const;
GEGL_EXPORT void glRectxvOES(const GLfixed* v1,const GLfixed* v2)const;
GEGL_EXPORT void glGetVariantIntegervEXT(GLuint id,GLenum value,GLint* data)const;
GEGL_EXPORT void glDeleteLists(GLuint list,GLsizei range)const;
GEGL_EXPORT void glTexGendv(GLenum coord,GLenum pname,const GLdouble* params)const;
GEGL_EXPORT void glVertexP2uiv(GLenum type,const GLuint* value)const;
GEGL_EXPORT void glGetPerfMonitorGroupsAMD(GLint* numGroups,GLsizei groupsSize,GLuint* groups)const;
GEGL_EXPORT void glMultTransposeMatrixfARB(const GLfloat* m)const;
GEGL_EXPORT void glVertexAttribI2ivEXT(GLuint index,const GLint* v)const;
GEGL_EXPORT void glReplacementCodeuiColor4fNormal3fVertex3fvSUN(const GLuint* rc,const GLfloat* c,const GLfloat* n,const GLfloat* v)const;
GEGL_EXPORT void glDeleteStatesNV(GLsizei n,const GLuint* states)const;
GEGL_EXPORT void glGetBufferParameteri64v(GLenum target,GLenum pname,GLint64* params)const;
GEGL_EXPORT void glProgramUniform4dv(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
GEGL_EXPORT void glEdgeFlagPointerEXT(GLsizei stride,GLsizei count,const GLboolean* pointer)const;
GEGL_EXPORT void glVideoCaptureStreamParameterivNV(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glVertexStream4iATI(GLenum stream,GLint x,GLint y,GLint z,GLint w)const;
GEGL_EXPORT void glVDPAUFiniNV()const;
GEGL_EXPORT void glMakeBufferNonResidentNV(GLenum target)const;
GEGL_EXPORT void glUniform1ui64ARB(GLint location,GLuint64 x)const;
GEGL_EXPORT void glStencilStrokePathNV(GLuint path,GLint reference,GLuint mask)const;
GEGL_EXPORT void glVariantuivEXT(GLuint id,const GLuint* addr)const;
GEGL_EXPORT void glCopyTexSubImage3DEXT(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glSpriteParameteriSGIX(GLenum pname,GLint param)const;
GEGL_EXPORT void glMultiTexCoord1sARB(GLenum target,GLshort s)const;
GEGL_EXPORT void glConvolutionParameterfv(GLenum target,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glMakeTextureHandleResidentNV(GLuint64 handle)const;
GEGL_EXPORT void glMultMatrixxOES(const GLfixed* m)const;
GEGL_EXPORT void glTextureNormalEXT(GLenum mode)const;
GEGL_EXPORT void glGetQueryivARB(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glCompressedMultiTexImage3DEXT(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void* bits)const;
GEGL_EXPORT GLint glGetInstrumentsSGIX()const;
GEGL_EXPORT void glProgramUniformMatrix4x3fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glPointParameterf(GLenum pname,GLfloat param)const;
GEGL_EXPORT void glProgramUniform3dEXT(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glMultiTexCoord2hNV(GLenum target,GLhalfNV s,GLhalfNV t)const;
GEGL_EXPORT void glGetConvolutionFilterEXT(GLenum target,GLenum format,GLenum type,void* image)const;
GEGL_EXPORT void glVertexAttrib2hNV(GLuint index,GLhalfNV x,GLhalfNV y)const;
GEGL_EXPORT void glCurrentPaletteMatrixARB(GLint index)const;
GEGL_EXPORT void glFogxvOES(GLenum pname,const GLfixed* param)const;
GEGL_EXPORT void glCreateRenderbuffers(GLsizei n,GLuint* renderbuffers)const;
GEGL_EXPORT void glVertexAttrib4Nusv(GLuint index,const GLushort* v)const;
GEGL_EXPORT void glCombinerInputNV(GLenum stage,GLenum portion,GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)const;
GEGL_EXPORT void glDepthFunc(GLenum func)const;
GEGL_EXPORT void glWindowPos4fMESA(GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glEnableClientStateIndexedEXT(GLenum array,GLuint index)const;
GEGL_EXPORT void glTexCoord4iv(const GLint* v)const;
GEGL_EXPORT void glProgramUniform4i64ARB(GLuint program,GLint location,GLint64 x,GLint64 y,GLint64 z,GLint64 w)const;
GEGL_EXPORT void glBlendFunci(GLuint buf,GLenum src,GLenum dst)const;
GEGL_EXPORT void glResolveDepthValuesNV()const;
GEGL_EXPORT void glTextureColorMaskSGIS(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)const;
GEGL_EXPORT GLuint glCreateShaderProgramEXT(GLenum type,const GLchar* string)const;
GEGL_EXPORT void glBufferStorage(GLenum target,GLsizeiptr size,const void* data,GLbitfield flags)const;
GEGL_EXPORT void glMakeNamedBufferNonResidentNV(GLuint buffer)const;
GEGL_EXPORT void glRenderbufferStorageMultisampleEXT(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glGetFloati_v(GLenum target,GLuint index,GLfloat* data)const;
GEGL_EXPORT void glUniform2ui64ARB(GLint location,GLuint64 x,GLuint64 y)const;
GEGL_EXPORT void glVertex3fv(const GLfloat* v)const;
GEGL_EXPORT GLint glGetUniformLocation(GLuint program,const GLchar* name)const;
GEGL_EXPORT void glVertexStream1svATI(GLenum stream,const GLshort* coords)const;
GEGL_EXPORT void glVertexStream3fATI(GLenum stream,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glNamedFramebufferDrawBuffers(GLuint framebuffer,GLsizei n,const GLenum* bufs)const;
GEGL_EXPORT void glUniform2ui64vNV(GLint location,GLsizei count,const GLuint64EXT* value)const;
GEGL_EXPORT void glTexCoordPointervINTEL(GLint size,GLenum type,const void** pointer)const;
GEGL_EXPORT void glUniform4fv(GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glNormalPointerEXT(GLenum type,GLsizei stride,GLsizei count,const void* pointer)const;
GEGL_EXPORT void glVertexAttrib4hNV(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)const;
GEGL_EXPORT void glNormal3f(GLfloat nx,GLfloat ny,GLfloat nz)const;
GEGL_EXPORT void glVertexStream2iATI(GLenum stream,GLint x,GLint y)const;
GEGL_EXPORT void glVertexAttribP4uiv(GLuint index,GLenum type,GLboolean normalized,const GLuint* value)const;
GEGL_EXPORT void glCompressedTextureSubImage3D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void* data)const;
GEGL_EXPORT void glAsyncMarkerSGIX(GLuint marker)const;
GEGL_EXPORT void glTextureStorageSparseAMD(GLuint texture,GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)const;
GEGL_EXPORT void glGetConvolutionParameterivEXT(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glEndPerfQueryINTEL(GLuint queryHandle)const;
GEGL_EXPORT void glFragmentLightModeliSGIX(GLenum pname,GLint param)const;
GEGL_EXPORT void glPrioritizeTexturesEXT(GLsizei n,const GLuint* textures,const GLclampf* priorities)const;
GEGL_EXPORT void glEndConditionalRender()const;
GEGL_EXPORT void glEnableClientState(GLenum cap)const;
GEGL_EXPORT void glResetHistogram(GLenum target)const;
GEGL_EXPORT void glGetOcclusionQueryivNV(GLuint id,GLenum pname,GLint* params)const;
GEGL_EXPORT void glUniform1uiEXT(GLint location,GLuint v0)const;
GEGL_EXPORT void glMultiTexCoord2sv(GLenum target,const GLshort* v)const;
GEGL_EXPORT void glTexSubImage2DEXT(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glProgramUniform2uiv(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glMultiTexCoord2iARB(GLenum target,GLint s,GLint t)const;
GEGL_EXPORT void glGetQueryObjectuiv(GLuint id,GLenum pname,GLuint* params)const;
GEGL_EXPORT void glGenerateMultiTexMipmapEXT(GLenum texunit,GLenum target)const;
GEGL_EXPORT void glVertexAttrib4iv(GLuint index,const GLint* v)const;
GEGL_EXPORT void glWindowPos3dvMESA(const GLdouble* v)const;
GEGL_EXPORT void glLabelObjectEXT(GLenum type,GLuint object,GLsizei length,const GLchar* label)const;
GEGL_EXPORT void glProgramUniform1uiv(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glFramebufferTexture(GLenum target,GLenum attachment,GLuint texture,GLint level)const;
GEGL_EXPORT void glMultiTexEnvfEXT(GLenum texunit,GLenum target,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glGetTexGendv(GLenum coord,GLenum pname,GLdouble* params)const;
GEGL_EXPORT void glVertex4xOES(GLfixed x,GLfixed y,GLfixed z)const;
GEGL_EXPORT void glVertexAttribI2uivEXT(GLuint index,const GLuint* v)const;
GEGL_EXPORT void glNamedProgramLocalParameter4fvEXT(GLuint program,GLenum target,GLuint index,const GLfloat* params)const;
GEGL_EXPORT void glColor3usv(const GLushort* v)const;
GEGL_EXPORT void glGetPixelTransformParameterfvEXT(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glIndexxvOES(const GLfixed* component)const;
GEGL_EXPORT void glDepthMask(GLboolean flag)const;
GEGL_EXPORT void glProgramUniformMatrix2x4fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT GLboolean glAreProgramsResidentNV(GLsizei n,const GLuint* programs,GLboolean* residences)const;
GEGL_EXPORT void glColorTable(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid* table)const;
GEGL_EXPORT void glBeginQueryIndexed(GLenum target,GLuint index,GLuint id)const;
GEGL_EXPORT void glVertexStream1dvATI(GLenum stream,const GLdouble* coords)const;
GEGL_EXPORT void glGetMultiTexEnvfvEXT(GLenum texunit,GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glDeleteFencesNV(GLsizei n,const GLuint* fences)const;
GEGL_EXPORT void glVertexAttribs1dvNV(GLuint index,GLsizei count,const GLdouble* v)const;
GEGL_EXPORT void glBufferStorageExternalEXT(GLenum target,GLintptr offset,GLsizeiptr size,GLeglClientBufferEXT clientBuffer,GLbitfield flags)const;
GEGL_EXPORT void glVertexStream2sATI(GLenum stream,GLshort x,GLshort y)const;
GEGL_EXPORT void glGetnSeparableFilterARB(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void* row,GLsizei columnBufSize,void* column,void* span)const;
GEGL_EXPORT void glProgramUniform2dv(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
GEGL_EXPORT void glActiveStencilFaceEXT(GLenum face)const;
GEGL_EXPORT void glProgramUniform4dEXT(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glPointSizexOES(GLfixed size)const;
GEGL_EXPORT void glRasterPos2sv(const GLshort* v)const;
GEGL_EXPORT GLuint glBindParameterEXT(GLenum value)const;
GEGL_EXPORT void glTexCoord1sv(const GLshort* v)const;
GEGL_EXPORT void glBlendParameteriNV(GLenum pname,GLint value)const;
GEGL_EXPORT void glNamedProgramLocalParameter4dvEXT(GLuint program,GLenum target,GLuint index,const GLdouble* params)const;
GEGL_EXPORT void glProgramUniformHandleui64NV(GLuint program,GLint location,GLuint64 value)const;
GEGL_EXPORT void glGetTextureParameterfvEXT(GLuint texture,GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glGetPathMetricsNV(GLbitfield metricQueryMask,GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLsizei stride,GLfloat* metrics)const;
GEGL_EXPORT void glVertex2i(GLint x,GLint y)const;
GEGL_EXPORT void glNewList(GLuint list,GLenum mode)const;
GEGL_EXPORT void glMatrixLoad3x3fNV(GLenum matrixMode,const GLfloat* m)const;
GEGL_EXPORT void glMultiTexCoord2fARB(GLenum target,GLfloat s,GLfloat t)const;
GEGL_EXPORT void glWeightdvARB(GLint size,const GLdouble* weights)const;
GEGL_EXPORT GLboolean glIsTransformFeedbackNV(GLuint id)const;
GEGL_EXPORT void glVertexAttribDivisorARB(GLuint index,GLuint divisor)const;
GEGL_EXPORT void glSecondaryColorP3uiv(GLenum type,const GLuint* color)const;
GEGL_EXPORT void glGetnCompressedTexImageARB(GLenum target,GLint lod,GLsizei bufSize,void* img)const;
GEGL_EXPORT void glGetIntegerv(GLenum pname,GLint* params)const;
GEGL_EXPORT void glMatrixLoaddEXT(GLenum mode,const GLdouble* m)const;
GEGL_EXPORT GLfloat glGetPathLengthNV(GLuint path,GLsizei startSegment,GLsizei numSegments)const;
GEGL_EXPORT void glProgramUniformMatrix3dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glUniform4i64NV(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)const;
GEGL_EXPORT void glGetHistogramEXT(GLenum target,GLboolean reset,GLenum format,GLenum type,void* values)const;
GEGL_EXPORT void glVertexAttrib4NuivARB(GLuint index,const GLuint* v)const;
GEGL_EXPORT void glMapGrid2xOES(GLint n,GLfixed u1,GLfixed u2,GLfixed v1,GLfixed v2)const;
GEGL_EXPORT void glTexImage2D(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const GLvoid* pixels)const;
GEGL_EXPORT void glWindowPos2fvARB(const GLfloat* v)const;
GEGL_EXPORT void glEnableIndexedEXT(GLenum target,GLuint index)const;
GEGL_EXPORT void glTexCoord1bvOES(const GLbyte* coords)const;
GEGL_EXPORT void glDrawPixels(GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid* pixels)const;
GEGL_EXPORT void glMultMatrixd(const GLdouble* m)const;
GEGL_EXPORT void glMultMatrixf(const GLfloat* m)const;
GEGL_EXPORT void glReplacementCodePointerSUN(GLenum type,GLsizei stride,const void** pointer)const;
GEGL_EXPORT void glLoadTransposeMatrixdARB(const GLdouble* m)const;
GEGL_EXPORT void glVertexAttrib4Nubv(GLuint index,const GLubyte* v)const;
GEGL_EXPORT void glVertexArrayVertexAttribIOffsetEXT(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
GEGL_EXPORT void glCompileShaderARB(GLhandleARB shaderObj)const;
GEGL_EXPORT void glWindowPos3dMESA(GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glNormalStream3fvATI(GLenum stream,const GLfloat* coords)const;
GEGL_EXPORT void glColor4usv(const GLushort* v)const;
GEGL_EXPORT void glMapGrid1f(GLint un,GLfloat u1,GLfloat u2)const;
GEGL_EXPORT void glPolygonStipple(const GLubyte* mask)const;
GEGL_EXPORT void glUniform4ui64ARB(GLint location,GLuint64 x,GLuint64 y,GLuint64 z,GLuint64 w)const;
GEGL_EXPORT void glTextureRenderbufferEXT(GLuint texture,GLenum target,GLuint renderbuffer)const;
GEGL_EXPORT GLint glGetSubroutineUniformLocation(GLuint program,GLenum shadertype,const GLchar* name)const;
GEGL_EXPORT void glGetFramebufferParameteriv(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glPixelMapusv(GLenum map,GLsizei mapsize,const GLushort* values)const;
GEGL_EXPORT void glGetSamplerParameteriv(GLuint sampler,GLenum pname,GLint* params)const;
GEGL_EXPORT void glVertexStream2fvATI(GLenum stream,const GLfloat* coords)const;
GEGL_EXPORT void glProgramStringARB(GLenum target,GLenum format,GLsizei len,const void* string)const;
GEGL_EXPORT void glProgramUniformMatrix3dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glSeparableFilter2D(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid* row,const GLvoid* column)const;
GEGL_EXPORT void glVertexAttribI1uiv(GLuint index,const GLuint* v)const;
GEGL_EXPORT void glLGPUCopyImageSubDataNVX(GLuint sourceGpu,GLbitfield destinationGpuMask,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srxY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)const;
GEGL_EXPORT void glTexStorage2D(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glColor3fv(const GLfloat* v)const;
GEGL_EXPORT void glGetMultiTexGendvEXT(GLenum texunit,GLenum coord,GLenum pname,GLdouble* params)const;
GEGL_EXPORT void glVertexAttribL4dvEXT(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glGetActiveUniform(GLuint program,GLuint index,GLsizei bufSize,GLsizei* length,GLint* size,GLenum* type,GLchar* name)const;
GEGL_EXPORT void glUniform2ui64vARB(GLint location,GLsizei count,const GLuint64* value)const;
GEGL_EXPORT void glMakeNamedBufferResidentNV(GLuint buffer,GLenum access)const;
GEGL_EXPORT GLenum glPathGlyphIndexRangeNV(GLenum fontTarget,const void* fontName,GLbitfield fontStyle,GLuint pathParameterTemplate,GLfloat emScale,GLuint baseAndCount[2])const;
GEGL_EXPORT void glColorPointer(GLint size,GLenum type,GLsizei stride,const GLvoid* ptr)const;
GEGL_EXPORT void glProgramEnvParameterI4ivNV(GLenum target,GLuint index,const GLint* params)const;
GEGL_EXPORT void glMulticastGetQueryObjectui64vNV(GLuint gpu,GLuint id,GLenum pname,GLuint64* params)const;
GEGL_EXPORT void glMultiTexParameterfEXT(GLenum texunit,GLenum target,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glNamedFramebufferTextureLayer(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)const;
GEGL_EXPORT void glGetVertexArrayIntegervEXT(GLuint vaobj,GLenum pname,GLint* param)const;
GEGL_EXPORT void glVertexAttrib3dARB(GLuint index,GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT GLboolean glVDPAUIsSurfaceNV(GLvdpauSurfaceNV surface)const;
GEGL_EXPORT void glMultiTexImage1DEXT(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT GLboolean glIsAsyncMarkerSGIX(GLuint marker)const;
GEGL_EXPORT void glGetDoublei_vEXT(GLenum pname,GLuint index,GLdouble* params)const;
GEGL_EXPORT void glUniform2i64NV(GLint location,GLint64EXT x,GLint64EXT y)const;
GEGL_EXPORT GLboolean glIsCommandListNV(GLuint list)const;
GEGL_EXPORT void glUniform3uiEXT(GLint location,GLuint v0,GLuint v1,GLuint v2)const;
GEGL_EXPORT void glTexParameterIuivEXT(GLenum target,GLenum pname,const GLuint* params)const;
GEGL_EXPORT void glProgramUniformMatrix4fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glVertex2fv(const GLfloat* v)const;
GEGL_EXPORT void glVertexAttribL3dEXT(GLuint index,GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glFramebufferRenderbuffer(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)const;
GEGL_EXPORT GLint glGetUniformLocationARB(GLhandleARB programObj,const GLcharARB* name)const;
GEGL_EXPORT void glPathParameterfvNV(GLuint path,GLenum pname,const GLfloat* value)const;
GEGL_EXPORT void glVertexAttrib3sNV(GLuint index,GLshort x,GLshort y,GLshort z)const;
GEGL_EXPORT void glGetDoublei_v(GLenum target,GLuint index,GLdouble* data)const;
GEGL_EXPORT void glVertexAttrib1sv(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glBindSampler(GLuint unit,GLuint sampler)const;
GEGL_EXPORT void glLineWidth(GLfloat width)const;
GEGL_EXPORT void glVertexArrayRangeAPPLE(GLsizei length,void* pointer)const;
GEGL_EXPORT void glBindBufferOffsetEXT(GLenum target,GLuint index,GLuint buffer,GLintptr offset)const;
GEGL_EXPORT void glWeightfvARB(GLint size,const GLfloat* weights)const;
GEGL_EXPORT void glGetIntegeri_v(GLenum target,GLuint index,GLint* data)const;
GEGL_EXPORT void glGetTransformFeedbackVarying(GLuint program,GLuint index,GLsizei bufSize,GLsizei* length,GLsizei* size,GLenum* type,GLchar* name)const;
GEGL_EXPORT void glProgramLocalParameter4fvARB(GLenum target,GLuint index,const GLfloat* params)const;
GEGL_EXPORT void glGetTransformFeedbackVaryingNV(GLuint program,GLuint index,GLint* location)const;
GEGL_EXPORT void glWindowPos2iv(const GLint* v)const;
GEGL_EXPORT void glVertexStream1dATI(GLenum stream,GLdouble x)const;
GEGL_EXPORT void glColorFragmentOp2ATI(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)const;
GEGL_EXPORT void glFogiv(GLenum pname,const GLint* params)const;
GEGL_EXPORT GLuint64 glGetTextureHandleNV(GLuint texture)const;
GEGL_EXPORT void glLightModeliv(GLenum pname,const GLint* params)const;
GEGL_EXPORT void glDepthRangef(GLfloat n,GLfloat f)const;
GEGL_EXPORT void glGetFragmentMaterialivSGIX(GLenum face,GLenum pname,GLint* params)const;
GEGL_EXPORT void glVideoCaptureStreamParameterfvNV(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glDeleteProgramsARB(GLsizei n,const GLuint* programs)const;
GEGL_EXPORT void glWindowPos3fvARB(const GLfloat* v)const;
GEGL_EXPORT void glFeedbackBufferxOES(GLsizei n,GLenum type,const GLfixed* buffer)const;
GEGL_EXPORT void glGetTexBumpParameterfvATI(GLenum pname,GLfloat* param)const;
GEGL_EXPORT void glEnablei(GLenum target,GLuint index)const;
GEGL_EXPORT void glGetActiveSubroutineName(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei* length,GLchar* name)const;
GEGL_EXPORT void glDrawBuffersARB(GLsizei n,const GLenum* bufs)const;
GEGL_EXPORT void glBindProgramARB(GLenum target,GLuint program)const;
GEGL_EXPORT void glEvalCoord1fv(const GLfloat* u)const;
GEGL_EXPORT void glProgramUniform3ui64vARB(GLuint program,GLint location,GLsizei count,const GLuint64* value)const;
GEGL_EXPORT void glProgramUniformMatrix2dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glMultiTexCoord2hvNV(GLenum target,const GLhalfNV* v)const;
GEGL_EXPORT void glGetFloatIndexedvEXT(GLenum target,GLuint index,GLfloat* data)const;
GEGL_EXPORT void glSampleCoverageARB(GLfloat value,GLboolean invert)const;
GEGL_EXPORT void glProgramUniform2ui64vARB(GLuint program,GLint location,GLsizei count,const GLuint64* value)const;
GEGL_EXPORT void glPixelDataRangeNV(GLenum target,GLsizei length,const void* pointer)const;
GEGL_EXPORT void glVertexStream3svATI(GLenum stream,const GLshort* coords)const;
GEGL_EXPORT void glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(const GLuint* rc,const GLfloat* tc,const GLfloat* n,const GLfloat* v)const;
GEGL_EXPORT void glTexCoord3hvNV(const GLhalfNV* v)const;
GEGL_EXPORT void glSampleMaski(GLuint maskNumber,GLbitfield mask)const;
GEGL_EXPORT void glIndexFuncEXT(GLenum func,GLclampf ref)const;
GEGL_EXPORT void glPointParameteriNV(GLenum pname,GLint param)const;
GEGL_EXPORT void glUniformMatrix3x2fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glGetFramebufferParameterivEXT(GLuint framebuffer,GLenum pname,GLint* params)const;
GEGL_EXPORT void glUniform2i64ARB(GLint location,GLint64 x,GLint64 y)const;
GEGL_EXPORT void glNamedBufferStorageEXT(GLuint buffer,GLsizeiptr size,const void* data,GLbitfield flags)const;
GEGL_EXPORT void glNamedFramebufferTexture3DEXT(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)const;
GEGL_EXPORT void glVertexAttrib2dv(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glGetVertexArrayPointervEXT(GLuint vaobj,GLenum pname,void** param)const;
GEGL_EXPORT void glGetVertexAttribArrayObjectivATI(GLuint index,GLenum pname,GLint* params)const;
GEGL_EXPORT void glProgramUniformMatrix3fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glEnableVertexArrayEXT(GLuint vaobj,GLenum array)const;
GEGL_EXPORT void glColorTableParameterfvSGI(GLenum target,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glEdgeFlag(GLboolean flag)const;
GEGL_EXPORT void glFogCoordf(GLfloat coord)const;
GEGL_EXPORT void glVertex3d(GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glVertex3f(GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glSpriteParameterivSGIX(GLenum pname,const GLint* params)const;
GEGL_EXPORT void glPathGlyphRangeNV(GLuint firstPathName,GLenum fontTarget,const void* fontName,GLbitfield fontStyle,GLuint firstGlyph,GLsizei numGlyphs,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)const;
GEGL_EXPORT void glPrimitiveBoundingBoxARB(GLfloat minX,GLfloat minY,GLfloat minZ,GLfloat minW,GLfloat maxX,GLfloat maxY,GLfloat maxZ,GLfloat maxW)const;
GEGL_EXPORT void glVertexAttribL3ui64vNV(GLuint index,const GLuint64EXT* v)const;
GEGL_EXPORT void glVertex3s(GLshort x,GLshort y,GLshort z)const;
GEGL_EXPORT void glTexCoordP2ui(GLenum type,GLuint coords)const;
GEGL_EXPORT void glProgramUniform2fvEXT(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glDeletePathsNV(GLuint path,GLsizei range)const;
GEGL_EXPORT void glPrimitiveRestartIndexNV(GLuint index)const;
GEGL_EXPORT void glTexCoord2fColor3fVertex3fvSUN(const GLfloat* tc,const GLfloat* c,const GLfloat* v)const;
GEGL_EXPORT void glTexCoordPointerListIBM(GLint size,GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
GEGL_EXPORT void glRectxOES(GLfixed x1,GLfixed y1,GLfixed x2,GLfixed y2)const;
GEGL_EXPORT void glCopyNamedBufferSubData(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)const;
GEGL_EXPORT void glGenProgramsNV(GLsizei n,GLuint* programs)const;
GEGL_EXPORT void glFragmentLightfSGIX(GLenum light,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glTexStorage3D(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)const;
GEGL_EXPORT void glTextureParameteriv(GLuint texture,GLenum pname,const GLint* param)const;
GEGL_EXPORT void glNamedBufferDataEXT(GLuint buffer,GLsizeiptr size,const void* data,GLenum usage)const;
GEGL_EXPORT void glImportSemaphoreWin32NameEXT(GLuint semaphore,GLenum handleType,const void* name)const;
GEGL_EXPORT void glMultiTexCoord3fvARB(GLenum target,const GLfloat* v)const;
GEGL_EXPORT void glUniformMatrix3x4fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glSubpixelPrecisionBiasNV(GLuint xbits,GLuint ybits)const;
GEGL_EXPORT void glNormalPointer(GLenum type,GLsizei stride,const GLvoid* ptr)const;
GEGL_EXPORT void glNamedFramebufferTexture(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)const;
GEGL_EXPORT void glVertexAttrib4NsvARB(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glPassThrough(GLfloat token)const;
GEGL_EXPORT void glSecondaryColorP3ui(GLenum type,GLuint color)const;
GEGL_EXPORT void glInvalidateTexSubImage(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)const;
GEGL_EXPORT GLboolean glIsImageHandleResidentARB(GLuint64 handle)const;
GEGL_EXPORT void glTangent3fvEXT(const GLfloat* v)const;
GEGL_EXPORT void glProgramUniformMatrix4x3fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glBegin(GLenum mode)const;
GEGL_EXPORT void glEvalCoord2dv(const GLdouble* u)const;
GEGL_EXPORT void glColor3ubv(const GLubyte* v)const;
GEGL_EXPORT void glFogCoordfvEXT(const GLfloat* coord)const;
GEGL_EXPORT void glVertexP3ui(GLenum type,GLuint value)const;
GEGL_EXPORT void glLightfv(GLenum light,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glVertexAttribL3i64NV(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z)const;
GEGL_EXPORT void glStencilClearTagEXT(GLsizei stencilTagBits,GLuint stencilClearTag)const;
GEGL_EXPORT void glGetActiveUniformName(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei* length,GLchar* uniformName)const;
GEGL_EXPORT void glTangentPointerEXT(GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glUniform4ui64vNV(GLint location,GLsizei count,const GLuint64EXT* value)const;
GEGL_EXPORT void glDebugMessageEnableAMD(GLenum category,GLenum severity,GLsizei count,const GLuint* ids,GLboolean enabled)const;
GEGL_EXPORT void glProgramUniform2ui(GLuint program,GLint location,GLuint v0,GLuint v1)const;
GEGL_EXPORT void glCopyTexSubImage2DEXT(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glGenRenderbuffersEXT(GLsizei n,GLuint* renderbuffers)const;
GEGL_EXPORT void glNamedProgramLocalParameterI4ivEXT(GLuint program,GLenum target,GLuint index,const GLint* params)const;
GEGL_EXPORT void glMultiTexCoord2f(GLenum target,GLfloat s,GLfloat t)const;
GEGL_EXPORT void glMapGrid2d(GLint un,GLdouble u1,GLdouble u2,GLint vn,GLdouble v1,GLdouble v2)const;
GEGL_EXPORT void glGetMultiTexParameterIuivEXT(GLenum texunit,GLenum target,GLenum pname,GLuint* params)const;
GEGL_EXPORT void glBlendEquationiARB(GLuint buf,GLenum mode)const;
GEGL_EXPORT void glTexParameteriv(GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glUniform4ivARB(GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glMatrixOrthoEXT(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)const;
GEGL_EXPORT void glVertexArrayVertexBuffer(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)const;
GEGL_EXPORT void glProgramLocalParametersI4ivNV(GLenum target,GLuint index,GLsizei count,const GLint* params)const;
GEGL_EXPORT void glProgramUniform4ui64vNV(GLuint program,GLint location,GLsizei count,const GLuint64EXT* value)const;
GEGL_EXPORT void glGetNamedStringivARB(GLint namelen,const GLchar* name,GLenum pname,GLint* params)const;
GEGL_EXPORT void glVertexAttribL1i64vNV(GLuint index,const GLint64EXT* v)const;
GEGL_EXPORT void glTransformFeedbackBufferBase(GLuint xfb,GLuint index,GLuint buffer)const;
GEGL_EXPORT void glIndexsv(const GLshort* c)const;
GEGL_EXPORT void glPointParameterivNV(GLenum pname,const GLint* params)const;
GEGL_EXPORT void glGetDetailTexFuncSGIS(GLenum target,GLfloat* points)const;
GEGL_EXPORT void glReplacementCodeuiColor3fVertex3fvSUN(const GLuint* rc,const GLfloat* c,const GLfloat* v)const;
GEGL_EXPORT void glProgramLocalParameter4fARB(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glBitmap(GLsizei width,GLsizei height,GLfloat xorig,GLfloat yorig,GLfloat xmove,GLfloat ymove,const GLubyte* bitmap)const;
GEGL_EXPORT void glNamedFramebufferTextureLayerEXT(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)const;
GEGL_EXPORT void glMultiTexGenfvEXT(GLenum texunit,GLenum coord,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glGetNamedBufferSubData(GLuint buffer,GLintptr offset,GLsizeiptr size,void* data)const;
GEGL_EXPORT void glStencilFuncSeparateATI(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)const;
GEGL_EXPORT void glProgramUniform2iv(GLuint program,GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glGetQueryiv(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glTexCoord4f(GLfloat s,GLfloat t,GLfloat r,GLfloat q)const;
GEGL_EXPORT void glMapGrid2f(GLint un,GLfloat u1,GLfloat u2,GLint vn,GLfloat v1,GLfloat v2)const;
GEGL_EXPORT void glListParameterivSGIX(GLuint list,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glCreateQueries(GLenum target,GLsizei n,GLuint* ids)const;
GEGL_EXPORT void glGetSamplerParameterfv(GLuint sampler,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glTexCoord4i(GLint s,GLint t,GLint r,GLint q)const;
GEGL_EXPORT void glObjectLabel(GLenum identifier,GLuint name,GLsizei length,const GLchar* label)const;
GEGL_EXPORT void glProgramUniform3i64NV(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)const;
GEGL_EXPORT GLuint64 glGetTextureHandleARB(GLuint texture)const;
GEGL_EXPORT void glTexCoord4s(GLshort s,GLshort t,GLshort r,GLshort q)const;
GEGL_EXPORT void glUniform4iARB(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)const;
GEGL_EXPORT void glGetUniformIndices(GLuint program,GLsizei uniformCount,const GLchar*const* uniformNames,GLuint* uniformIndices)const;
GEGL_EXPORT void glMultiTexImage3DEXT(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glCoverageModulationTableNV(GLsizei n,const GLfloat* v)const;
GEGL_EXPORT void glPointParameteriv(GLenum pname,const GLint* params)const;
GEGL_EXPORT void glMultiTexCoord4svARB(GLenum target,const GLshort* v)const;
GEGL_EXPORT void glNormal3fv(const GLfloat* v)const;
GEGL_EXPORT void glProgramUniformMatrix3x4dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glTexCoord1fv(const GLfloat* v)const;
GEGL_EXPORT void glProgramUniformMatrix4x3dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glGetActiveVaryingNV(GLuint program,GLuint index,GLsizei bufSize,GLsizei* length,GLsizei* size,GLenum* type,GLchar* name)const;
GEGL_EXPORT void glUniform1i64vARB(GLint location,GLsizei count,const GLint64* value)const;
GEGL_EXPORT void glMultiTexCoord1dv(GLenum target,const GLdouble* v)const;
GEGL_EXPORT void glTexCoord3fv(const GLfloat* v)const;
GEGL_EXPORT void glMatrixTranslatefEXT(GLenum mode,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glProgramUniform1ui64vNV(GLuint program,GLint location,GLsizei count,const GLuint64EXT* value)const;
GEGL_EXPORT void glTextureMaterialEXT(GLenum face,GLenum mode)const;
GEGL_EXPORT void glMultiTexCoordP3uiv(GLenum texture,GLenum type,const GLuint* coords)const;
GEGL_EXPORT void glVertexAttribP3ui(GLuint index,GLenum type,GLboolean normalized,GLuint value)const;
GEGL_EXPORT void glInterpolatePathsNV(GLuint resultPath,GLuint pathA,GLuint pathB,GLfloat weight)const;
GEGL_EXPORT void glTextureBufferRange(GLuint texture,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
GEGL_EXPORT void glVertexAttribL2dEXT(GLuint index,GLdouble x,GLdouble y)const;
GEGL_EXPORT void glGetPixelTransformParameterivEXT(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glTexCoord4xvOES(const GLfixed* coords)const;
GEGL_EXPORT void glGetVariantBooleanvEXT(GLuint id,GLenum value,GLboolean* data)const;
GEGL_EXPORT void glDepthRange(GLclampd near_val,GLclampd far_val)const;
GEGL_EXPORT void glGetVertexAttribdvARB(GLuint index,GLenum pname,GLdouble* params)const;
GEGL_EXPORT void glGetColorTableParameterfv(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glDrawArraysInstancedEXT(GLenum mode,GLint start,GLsizei count,GLsizei primcount)const;
GEGL_EXPORT void glDisableClientStateIndexedEXT(GLenum array,GLuint index)const;
GEGL_EXPORT void glDrawBuffer(GLenum mode)const;
GEGL_EXPORT void glMultiDrawArraysIndirectBindlessNV(GLenum mode,const void* indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)const;
GEGL_EXPORT void glGetnPixelMapusv(GLenum map,GLsizei bufSize,GLushort* values)const;
GEGL_EXPORT void glRasterPos3fv(const GLfloat* v)const;
GEGL_EXPORT void glClearBufferuiv(GLenum buffer,GLint drawbuffer,const GLuint* value)const;
GEGL_EXPORT void glGetInternalformati64v(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64* params)const;
GEGL_EXPORT void glShaderSourceARB(GLhandleARB shaderObj,GLsizei count,const GLcharARB** string,const GLint* length)const;
GEGL_EXPORT void glShaderOp3EXT(GLenum op,GLuint res,GLuint arg1,GLuint arg2,GLuint arg3)const;
GEGL_EXPORT void glWindowPos2dvMESA(const GLdouble* v)const;
GEGL_EXPORT void glClearIndex(GLfloat c)const;
GEGL_EXPORT void glProvokingVertexEXT(GLenum mode)const;
GEGL_EXPORT void glVariantubvEXT(GLuint id,const GLubyte* addr)const;
GEGL_EXPORT void glFlush()const;
GEGL_EXPORT void glFramebufferTexture2DEXT(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)const;
GEGL_EXPORT void glGetColorTableParameterivEXT(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glPresentFrameDualFillNV(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLenum target1,GLuint fill1,GLenum target2,GLuint fill2,GLenum target3,GLuint fill3)const;
GEGL_EXPORT GLuint glGenVertexShadersEXT(GLuint range)const;
GEGL_EXPORT void glSpecializeShaderARB(GLuint shader,const GLchar* pEntryPoint,GLuint numSpecializationConstants,const GLuint* pConstantIndex,const GLuint* pConstantValue)const;
GEGL_EXPORT void glProgramUniformHandleui64vARB(GLuint program,GLint location,GLsizei count,const GLuint64* values)const;
GEGL_EXPORT void glDepthRangefOES(GLclampf n,GLclampf f)const;
GEGL_EXPORT void glDeleteVertexArrays(GLsizei n,const GLuint* arrays)const;
GEGL_EXPORT void glDrawElementsInstancedBaseVertexBaseInstance(GLenum mode,GLsizei count,GLenum type,const void* indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)const;
GEGL_EXPORT void glGetTexLevelParameteriv(GLenum target,GLint level,GLenum pname,GLint* params)const;
GEGL_EXPORT void glDrawVkImageNV(GLuint64 vkImage,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)const;
GEGL_EXPORT void glWindowPos3iARB(GLint x,GLint y,GLint z)const;
GEGL_EXPORT void glPrioritizeTextures(GLsizei n,const GLuint* textures,const GLclampf* priorities)const;
GEGL_EXPORT void glWindowPos3fvMESA(const GLfloat* v)const;
GEGL_EXPORT void glProgramUniformMatrix3x2dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glVertex4xvOES(const GLfixed* coords)const;
GEGL_EXPORT void glTexStorage3DMultisample(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)const;
GEGL_EXPORT void glWindowPos2sARB(GLshort x,GLshort y)const;
GEGL_EXPORT void glStencilOpValueAMD(GLenum face,GLuint value)const;
GEGL_EXPORT void glProgramVertexLimitNV(GLenum target,GLint limit)const;
GEGL_EXPORT void glGetTexParameterPointervAPPLE(GLenum target,GLenum pname,void** params)const;
GEGL_EXPORT void glProgramUniform3uivEXT(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glClampColor(GLenum target,GLenum clamp)const;
GEGL_EXPORT void glClearStencil(GLint s)const;
GEGL_EXPORT void glTexCoordP1uiv(GLenum type,const GLuint* coords)const;
GEGL_EXPORT void glVertexAttribs3svNV(GLuint index,GLsizei count,const GLshort* v)const;
GEGL_EXPORT void glMultiTexCoord3fv(GLenum target,const GLfloat* v)const;
GEGL_EXPORT void glVertexBlendEnvfATI(GLenum pname,GLfloat param)const;
GEGL_EXPORT GLboolean glIsFenceAPPLE(GLuint fence)const;
GEGL_EXPORT void glGetBufferParameterui64vNV(GLenum target,GLenum pname,GLuint64EXT* params)const;
GEGL_EXPORT void glVertexAttribI4bvEXT(GLuint index,const GLbyte* v)const;
GEGL_EXPORT void glUniform2fARB(GLint location,GLfloat v0,GLfloat v1)const;
GEGL_EXPORT void glStopInstrumentsSGIX(GLint marker)const;
GEGL_EXPORT void glVertexAttrib3fNV(GLuint index,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glMapVertexAttrib2dAPPLE(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble* points)const;
GEGL_EXPORT void glVertex2f(GLfloat x,GLfloat y)const;
GEGL_EXPORT void glCopyTextureImage2DEXT(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)const;
GEGL_EXPORT void glVertex2d(GLdouble x,GLdouble y)const;
GEGL_EXPORT void glSecondaryColor3bvEXT(const GLbyte* v)const;
GEGL_EXPORT void glMultiTexCoord4fARB(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)const;
GEGL_EXPORT void glPolygonOffset(GLfloat factor,GLfloat units)const;
GEGL_EXPORT void glTangent3bvEXT(const GLbyte* v)const;
GEGL_EXPORT void glHistogram(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)const;
GEGL_EXPORT void glGetProgramiv(GLuint program,GLenum pname,GLint* params)const;
GEGL_EXPORT void glMatrixIndexubvARB(GLint size,const GLubyte* indices)const;
GEGL_EXPORT void glVertex2s(GLshort x,GLshort y)const;
GEGL_EXPORT void glGetVertexAttribLui64vNV(GLuint index,GLenum pname,GLuint64EXT* params)const;
GEGL_EXPORT void glGetProgramStringARB(GLenum target,GLenum pname,void* string)const;
GEGL_EXPORT void glFlushMappedBufferRange(GLenum target,GLintptr offset,GLsizeiptr length)const;
GEGL_EXPORT void glVertexAttribI3uiEXT(GLuint index,GLuint x,GLuint y,GLuint z)const;
GEGL_EXPORT void glLineWidthxOES(GLfixed width)const;
GEGL_EXPORT void glProgramUniformMatrix2fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glGetTextureParameterIuivEXT(GLuint texture,GLenum target,GLenum pname,GLuint* params)const;
GEGL_EXPORT void glGetMultiTexEnvivEXT(GLenum texunit,GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glPixelTexGenParameterivSGIS(GLenum pname,const GLint* params)const;
GEGL_EXPORT void glGenQueries(GLsizei n,GLuint* ids)const;
GEGL_EXPORT void glGetPixelMapfv(GLenum map,GLfloat* values)const;
GEGL_EXPORT void glBlendColorEXT(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)const;
GEGL_EXPORT void glResetMinmax(GLenum target)const;
GEGL_EXPORT void glGetnUniformivARB(GLuint program,GLint location,GLsizei bufSize,GLint* params)const;
GEGL_EXPORT void glVertexBlendARB(GLint count)const;
GEGL_EXPORT void glVertexAttrib4d(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT GLint glGetVaryingLocationNV(GLuint program,const GLchar* name)const;
GEGL_EXPORT void glGetMapAttribParameterivNV(GLenum target,GLuint index,GLenum pname,GLint* params)const;
GEGL_EXPORT void glTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid* pixels)const;
GEGL_EXPORT void glDeleteSamplers(GLsizei count,const GLuint* samplers)const;
GEGL_EXPORT void glGetLightxOES(GLenum light,GLenum pname,GLfixed* params)const;
GEGL_EXPORT void glGetVertexAttribArrayObjectfvATI(GLuint index,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glVertexArrayNormalOffsetEXT(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)const;
GEGL_EXPORT void glGetBufferParameterivARB(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetTextureParameterfv(GLuint texture,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glDrawMeshArraysSUN(GLenum mode,GLint first,GLsizei count,GLsizei width)const;
GEGL_EXPORT void glVertexAttrib4dNV(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glGetMultisamplefvNV(GLenum pname,GLuint index,GLfloat* val)const;
GEGL_EXPORT void* glMapObjectBufferATI(GLuint buffer)const;
GEGL_EXPORT void glGetPathCommandsNV(GLuint path,GLubyte* commands)const;
GEGL_EXPORT void glVertexArrayTexCoordOffsetEXT(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
GEGL_EXPORT void glGetHistogram(GLenum target,GLboolean reset,GLenum format,GLenum type,GLvoid* values)const;
GEGL_EXPORT void glMatrixMode(GLenum mode)const;
GEGL_EXPORT void glColorFormatNV(GLint size,GLenum type,GLsizei stride)const;
GEGL_EXPORT void glProgramUniformui64NV(GLuint program,GLint location,GLuint64EXT value)const;
GEGL_EXPORT void glProgramUniformMatrix4x2fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glLoadMatrixxOES(const GLfixed* m)const;
GEGL_EXPORT void glGetColorTableParameterfvEXT(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glRasterPos4i(GLint x,GLint y,GLint z,GLint w)const;
GEGL_EXPORT void glVertexAttribL2i64NV(GLuint index,GLint64EXT x,GLint64EXT y)const;
GEGL_EXPORT void glBindTextures(GLuint first,GLsizei count,const GLuint* textures)const;
GEGL_EXPORT void glMatrixRotatefEXT(GLenum mode,GLfloat angle,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glGetClipPlanexOES(GLenum plane,GLfixed* equation)const;
GEGL_EXPORT void glSecondaryColor3uivEXT(const GLuint* v)const;
GEGL_EXPORT void glGetPerfQueryInfoINTEL(GLuint queryId,GLuint queryNameLength,GLchar* queryName,GLuint* dataSize,GLuint* noCounters,GLuint* noInstances,GLuint* capsMask)const;
GEGL_EXPORT void glGetDoublev(GLenum pname,GLdouble* params)const;
GEGL_EXPORT void glBindBufferRangeEXT(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
GEGL_EXPORT void glCompressedTexImage2D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid* data)const;
GEGL_EXPORT void* glMapBufferARB(GLenum target,GLenum access)const;
GEGL_EXPORT void glGetPathSpacingNV(GLenum pathListMode,GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLfloat advanceScale,GLfloat kerningScale,GLenum transformType,GLfloat* returnedSpacing)const;
GEGL_EXPORT void glUniform4dv(GLint location,GLsizei count,const GLdouble* value)const;
GEGL_EXPORT void glGlobalAlphaFactordSUN(GLdouble factor)const;
GEGL_EXPORT void glProgramUniform3dv(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
GEGL_EXPORT void glGetShaderSourceARB(GLhandleARB obj,GLsizei maxLength,GLsizei* length,GLcharARB* source)const;
GEGL_EXPORT void glVertexAttrib3dvARB(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glInvalidateBufferData(GLuint buffer)const;
GEGL_EXPORT void glMatrixLoad3x2fNV(GLenum matrixMode,const GLfloat* m)const;
GEGL_EXPORT void glCompressedTextureSubImage1D(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void* data)const;
GEGL_EXPORT void glTexCoord3xvOES(const GLfixed* coords)const;
GEGL_EXPORT void glGenTexturesEXT(GLsizei n,GLuint* textures)const;
GEGL_EXPORT void glTangent3iEXT(GLint tx,GLint ty,GLint tz)const;
GEGL_EXPORT void glClearTexImage(GLuint texture,GLint level,GLenum format,GLenum type,const void* data)const;
GEGL_EXPORT void glBinormal3bvEXT(const GLbyte* v)const;
GEGL_EXPORT void glUniform3fv(GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glGetnPixelMapusvARB(GLenum map,GLsizei bufSize,GLushort* values)const;
GEGL_EXPORT void glMemoryObjectParameterivEXT(GLuint memoryObject,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glGenSemaphoresEXT(GLsizei n,GLuint* semaphores)const;
GEGL_EXPORT void glMultiTexCoordP1ui(GLenum texture,GLenum type,GLuint coords)const;
GEGL_EXPORT void glClearNamedBufferDataEXT(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void* data)const;
GEGL_EXPORT void glUniformMatrix4dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glWindowPos3fMESA(GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glDeleteRenderbuffers(GLsizei n,const GLuint* renderbuffers)const;
GEGL_EXPORT void glGetTextureLevelParameterfvEXT(GLuint texture,GLenum target,GLint level,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glGetHistogramParameterxvOES(GLenum target,GLenum pname,GLfixed* params)const;
GEGL_EXPORT void glMultiDrawElements(GLenum mode,const GLsizei* count,GLenum type,const void*const* indices,GLsizei drawcount)const;
GEGL_EXPORT void glMakeImageHandleNonResidentNV(GLuint64 handle)const;
GEGL_EXPORT void glTexSubImage1DEXT(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glNormalStream3dATI(GLenum stream,GLdouble nx,GLdouble ny,GLdouble nz)const;
GEGL_EXPORT void glVertexAttribL4i64vNV(GLuint index,const GLint64EXT* v)const;
GEGL_EXPORT void glDrawBuffers(GLsizei n,const GLenum* bufs)const;
GEGL_EXPORT void glCopyTextureSubImage1DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)const;
GEGL_EXPORT void glWindowRectanglesEXT(GLenum mode,GLsizei count,const GLint* box)const;
GEGL_EXPORT void glNamedFramebufferReadBuffer(GLuint framebuffer,GLenum src)const;
GEGL_EXPORT void glUniform2i64vARB(GLint location,GLsizei count,const GLint64* value)const;
GEGL_EXPORT void glVertexAttribI1uivEXT(GLuint index,const GLuint* v)const;
GEGL_EXPORT void glGetTexGenfv(GLenum coord,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glBeginQueryARB(GLenum target,GLuint id)const;
GEGL_EXPORT void glUniform1iARB(GLint location,GLint v0)const;
GEGL_EXPORT void glVertex4bvOES(const GLbyte* coords)const;
GEGL_EXPORT void glInvalidateSubFramebuffer(GLenum target,GLsizei numAttachments,const GLenum* attachments,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glUniform1fvARB(GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT GLboolean glTestFenceNV(GLuint fence)const;
GEGL_EXPORT void glBindTransformFeedback(GLenum target,GLuint id)const;
GEGL_EXPORT void glMultiTexCoord2iv(GLenum target,const GLint* v)const;
GEGL_EXPORT void glCopyMultiTexSubImage1DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)const;
GEGL_EXPORT void glVariantbvEXT(GLuint id,const GLbyte* addr)const;
GEGL_EXPORT void glTexCoord1hNV(GLhalfNV s)const;
GEGL_EXPORT void glGenFencesNV(GLsizei n,GLuint* fences)const;
GEGL_EXPORT void glRasterPos3iv(const GLint* v)const;
GEGL_EXPORT void glVertexAttribL2ui64NV(GLuint index,GLuint64EXT x,GLuint64EXT y)const;
GEGL_EXPORT void glMultiTexCoord1hvNV(GLenum target,const GLhalfNV* v)const;
GEGL_EXPORT void glGetnConvolutionFilter(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void* image)const;
GEGL_EXPORT void glNormal3bv(const GLbyte* v)const;
GEGL_EXPORT void glWeightbvARB(GLint size,const GLbyte* weights)const;
GEGL_EXPORT void glTexCoord4sv(const GLshort* v)const;
GEGL_EXPORT void glUniform2uiv(GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glBeginConditionalRenderNVX(GLuint id)const;
GEGL_EXPORT void glFinish()const;
GEGL_EXPORT void glColorTableParameterfv(GLenum target,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glFragmentCoverageColorNV(GLuint color)const;
GEGL_EXPORT void glProgramUniform3ivEXT(GLuint program,GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glVertexArrayVertexOffsetEXT(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
GEGL_EXPORT void glViewportPositionWScaleNV(GLuint index,GLfloat xcoeff,GLfloat ycoeff)const;
GEGL_EXPORT void glGetProgramLocalParameterIuivNV(GLenum target,GLuint index,GLuint* params)const;
GEGL_EXPORT void glReplacementCodeuiTexCoord2fVertex3fvSUN(const GLuint* rc,const GLfloat* tc,const GLfloat* v)const;
GEGL_EXPORT void glUniform1uiv(GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glUniformMatrix2dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glIndexdv(const GLdouble* c)const;
GEGL_EXPORT void glSecondaryColor3ivEXT(const GLint* v)const;
GEGL_EXPORT void glTexCoord3iv(const GLint* v)const;
GEGL_EXPORT void glVertexStream4fvATI(GLenum stream,const GLfloat* coords)const;
GEGL_EXPORT void glDeformationMap3fSGIX(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,GLfloat w1,GLfloat w2,GLint wstride,GLint worder,const GLfloat* points)const;
GEGL_EXPORT void glClearDepth(GLclampd depth)const;
GEGL_EXPORT GLuint glGenAsyncMarkersSGIX(GLsizei range)const;
GEGL_EXPORT void glDisableIndexedEXT(GLenum target,GLuint index)const;
GEGL_EXPORT void glVertexWeightfvEXT(const GLfloat* weight)const;
GEGL_EXPORT void glGetProgramLocalParameterIivNV(GLenum target,GLuint index,GLint* params)const;
GEGL_EXPORT void glCompressedTexImage3DARB(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void* data)const;
GEGL_EXPORT void glProgramParameter4fNV(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glConvolutionParameterxOES(GLenum target,GLenum pname,GLfixed param)const;
GEGL_EXPORT void glInsertComponentEXT(GLuint res,GLuint src,GLuint num)const;
GEGL_EXPORT void glCreateTextures(GLenum target,GLsizei n,GLuint* textures)const;
GEGL_EXPORT void glSecondaryColor3iv(const GLint* v)const;
GEGL_EXPORT void glCreateBuffers(GLsizei n,GLuint* buffers)const;
GEGL_EXPORT void glMultiTexCoord2xvOES(GLenum texture,const GLfixed* coords)const;
GEGL_EXPORT void glTexGenxvOES(GLenum coord,GLenum pname,const GLfixed* params)const;
GEGL_EXPORT void glMultTransposeMatrixf(const GLfloat m[16])const;
GEGL_EXPORT void glBeginTransformFeedbackEXT(GLenum primitiveMode)const;
GEGL_EXPORT void glTexCoord2fColor3fVertex3fSUN(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glNormal3sv(const GLshort* v)const;
GEGL_EXPORT void glFreeObjectBufferATI(GLuint buffer)const;
GEGL_EXPORT void glBlendBarrierNV()const;
GEGL_EXPORT void glUniform4i64vNV(GLint location,GLsizei count,const GLint64EXT* value)const;
GEGL_EXPORT void glGetnUniformuivARB(GLuint program,GLint location,GLsizei bufSize,GLuint* params)const;
GEGL_EXPORT void glAlphaFragmentOp3ATI(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)const;
GEGL_EXPORT void glProgramEnvParameters4fvEXT(GLenum target,GLuint index,GLsizei count,const GLfloat* params)const;
GEGL_EXPORT void glBlendFuncSeparateEXT(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)const;
GEGL_EXPORT void glConvolutionParameterivEXT(GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glPixelTexGenSGIX(GLenum mode)const;
GEGL_EXPORT void glDeleteProgram(GLuint program)const;
GEGL_EXPORT void glUniformMatrix4x3dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glGetVideoCaptureStreamivNV(GLuint video_capture_slot,GLuint stream,GLenum pname,GLint* params)const;
GEGL_EXPORT void glProgramUniform4uiEXT(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)const;
GEGL_EXPORT void glMakeImageHandleNonResidentARB(GLuint64 handle)const;
GEGL_EXPORT void glSecondaryColor3dEXT(GLdouble red,GLdouble green,GLdouble blue)const;
GEGL_EXPORT void glDeleteQueries(GLsizei n,const GLuint* ids)const;
GEGL_EXPORT void glNormalP3uiv(GLenum type,const GLuint* coords)const;
GEGL_EXPORT void glRasterPos2d(GLdouble x,GLdouble y)const;
GEGL_EXPORT void glInitNames()const;
GEGL_EXPORT void glBinormal3fvEXT(const GLfloat* v)const;
GEGL_EXPORT void glColor3dv(const GLdouble* v)const;
GEGL_EXPORT void glVertexArrayVertexAttribDivisorEXT(GLuint vaobj,GLuint index,GLuint divisor)const;
GEGL_EXPORT void glArrayElementEXT(GLint i)const;
GEGL_EXPORT void glProgramParameter4dNV(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glIndexxOES(GLfixed component)const;
GEGL_EXPORT void glUniform3uivEXT(GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glPopGroupMarkerEXT()const;
GEGL_EXPORT void glClearNamedFramebufferuiv(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLuint* value)const;
GEGL_EXPORT void glSetLocalConstantEXT(GLuint id,GLenum type,const void* addr)const;
GEGL_EXPORT void glProgramUniform1ui64NV(GLuint program,GLint location,GLuint64EXT x)const;
GEGL_EXPORT void glColor4hvNV(const GLhalfNV* v)const;
GEGL_EXPORT void glGetVertexAttribfv(GLuint index,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glDispatchCompute(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)const;
GEGL_EXPORT void glGetActiveAttrib(GLuint program,GLuint index,GLsizei bufSize,GLsizei* length,GLint* size,GLenum* type,GLchar* name)const;
GEGL_EXPORT void glFragmentColorMaterialSGIX(GLenum face,GLenum mode)const;
GEGL_EXPORT void glTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid* pixels)const;
GEGL_EXPORT void glGetnMinmaxARB(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void* values)const;
GEGL_EXPORT void glLogicOp(GLenum opcode)const;
GEGL_EXPORT void glProgramUniformMatrix3x4fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glWindowPos4iMESA(GLint x,GLint y,GLint z,GLint w)const;
GEGL_EXPORT void glPixelTransferf(GLenum pname,GLfloat param)const;
GEGL_EXPORT void glGetTextureParameterIuiv(GLuint texture,GLenum pname,GLuint* params)const;
GEGL_EXPORT void glMultiTexCoord1xOES(GLenum texture,GLfixed s)const;
GEGL_EXPORT void glProgramUniformMatrix4dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glGetnUniformiv(GLuint program,GLint location,GLsizei bufSize,GLint* params)const;
GEGL_EXPORT void glFramebufferTexture1DEXT(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)const;
GEGL_EXPORT void glVertexPointervINTEL(GLint size,GLenum type,const void** pointer)const;
GEGL_EXPORT void glTextureParameterIiv(GLuint texture,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glGetSeparableFilterEXT(GLenum target,GLenum format,GLenum type,void* row,void* column,void* span)const;
GEGL_EXPORT void glMultiTexCoord3iARB(GLenum target,GLint s,GLint t,GLint r)const;
GEGL_EXPORT void glRasterPos4xvOES(const GLfixed* coords)const;
GEGL_EXPORT void glDrawTransformFeedbackStream(GLenum mode,GLuint id,GLuint stream)const;
GEGL_EXPORT void glVertex3hvNV(const GLhalfNV* v)const;
GEGL_EXPORT void glVertexArrayMultiTexCoordOffsetEXT(GLuint vaobj,GLuint buffer,GLenum texunit,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
GEGL_EXPORT void glProvokingVertex(GLenum mode)const;
GEGL_EXPORT void glAccumxOES(GLenum op,GLfixed value)const;
GEGL_EXPORT void glShaderBinary(GLsizei count,const GLuint* shaders,GLenum binaryformat,const void* binary,GLsizei length)const;
GEGL_EXPORT void glGetMultiTexGenivEXT(GLenum texunit,GLenum coord,GLenum pname,GLint* params)const;
GEGL_EXPORT void glPointParameterxvOES(GLenum pname,const GLfixed* params)const;
GEGL_EXPORT void glCreateStatesNV(GLsizei n,GLuint* states)const;
GEGL_EXPORT void glClearDepthdNV(GLdouble depth)const;
GEGL_EXPORT void glClearColorIuiEXT(GLuint red,GLuint green,GLuint blue,GLuint alpha)const;
GEGL_EXPORT void glBindMultiTextureEXT(GLenum texunit,GLenum target,GLuint texture)const;
GEGL_EXPORT void glTexGeniv(GLenum coord,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glDrawElements(GLenum mode,GLsizei count,GLenum type,const GLvoid* indices)const;
GEGL_EXPORT void glProgramUniform4iv(GLuint program,GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glDisableVertexArrayEXT(GLuint vaobj,GLenum array)const;
GEGL_EXPORT void glProgramUniform3ui64NV(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)const;
GEGL_EXPORT void glClientActiveTexture(GLenum texture)const;
GEGL_EXPORT void glMultiTexParameterIivEXT(GLenum texunit,GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glUniform1i64ARB(GLint location,GLint64 x)const;
GEGL_EXPORT void glUniform1iv(GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glMulticastBarrierNV()const;
GEGL_EXPORT void glVertexAttribArrayObjectATI(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLuint buffer,GLuint offset)const;
GEGL_EXPORT void glUniform2iARB(GLint location,GLint v0,GLint v1)const;
GEGL_EXPORT void glDrawArraysInstanced(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)const;
GEGL_EXPORT void glVertexAttrib2sNV(GLuint index,GLshort x,GLshort y)const;
GEGL_EXPORT void glTexBufferEXT(GLenum target,GLenum internalformat,GLuint buffer)const;
GEGL_EXPORT void glVertexStream2fATI(GLenum stream,GLfloat x,GLfloat y)const;
GEGL_EXPORT void glDebugMessageCallbackAMD(GLDEBUGPROCAMD callback,void* userParam)const;
GEGL_EXPORT void glSamplerParameteriv(GLuint sampler,GLenum pname,const GLint* param)const;
GEGL_EXPORT void glVertexAttrib4uiv(GLuint index,const GLuint* v)const;
GEGL_EXPORT void glEndQueryIndexed(GLenum target,GLuint index)const;
GEGL_EXPORT void glNormalStream3sATI(GLenum stream,GLshort nx,GLshort ny,GLshort nz)const;
GEGL_EXPORT void glProgramParameteriARB(GLuint program,GLenum pname,GLint value)const;
GEGL_EXPORT void glTexEnvxOES(GLenum target,GLenum pname,GLfixed param)const;
GEGL_EXPORT void glProgramUniform1iv(GLuint program,GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glDisableVertexAttribAPPLE(GLuint index,GLenum pname)const;
GEGL_EXPORT void glBindRenderbuffer(GLenum target,GLuint renderbuffer)const;
GEGL_EXPORT void glMultiTexSubImage3DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT GLboolean glIsProgram(GLuint program)const;
GEGL_EXPORT void glMultiDrawElementsIndirectAMD(GLenum mode,GLenum type,const void* indirect,GLsizei primcount,GLsizei stride)const;
GEGL_EXPORT void glGetProgramInfoLog(GLuint program,GLsizei bufSize,GLsizei* length,GLchar* infoLog)const;
GEGL_EXPORT void glGetLocalConstantBooleanvEXT(GLuint id,GLenum value,GLboolean* data)const;
GEGL_EXPORT void glPixelTransformParameteriEXT(GLenum target,GLenum pname,GLint param)const;
GEGL_EXPORT void glTexCoord4bOES(GLbyte s,GLbyte t,GLbyte r,GLbyte q)const;
GEGL_EXPORT void glVertexAttrib4fv(GLuint index,const GLfloat* v)const;
GEGL_EXPORT void glProgramUniformMatrix2x3dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glProgramEnvParametersI4uivNV(GLenum target,GLuint index,GLsizei count,const GLuint* params)const;
GEGL_EXPORT void glTexCoord3xOES(GLfixed s,GLfixed t,GLfixed r)const;
GEGL_EXPORT void glLoadTransposeMatrixfARB(const GLfloat* m)const;
GEGL_EXPORT void glImageTransformParameteriHP(GLenum target,GLenum pname,GLint param)const;
GEGL_EXPORT void glMultiTexCoord4xOES(GLenum texture,GLfixed s,GLfixed t,GLfixed r,GLfixed q)const;
GEGL_EXPORT void glVertexAttribs3fvNV(GLuint index,GLsizei count,const GLfloat* v)const;
GEGL_EXPORT void glVertexAttrib2fv(GLuint index,const GLfloat* v)const;
GEGL_EXPORT void glUniform3ui64NV(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)const;
GEGL_EXPORT void glCombinerParameterfvNV(GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glFragmentMaterialiSGIX(GLenum face,GLenum pname,GLint param)const;
GEGL_EXPORT void glGetBooleani_v(GLenum target,GLuint index,GLboolean* data)const;
GEGL_EXPORT GLuint glGetProgramResourceIndex(GLuint program,GLenum programInterface,const GLchar* name)const;
GEGL_EXPORT void glBeginConditionalRenderNV(GLuint id,GLenum mode)const;
GEGL_EXPORT void glDisableClientState(GLenum cap)const;
GEGL_EXPORT void glPathFogGenNV(GLenum genMode)const;
GEGL_EXPORT void glStencilThenCoverFillPathNV(GLuint path,GLenum fillMode,GLuint mask,GLenum coverMode)const;
GEGL_EXPORT void glVertexArrayIndexOffsetEXT(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)const;
GEGL_EXPORT void glProgramBufferParametersIuivNV(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLuint* params)const;
GEGL_EXPORT void glPixelTransformParameterivEXT(GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glDisableClientStateiEXT(GLenum array,GLuint index)const;
GEGL_EXPORT void glTexBufferARB(GLenum target,GLenum internalformat,GLuint buffer)const;
GEGL_EXPORT void glGetLocalConstantIntegervEXT(GLuint id,GLenum value,GLint* data)const;
GEGL_EXPORT void glColor4uiv(const GLuint* v)const;
GEGL_EXPORT void glProgramUniform3i(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)const;
GEGL_EXPORT void glMultiDrawElementsIndirectBindlessCountNV(GLenum mode,GLenum type,const void* indirect,GLsizei drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount)const;
GEGL_EXPORT void glGetBufferPointervARB(GLenum target,GLenum pname,void** params)const;
GEGL_EXPORT void glMultiTexParameterIuivEXT(GLenum texunit,GLenum target,GLenum pname,const GLuint* params)const;
GEGL_EXPORT void glEvalMesh2(GLenum mode,GLint i1,GLint i2,GLint j1,GLint j2)const;
GEGL_EXPORT void glEvalMesh1(GLenum mode,GLint i1,GLint i2)const;
GEGL_EXPORT void glProgramUniform3f(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)const;
GEGL_EXPORT void glStencilThenCoverFillPathInstancedNV(GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum coverMode,GLenum transformType,const GLfloat* transformValues)const;
GEGL_EXPORT void glProgramUniform3d(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2)const;
GEGL_EXPORT void glMapVertexAttrib1dAPPLE(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble* points)const;
GEGL_EXPORT void glEvalCoord2fv(const GLfloat* u)const;
GEGL_EXPORT void glGetUniformivARB(GLhandleARB programObj,GLint location,GLint* params)const;
GEGL_EXPORT void glLoadTransposeMatrixd(const GLdouble m[16])const;
GEGL_EXPORT void glLoadTransposeMatrixf(const GLfloat m[16])const;
GEGL_EXPORT void glGetPointervEXT(GLenum pname,void** params)const;
GEGL_EXPORT void glSignalVkSemaphoreNV(GLuint64 vkSemaphore)const;
GEGL_EXPORT void glEndConditionalRenderNV()const;
GEGL_EXPORT void glTexCoord2fNormal3fVertex3fSUN(GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glUniform3i64vARB(GLint location,GLsizei count,const GLint64* value)const;
GEGL_EXPORT void glProgramUniform2uiEXT(GLuint program,GLint location,GLuint v0,GLuint v1)const;
GEGL_EXPORT void glVertexAttribI1ui(GLuint index,GLuint x)const;
GEGL_EXPORT void glProgramNamedParameter4dvNV(GLuint id,GLsizei len,const GLubyte* name,const GLdouble* v)const;
GEGL_EXPORT void glCompileCommandListNV(GLuint list)const;
GEGL_EXPORT void glGetRenderbufferParameterivEXT(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetnPolygonStipple(GLsizei bufSize,GLubyte* pattern)const;
GEGL_EXPORT GLboolean glIsBufferResidentNV(GLenum target)const;
GEGL_EXPORT void glSecondaryColor3ubvEXT(const GLubyte* v)const;
GEGL_EXPORT void glGetNamedRenderbufferParameterivEXT(GLuint renderbuffer,GLenum pname,GLint* params)const;
GEGL_EXPORT void glNamedFramebufferSampleLocationsfvARB(GLuint framebuffer,GLuint start,GLsizei count,const GLfloat* v)const;
GEGL_EXPORT void glMultiTexGendvEXT(GLenum texunit,GLenum coord,GLenum pname,const GLdouble* params)const;
GEGL_EXPORT void glVertexArrayRangeNV(GLsizei length,const void* pointer)const;
GEGL_EXPORT GLboolean glIsTextureHandleResidentNV(GLuint64 handle)const;
GEGL_EXPORT void glGetProgramEnvParameterdvARB(GLenum target,GLuint index,GLdouble* params)const;
GEGL_EXPORT GLboolean glIsNamedStringARB(GLint namelen,const GLchar* name)const;
GEGL_EXPORT void glSecondaryColorFormatNV(GLint size,GLenum type,GLsizei stride)const;
GEGL_EXPORT void glVertexAttrib4ubvNV(GLuint index,const GLubyte* v)const;
GEGL_EXPORT void glTagSampleBufferSGIX()const;
GEGL_EXPORT void glVDPAUUnregisterSurfaceNV(GLvdpauSurfaceNV surface)const;
GEGL_EXPORT void glGetPerfQueryIdByNameINTEL(GLchar* queryName,GLuint* queryId)const;
GEGL_EXPORT void glGetInteger64v(GLenum pname,GLint64* data)const;
GEGL_EXPORT void glClipPlane(GLenum plane,const GLdouble* equation)const;
GEGL_EXPORT void glColor4ubVertex3fSUN(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glIndexub(GLubyte c)const;
GEGL_EXPORT void glGetProgramEnvParameterfvARB(GLenum target,GLuint index,GLfloat* params)const;
GEGL_EXPORT void glVertexAttrib4usvARB(GLuint index,const GLushort* v)const;
GEGL_EXPORT void glNamedFramebufferRenderbuffer(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)const;
GEGL_EXPORT void glProgramUniformMatrix3x4dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT GLboolean glTestFenceAPPLE(GLuint fence)const;
GEGL_EXPORT void glVertexAttrib4Niv(GLuint index,const GLint* v)const;
GEGL_EXPORT void glVertexAttribL2i64vNV(GLuint index,const GLint64EXT* v)const;
GEGL_EXPORT void glColorP4uiv(GLenum type,const GLuint* color)const;
GEGL_EXPORT void glUniformMatrix2x3fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glCallCommandListNV(GLuint list)const;
GEGL_EXPORT void glClearBufferiv(GLenum buffer,GLint drawbuffer,const GLint* value)const;
GEGL_EXPORT void glNamedStringARB(GLenum type,GLint namelen,const GLchar* name,GLint stringlen,const GLchar* string)const;
GEGL_EXPORT void glMatrixMult3x2fNV(GLenum matrixMode,const GLfloat* m)const;
GEGL_EXPORT void glGetNamedProgramStringEXT(GLuint program,GLenum target,GLenum pname,void* string)const;
GEGL_EXPORT void glGetnHistogramARB(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void* values)const;
GEGL_EXPORT void glGetTextureLevelParameterfv(GLuint texture,GLint level,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glMultiTexCoord1fv(GLenum target,const GLfloat* v)const;
GEGL_EXPORT void glBitmapxOES(GLsizei width,GLsizei height,GLfixed xorig,GLfixed yorig,GLfixed xmove,GLfixed ymove,const GLubyte* bitmap)const;
GEGL_EXPORT void glGetSamplerParameterIuiv(GLuint sampler,GLenum pname,GLuint* params)const;
GEGL_EXPORT void glTexCoordP3ui(GLenum type,GLuint coords)const;
GEGL_EXPORT void glTextureSubImage1D(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glVertexAttribLPointerEXT(GLuint index,GLint size,GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glFogCoordPointerEXT(GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glWindowPos3s(GLshort x,GLshort y,GLshort z)const;
GEGL_EXPORT void glVertexAttribs2svNV(GLuint index,GLsizei count,const GLshort* v)const;
GEGL_EXPORT void glTextureImage3DEXT(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glWindowPos3i(GLint x,GLint y,GLint z)const;
GEGL_EXPORT void glWindowPos3d(GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glWindowPos3f(GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT GLboolean glIsEnabledIndexedEXT(GLenum target,GLuint index)const;
GEGL_EXPORT void glGetNamedProgramivEXT(GLuint program,GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glVertex3xvOES(const GLfixed* coords)const;
GEGL_EXPORT void glColor3us(GLushort red,GLushort green,GLushort blue)const;
GEGL_EXPORT void glBeginPerfMonitorAMD(GLuint monitor)const;
GEGL_EXPORT void glProgramUniformMatrix4x3dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glGetNamedProgramLocalParameterIuivEXT(GLuint program,GLenum target,GLuint index,GLuint* params)const;
GEGL_EXPORT void glReadnPixels(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void* data)const;
GEGL_EXPORT void glMultiTexCoord4f(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)const;
GEGL_EXPORT void glColor3ub(GLubyte red,GLubyte green,GLubyte blue)const;
GEGL_EXPORT void glMultiTexCoord4d(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)const;
GEGL_EXPORT void glVertexAttribL3ui64NV(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)const;
GEGL_EXPORT void glColor3ui(GLuint red,GLuint green,GLuint blue)const;
GEGL_EXPORT void glProgramUniform4fvEXT(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glVertexAttrib2sARB(GLuint index,GLshort x,GLshort y)const;
GEGL_EXPORT void glMultiTexCoord4i(GLenum target,GLint s,GLint t,GLint r,GLint q)const;
GEGL_EXPORT GLenum glCheckFramebufferStatusEXT(GLenum target)const;
GEGL_EXPORT void glGetnMapivARB(GLenum target,GLenum query,GLsizei bufSize,GLint* v)const;
GEGL_EXPORT void glMultiTexCoord1ivARB(GLenum target,const GLint* v)const;
GEGL_EXPORT void glDisableVertexAttribArrayARB(GLuint index)const;
GEGL_EXPORT void glGetPolygonStipple(GLubyte* mask)const;
GEGL_EXPORT void glVertexAttribI4ui(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)const;
GEGL_EXPORT void glGetPathDashArrayNV(GLuint path,GLfloat* dashArray)const;
GEGL_EXPORT void glMultiTexRenderbufferEXT(GLenum texunit,GLenum target,GLuint renderbuffer)const;
GEGL_EXPORT void glCopyTextureSubImage1D(GLuint texture,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)const;
GEGL_EXPORT void glDeleteOcclusionQueriesNV(GLsizei n,const GLuint* ids)const;
GEGL_EXPORT void glVertex4hvNV(const GLhalfNV* v)const;
GEGL_EXPORT void glGetnTexImage(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void* pixels)const;
GEGL_EXPORT void glProgramLocalParameter4dARB(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glBlendEquation(GLenum mode)const;
GEGL_EXPORT void glUnlockArraysEXT()const;
GEGL_EXPORT void glGetQueryObjectui64vEXT(GLuint id,GLenum pname,GLuint64* params)const;
GEGL_EXPORT void glVertexAttribI4uivEXT(GLuint index,const GLuint* v)const;
GEGL_EXPORT void glUniform1i64vNV(GLint location,GLsizei count,const GLint64EXT* value)const;
GEGL_EXPORT void glMultiTexCoord3dv(GLenum target,const GLdouble* v)const;
GEGL_EXPORT void glColor4sv(const GLshort* v)const;
GEGL_EXPORT void glVertexStream4ivATI(GLenum stream,const GLint* coords)const;
GEGL_EXPORT void glPopClientAttrib()const;
GEGL_EXPORT void glClearBufferData(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void* data)const;
GEGL_EXPORT void glGetProgramivNV(GLuint id,GLenum pname,GLint* params)const;
GEGL_EXPORT void glBeginTransformFeedback(GLenum primitiveMode)const;
GEGL_EXPORT void glFinishObjectAPPLE(GLenum object,GLint name)const;
GEGL_EXPORT void glGetMinmaxParameterivEXT(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glColor3iv(const GLint* v)const;
GEGL_EXPORT void glVertexAttrib3sv(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glCompressedTexImage1D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const GLvoid* data)const;
GEGL_EXPORT void glDeleteTransformFeedbacks(GLsizei n,const GLuint* ids)const;
GEGL_EXPORT void glGetVideoi64vNV(GLuint video_slot,GLenum pname,GLint64EXT* params)const;
GEGL_EXPORT void glDrawRangeElementsBaseVertex(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void* indices,GLint basevertex)const;
GEGL_EXPORT void glUniform4i64vARB(GLint location,GLsizei count,const GLint64* value)const;
GEGL_EXPORT void glTextureStorage3DMultisampleEXT(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)const;
GEGL_EXPORT void glGetTexParameterfv(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glProgramUniformui64vNV(GLuint program,GLint location,GLsizei count,const GLuint64EXT* value)const;
GEGL_EXPORT void glCompressedMultiTexImage1DEXT(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void* bits)const;
GEGL_EXPORT void glProgramUniform2ivEXT(GLuint program,GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glPushGroupMarkerEXT(GLsizei length,const GLchar* marker)const;
GEGL_EXPORT void glVertexAttrib1dv(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glMatrixLoadIdentityEXT(GLenum mode)const;
GEGL_EXPORT void glMultTransposeMatrixxOES(const GLfixed* m)const;
GEGL_EXPORT void glGetPixelMapxv(GLenum map,GLint size,GLfixed* values)const;
GEGL_EXPORT void glFramebufferSampleLocationsfvARB(GLenum target,GLuint start,GLsizei count,const GLfloat* v)const;
GEGL_EXPORT void glGetLightiv(GLenum light,GLenum pname,GLint* params)const;
GEGL_EXPORT void glBlendFuncSeparatei(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)const;
GEGL_EXPORT GLboolean glAcquireKeyedMutexWin32EXT(GLuint memory,GLuint64 key,GLuint timeout)const;
GEGL_EXPORT void glGetBooleanIndexedvEXT(GLenum target,GLuint index,GLboolean* data)const;
GEGL_EXPORT void glGetProgramSubroutineParameteruivNV(GLenum target,GLuint index,GLuint* param)const;
GEGL_EXPORT void glUniform2ui(GLint location,GLuint v0,GLuint v1)const;
GEGL_EXPORT void glApplyFramebufferAttachmentCMAAINTEL()const;
GEGL_EXPORT void glWindowPos2fv(const GLfloat* v)const;
GEGL_EXPORT void glWaitVkSemaphoreNV(GLuint64 vkSemaphore)const;
GEGL_EXPORT void glDisablei(GLenum target,GLuint index)const;
GEGL_EXPORT void glSelectPerfMonitorCountersAMD(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint* counterList)const;
GEGL_EXPORT void glGetVertexAttribLi64vNV(GLuint index,GLenum pname,GLint64EXT* params)const;
GEGL_EXPORT void glBlendFuncSeparateiARB(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)const;
GEGL_EXPORT void glWeightuivARB(GLint size,const GLuint* weights)const;
GEGL_EXPORT void glWindowPos2iARB(GLint x,GLint y)const;
GEGL_EXPORT void glGetProgramLocalParameterdvARB(GLenum target,GLuint index,GLdouble* params)const;
GEGL_EXPORT void glGetUniformui64vARB(GLuint program,GLint location,GLuint64* params)const;
GEGL_EXPORT void glSecondaryColor3us(GLushort red,GLushort green,GLushort blue)const;
GEGL_EXPORT void glGetSynciv(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei* length,GLint* values)const;
GEGL_EXPORT void glMakeImageHandleResidentARB(GLuint64 handle,GLenum access)const;
GEGL_EXPORT void glGetProgramNamedParameterfvNV(GLuint id,GLsizei len,const GLubyte* name,GLfloat* params)const;
GEGL_EXPORT void glTextureStorage3D(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)const;
GEGL_EXPORT void glVertexAttrib4svNV(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glProgramUniform2i(GLuint program,GLint location,GLint v0,GLint v1)const;
GEGL_EXPORT void glListDrawCommandsStatesClientNV(GLuint list,GLuint segment,const void** indirects,const GLsizei* sizes,const GLuint* states,const GLuint* fbos,GLuint count)const;
GEGL_EXPORT void glProgramLocalParametersI4uivNV(GLenum target,GLuint index,GLsizei count,const GLuint* params)const;
GEGL_EXPORT void glBeginTransformFeedbackNV(GLenum primitiveMode)const;
GEGL_EXPORT void glGetProgramBinary(GLuint program,GLsizei bufSize,GLsizei* length,GLenum* binaryFormat,void* binary)const;
GEGL_EXPORT void glBinormal3iEXT(GLint bx,GLint by,GLint bz)const;
GEGL_EXPORT void glEvalPoint1(GLint i)const;
GEGL_EXPORT void glEvalPoint2(GLint i,GLint j)const;
GEGL_EXPORT void glPauseTransformFeedback()const;
GEGL_EXPORT void glWindowPos2sMESA(GLshort x,GLshort y)const;
GEGL_EXPORT void glGlobalAlphaFactorbSUN(GLbyte factor)const;
GEGL_EXPORT void glCreateTransformFeedbacks(GLsizei n,GLuint* ids)const;
GEGL_EXPORT void glTexturePageCommitmentEXT(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)const;
GEGL_EXPORT void glTransformFeedbackVaryingsNV(GLuint program,GLsizei count,const GLint* locations,GLenum bufferMode)const;
GEGL_EXPORT void glTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const GLvoid* pixels)const;
GEGL_EXPORT void glConvolutionParameterfvEXT(GLenum target,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glBlitFramebufferEXT(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)const;
GEGL_EXPORT void glUniformMatrix4fvARB(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glProgramEnvParameter4dvARB(GLenum target,GLuint index,const GLdouble* params)const;
GEGL_EXPORT void glTextureStorageMem2DEXT(GLuint texture,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLuint memory,GLuint64 offset)const;
GEGL_EXPORT void glVertexAttribP3uiv(GLuint index,GLenum type,GLboolean normalized,const GLuint* value)const;
GEGL_EXPORT void glFogCoordFormatNV(GLenum type,GLsizei stride)const;
GEGL_EXPORT void glGetMultiTexLevelParameterivEXT(GLenum texunit,GLenum target,GLint level,GLenum pname,GLint* params)const;
GEGL_EXPORT GLboolean glIsOcclusionQueryNV(GLuint id)const;
GEGL_EXPORT void glCompressedTexImage2DARB(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void* data)const;
GEGL_EXPORT void glGetProgramEnvParameterIuivNV(GLenum target,GLuint index,GLuint* params)const;
GEGL_EXPORT void glVertexAttrib4sv(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glVertexAttrib4fvARB(GLuint index,const GLfloat* v)const;
GEGL_EXPORT void glLoadName(GLuint name)const;
GEGL_EXPORT void glBindVertexShaderEXT(GLuint id)const;
GEGL_EXPORT void glGetNamedProgramLocalParameterIivEXT(GLuint program,GLenum target,GLuint index,GLint* params)const;
GEGL_EXPORT void glProgramUniform3uiEXT(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)const;
GEGL_EXPORT void glProgramUniformMatrix4x2dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glTexCoord1hvNV(const GLhalfNV* v)const;
GEGL_EXPORT void glLoadMatrixd(const GLdouble* m)const;
GEGL_EXPORT void glTexParameterfv(GLenum target,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glVariantdvEXT(GLuint id,const GLdouble* addr)const;
GEGL_EXPORT void glCullParameterfvEXT(GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glUniform3dv(GLint location,GLsizei count,const GLdouble* value)const;
GEGL_EXPORT void glProgramUniform3fv(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT GLboolean glIsBufferARB(GLuint buffer)const;
GEGL_EXPORT void glMultiTexCoord1bOES(GLenum texture,GLbyte s)const;
GEGL_EXPORT void glFogCoordhNV(GLhalfNV fog)const;
GEGL_EXPORT void glFramebufferSampleLocationsfvNV(GLenum target,GLuint start,GLsizei count,const GLfloat* v)const;
GEGL_EXPORT GLuint glGenSymbolsEXT(GLenum datatype,GLenum storagetype,GLenum range,GLuint components)const;
GEGL_EXPORT void glGetConvolutionFilter(GLenum target,GLenum format,GLenum type,GLvoid* image)const;
GEGL_EXPORT void glProgramUniform1fvEXT(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glGetNextPerfQueryIdINTEL(GLuint queryId,GLuint* nextQueryId)const;
GEGL_EXPORT void glCompressedTexImage1DARB(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void* data)const;
GEGL_EXPORT void glBindSamplers(GLuint first,GLsizei count,const GLuint* samplers)const;
GEGL_EXPORT void glGetProgramEnvParameterIivNV(GLenum target,GLuint index,GLint* params)const;
GEGL_EXPORT void glGetQueryObjectui64v(GLuint id,GLenum pname,GLuint64* params)const;
GEGL_EXPORT void glVertexAttribL4ui64vNV(GLuint index,const GLuint64EXT* v)const;
GEGL_EXPORT void glGetVideoivNV(GLuint video_slot,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetTextureImage(GLuint texture,GLint level,GLenum format,GLenum type,GLsizei bufSize,void* pixels)const;
GEGL_EXPORT void glProgramUniform1fv(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glUniformMatrix4fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glColorMask(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)const;
GEGL_EXPORT void glBeginFragmentShaderATI()const;
GEGL_EXPORT void glMultiDrawArraysEXT(GLenum mode,const GLint* first,const GLsizei* count,GLsizei primcount)const;
GEGL_EXPORT void glGenNamesAMD(GLenum identifier,GLuint num,GLuint* names)const;
GEGL_EXPORT void glPathParameteriNV(GLuint path,GLenum pname,GLint value)const;
GEGL_EXPORT void glCreateCommandListsNV(GLsizei n,GLuint* lists)const;
GEGL_EXPORT void glDeleteProgramPipelines(GLsizei n,const GLuint* pipelines)const;
GEGL_EXPORT void glCopyColorSubTableEXT(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)const;
GEGL_EXPORT void glVariantsvEXT(GLuint id,const GLshort* addr)const;
GEGL_EXPORT void glGenProgramPipelines(GLsizei n,GLuint* pipelines)const;
GEGL_EXPORT void glVertexArrayEdgeFlagOffsetEXT(GLuint vaobj,GLuint buffer,GLsizei stride,GLintptr offset)const;
GEGL_EXPORT void glWindowPos2s(GLshort x,GLshort y)const;
GEGL_EXPORT void glSecondaryColor3iEXT(GLint red,GLint green,GLint blue)const;
GEGL_EXPORT void glWindowPos2i(GLint x,GLint y)const;
GEGL_EXPORT void glWindowPos2f(GLfloat x,GLfloat y)const;
GEGL_EXPORT void glWindowPos2d(GLdouble x,GLdouble y)const;
GEGL_EXPORT void glUniform4uivEXT(GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glOrthoxOES(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)const;
GEGL_EXPORT void glUniformSubroutinesuiv(GLenum shadertype,GLsizei count,const GLuint* indices)const;
GEGL_EXPORT void glRectdv(const GLdouble* v1,const GLdouble* v2)const;
GEGL_EXPORT void glProgramUniform1i64vNV(GLuint program,GLint location,GLsizei count,const GLint64EXT* value)const;
GEGL_EXPORT void glVertexAttribI4uiEXT(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)const;
GEGL_EXPORT void glSecondaryColor3ubEXT(GLubyte red,GLubyte green,GLubyte blue)const;
GEGL_EXPORT void glCompressedMultiTexSubImage1DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void* bits)const;
GEGL_EXPORT void glMultiTexGendEXT(GLenum texunit,GLenum coord,GLenum pname,GLdouble param)const;
GEGL_EXPORT void glColorP3uiv(GLenum type,const GLuint* color)const;
GEGL_EXPORT void glFogCoordfv(const GLfloat* coord)const;
GEGL_EXPORT void glCompileShader(GLuint shader)const;
GEGL_EXPORT void glTexCoord2hNV(GLhalfNV s,GLhalfNV t)const;
GEGL_EXPORT void glUniform1uivEXT(GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glMatrixLoadTransposedEXT(GLenum mode,const GLdouble* m)const;
GEGL_EXPORT void glIndexfv(const GLfloat* c)const;
GEGL_EXPORT void glGetCompressedTextureImage(GLuint texture,GLint level,GLsizei bufSize,void* pixels)const;
GEGL_EXPORT void glGetUniformuivEXT(GLuint program,GLint location,GLuint* params)const;
GEGL_EXPORT void glGetnPixelMapfvARB(GLenum map,GLsizei bufSize,GLfloat* values)const;
GEGL_EXPORT void glFramebufferTextureEXT(GLenum target,GLenum attachment,GLuint texture,GLint level)const;
GEGL_EXPORT void glMultiDrawElementsIndirectCount(GLenum mode,GLenum type,const void* indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)const;
GEGL_EXPORT void glVertexAttribIPointer(GLuint index,GLint size,GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glMultiTexCoordP3ui(GLenum texture,GLenum type,GLuint coords)const;
GEGL_EXPORT void glEvaluateDepthValuesARB()const;
GEGL_EXPORT void glGetNamedBufferParameteriv(GLuint buffer,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetNamedProgramLocalParameterfvEXT(GLuint program,GLenum target,GLuint index,GLfloat* params)const;
GEGL_EXPORT void glColor4fNormal3fVertex3fvSUN(const GLfloat* c,const GLfloat* n,const GLfloat* v)const;
GEGL_EXPORT void glSeparableFilter2DEXT(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void* row,const void* column)const;
GEGL_EXPORT void glTexParameterxOES(GLenum target,GLenum pname,GLfixed param)const;
GEGL_EXPORT void glClearAccumxOES(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)const;
GEGL_EXPORT void glInvalidateFramebuffer(GLenum target,GLsizei numAttachments,const GLenum* attachments)const;
GEGL_EXPORT void glWeightubvARB(GLint size,const GLubyte* weights)const;
GEGL_EXPORT void glVertexAttrib1d(GLuint index,GLdouble x)const;
GEGL_EXPORT void glVertexAttrib1f(GLuint index,GLfloat x)const;
GEGL_EXPORT void glVertex4fv(const GLfloat* v)const;
GEGL_EXPORT void glClearNamedFramebufferfi(GLuint framebuffer,GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)const;
GEGL_EXPORT void glGetQueryBufferObjectuiv(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)const;
GEGL_EXPORT void glClearNamedFramebufferfv(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLfloat* value)const;
GEGL_EXPORT void glEndVertexShaderEXT()const;
GEGL_EXPORT void glVertexAttrib1s(GLuint index,GLshort x)const;
GEGL_EXPORT void glMultiTexCoord4dvARB(GLenum target,const GLdouble* v)const;
GEGL_EXPORT void glMultiTexCoord1sv(GLenum target,const GLshort* v)const;
GEGL_EXPORT void glUniform1ui64vNV(GLint location,GLsizei count,const GLuint64EXT* value)const;
GEGL_EXPORT void glGetClipPlanefOES(GLenum plane,GLfloat* equation)const;
GEGL_EXPORT void glRasterPos2s(GLshort x,GLshort y)const;
GEGL_EXPORT void glWeightivARB(GLint size,const GLint* weights)const;
GEGL_EXPORT void glMultiTexCoord4hvNV(GLenum target,const GLhalfNV* v)const;
GEGL_EXPORT void glNormal3hNV(GLhalfNV nx,GLhalfNV ny,GLhalfNV nz)const;
GEGL_EXPORT void glGetSeparableFilter(GLenum target,GLenum format,GLenum type,GLvoid* row,GLvoid* column,GLvoid* span)const;
GEGL_EXPORT void glGetPathTexGenivNV(GLenum texCoordSet,GLenum pname,GLint* value)const;
GEGL_EXPORT void glColor4bv(const GLbyte* v)const;
GEGL_EXPORT void glRasterPos2f(GLfloat x,GLfloat y)const;
GEGL_EXPORT void glNamedBufferPageCommitmentARB(GLuint buffer,GLintptr offset,GLsizeiptr size,GLboolean commit)const;
GEGL_EXPORT void glLoadIdentity()const;
GEGL_EXPORT void glRasterPos2i(GLint x,GLint y)const;
GEGL_EXPORT void glRasterPos4iv(const GLint* v)const;
GEGL_EXPORT void glMultiTexCoord2fvARB(GLenum target,const GLfloat* v)const;
GEGL_EXPORT void glUniformMatrix4x3fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glClearBufferfv(GLenum buffer,GLint drawbuffer,const GLfloat* value)const;
GEGL_EXPORT void glMultiTexCoord4hNV(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)const;
GEGL_EXPORT void glTextureBarrier()const;
GEGL_EXPORT void glReplacementCodeuivSUN(const GLuint* code)const;
GEGL_EXPORT void glDeleteAsyncMarkersSGIX(GLuint marker,GLsizei range)const;
GEGL_EXPORT void glTexCoord2bvOES(const GLbyte* coords)const;
GEGL_EXPORT void glEvalCoord2xOES(GLfixed u,GLfixed v)const;
GEGL_EXPORT void glGetSharpenTexFuncSGIS(GLenum target,GLfloat* points)const;
GEGL_EXPORT void glProgramUniformHandleui64vNV(GLuint program,GLint location,GLsizei count,const GLuint64* values)const;
GEGL_EXPORT void glIglooInterfaceSGIX(GLenum pname,const void* params)const;
GEGL_EXPORT void glWindowPos2dvARB(const GLdouble* v)const;
GEGL_EXPORT void glClearBufferfi(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)const;
GEGL_EXPORT void glDrawArraysIndirect(GLenum mode,const void* indirect)const;
GEGL_EXPORT void glGenVertexArrays(GLsizei n,GLuint* arrays)const;
GEGL_EXPORT void glGetTransformFeedbacki64_v(GLuint xfb,GLenum pname,GLuint index,GLint64* param)const;
GEGL_EXPORT void glEnableVertexArrayAttrib(GLuint vaobj,GLuint index)const;
GEGL_EXPORT void glProgramUniformMatrix3x2dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glVertexStream4fATI(GLenum stream,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glVertexBindingDivisor(GLuint bindingindex,GLuint divisor)const;
GEGL_EXPORT void glGetSamplerParameterIiv(GLuint sampler,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetCoverageModulationTableNV(GLsizei bufsize,GLfloat* v)const;
GEGL_EXPORT void glDepthRangedNV(GLdouble zNear,GLdouble zFar)const;
GEGL_EXPORT void glVertexAttrib3f(GLuint index,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glMultiDrawRangeElementArrayAPPLE(GLenum mode,GLuint start,GLuint end,const GLint* first,const GLsizei* count,GLsizei primcount)const;
GEGL_EXPORT void glVertexAttribFormatNV(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride)const;
GEGL_EXPORT void glGetQueryBufferObjecti64v(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)const;
GEGL_EXPORT void glGetVertexAttribdv(GLuint index,GLenum pname,GLdouble* params)const;
GEGL_EXPORT void glGetUniformi64vARB(GLuint program,GLint location,GLint64* params)const;
GEGL_EXPORT GLboolean glAreTexturesResidentEXT(GLsizei n,const GLuint* textures,GLboolean* residences)const;
GEGL_EXPORT GLhandleARB glGetHandleARB(GLenum pname)const;
GEGL_EXPORT void glVideoCaptureStreamParameterdvNV(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLdouble* params)const;
GEGL_EXPORT void glMapParameterivNV(GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT GLboolean glIsVertexArray(GLuint array)const;
GEGL_EXPORT void glSecondaryColor3sEXT(GLshort red,GLshort green,GLshort blue)const;
GEGL_EXPORT void glGetTexParameterIivEXT(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glFrameTerminatorGREMEDY()const;
GEGL_EXPORT void glBlendBarrierKHR()const;
GEGL_EXPORT void glVertexAttrib4NubARB(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)const;
GEGL_EXPORT void glPrimitiveRestartNV()const;
GEGL_EXPORT void glVertexAttribL1ui64vARB(GLuint index,const GLuint64EXT* v)const;
GEGL_EXPORT void glVertexAttribI4ivEXT(GLuint index,const GLint* v)const;
GEGL_EXPORT void glVertexAttribs4svNV(GLuint index,GLsizei count,const GLshort* v)const;
GEGL_EXPORT void glUniform1ui(GLint location,GLuint v0)const;
GEGL_EXPORT void glVertexAttrib2fvARB(GLuint index,const GLfloat* v)const;
GEGL_EXPORT void glVertexAttribI4svEXT(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glTextureImage3DMultisampleCoverageNV(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)const;
GEGL_EXPORT void glMemoryBarrier(GLbitfield barriers)const;
GEGL_EXPORT void glGetVariantArrayObjectfvATI(GLuint id,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glTexCoord4fColor4fNormal3fVertex4fvSUN(const GLfloat* tc,const GLfloat* c,const GLfloat* n,const GLfloat* v)const;
GEGL_EXPORT GLboolean glIsProgramARB(GLuint program)const;
GEGL_EXPORT void glBindImageTextureEXT(GLuint index,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLint format)const;
GEGL_EXPORT GLint glGetFragDataLocation(GLuint program,const GLchar* name)const;
GEGL_EXPORT void glMultiTexCoord1svARB(GLenum target,const GLshort* v)const;
GEGL_EXPORT void glGetMapxvOES(GLenum target,GLenum query,GLfixed* v)const;
GEGL_EXPORT void glTextureStorage2DMultisampleEXT(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)const;
GEGL_EXPORT void glGetMaterialfv(GLenum face,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glVertexAttrib4NbvARB(GLuint index,const GLbyte* v)const;
GEGL_EXPORT void glPixelMapuiv(GLenum map,GLsizei mapsize,const GLuint* values)const;
GEGL_EXPORT void glColorPointerEXT(GLint size,GLenum type,GLsizei stride,GLsizei count,const void* pointer)const;
GEGL_EXPORT void glEnableClientStateiEXT(GLenum array,GLuint index)const;
GEGL_EXPORT void glClearTexSubImage(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void* data)const;
GEGL_EXPORT void glEvalCoord1xvOES(const GLfixed* coords)const;
GEGL_EXPORT void glDetachObjectARB(GLhandleARB containerObj,GLhandleARB attachedObj)const;
GEGL_EXPORT void glGetTextureParameterIiv(GLuint texture,GLenum pname,GLint* params)const;
GEGL_EXPORT void glVariantusvEXT(GLuint id,const GLushort* addr)const;
GEGL_EXPORT void glCompressedTextureImage3DEXT(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void* bits)const;
GEGL_EXPORT void glMultiTexCoord1dARB(GLenum target,GLdouble s)const;
GEGL_EXPORT void glGetVertexArrayIntegeri_vEXT(GLuint vaobj,GLuint index,GLenum pname,GLint* param)const;
GEGL_EXPORT void glVertexAttribI4ubv(GLuint index,const GLubyte* v)const;
GEGL_EXPORT void glPixelTexGenParameterfSGIS(GLenum pname,GLfloat param)const;
GEGL_EXPORT void glProgramUniformMatrix4x2dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glUniform3fARB(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)const;
GEGL_EXPORT GLboolean glIsShader(GLuint shader)const;
GEGL_EXPORT void glConvolutionParameteriv(GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glCopyMultiTexSubImage2DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glEnableVertexAttribArrayARB(GLuint index)const;
GEGL_EXPORT void glMulticastCopyBufferSubDataNV(GLuint readGpu,GLbitfield writeGpuMask,GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)const;
GEGL_EXPORT void glEnable(GLenum cap)const;
GEGL_EXPORT void glGetActiveUniformsiv(GLuint program,GLsizei uniformCount,const GLuint* uniformIndices,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetVertexAttribivARB(GLuint index,GLenum pname,GLint* params)const;
GEGL_EXPORT void glTexCoord4hvNV(const GLhalfNV* v)const;
GEGL_EXPORT void glUseProgramObjectARB(GLhandleARB programObj)const;
GEGL_EXPORT GLint glGetAttribLocation(GLuint program,const GLchar* name)const;
GEGL_EXPORT void glVertexAttrib4dv(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glGetTextureParameteriv(GLuint texture,GLenum pname,GLint* params)const;
GEGL_EXPORT void glNamedBufferStorageMemEXT(GLuint buffer,GLsizeiptr size,GLuint memory,GLuint64 offset)const;
GEGL_EXPORT void glPathSubCoordsNV(GLuint path,GLsizei coordStart,GLsizei numCoords,GLenum coordType,const void* coords)const;
GEGL_EXPORT void glMatrixIndexusvARB(GLint size,const GLushort* indices)const;
GEGL_EXPORT void glGetVideouivNV(GLuint video_slot,GLenum pname,GLuint* params)const;
GEGL_EXPORT void glGetVideoCaptureivNV(GLuint video_capture_slot,GLenum pname,GLint* params)const;
GEGL_EXPORT void glProgramUniform3ui(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)const;
GEGL_EXPORT void glVertexAttrib3svARB(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glGetNamedBufferParameterivEXT(GLuint buffer,GLenum pname,GLint* params)const;
GEGL_EXPORT void glMatrixScaledEXT(GLenum mode,GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glProgramUniformMatrix2x3fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glGetFragmentLightivSGIX(GLenum light,GLenum pname,GLint* params)const;
GEGL_EXPORT const GLubyte* glGetStringi(GLenum name,GLuint index)const;
GEGL_EXPORT void glWindowPos2svARB(const GLshort* v)const;
GEGL_EXPORT void glVertexAttrib2svNV(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glWindowPos2ivARB(const GLint* v)const;
GEGL_EXPORT void glGetVertexAttribPointervNV(GLuint index,GLenum pname,void** pointer)const;
GEGL_EXPORT void glPushMatrix()const;
GEGL_EXPORT void glEdgeFlagPointerListIBM(GLint stride,const GLboolean** pointer,GLint ptrstride)const;
GEGL_EXPORT void glGenerateMipmapEXT(GLenum target)const;
GEGL_EXPORT void glWindowPos3sv(const GLshort* v)const;
GEGL_EXPORT void glPathCoordsNV(GLuint path,GLsizei numCoords,GLenum coordType,const void* coords)const;
GEGL_EXPORT void glProgramUniform1i(GLuint program,GLint location,GLint v0)const;
GEGL_EXPORT void glProgramUniform1d(GLuint program,GLint location,GLdouble v0)const;
GEGL_EXPORT void glProgramUniform1f(GLuint program,GLint location,GLfloat v0)const;
GEGL_EXPORT void glProgramParameteriEXT(GLuint program,GLenum pname,GLint value)const;
GEGL_EXPORT void glCompressedMultiTexImage2DEXT(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void* bits)const;
GEGL_EXPORT void glProgramUniform3iv(GLuint program,GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glIndexiv(const GLint* c)const;
GEGL_EXPORT void glMultiTexCoord4xvOES(GLenum texture,const GLfixed* coords)const;
GEGL_EXPORT void glEGLImageTargetTexture2DOES(GLenum target,GLeglImageOES image)const;
GEGL_EXPORT void glPixelZoom(GLfloat xfactor,GLfloat yfactor)const;
GEGL_EXPORT void glVertex3bvOES(const GLbyte* coords)const;
GEGL_EXPORT void glFramebufferReadBufferEXT(GLuint framebuffer,GLenum mode)const;
GEGL_EXPORT void glExtractComponentEXT(GLuint res,GLuint src,GLuint num)const;
GEGL_EXPORT void glCombinerParameterivNV(GLenum pname,const GLint* params)const;
GEGL_EXPORT void glMinmax(GLenum target,GLenum internalformat,GLboolean sink)const;
GEGL_EXPORT void glColorP3ui(GLenum type,GLuint color)const;
GEGL_EXPORT void glPointParameterfvSGIS(GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glBlendEquationi(GLuint buf,GLenum mode)const;
GEGL_EXPORT void glGetFogFuncSGIS(GLfloat* points)const;
GEGL_EXPORT void glVertexAttrib4fvNV(GLuint index,const GLfloat* v)const;
GEGL_EXPORT void glGetnMinmax(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void* values)const;
GEGL_EXPORT void glFragmentLightiSGIX(GLenum light,GLenum pname,GLint param)const;
GEGL_EXPORT void glMultiTexCoord1bvOES(GLenum texture,const GLbyte* coords)const;
GEGL_EXPORT void glSecondaryColorPointerEXT(GLint size,GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glMultiTexCoordP4uiv(GLenum texture,GLenum type,const GLuint* coords)const;
GEGL_EXPORT void glGetBufferSubDataARB(GLenum target,GLintptrARB offset,GLsizeiptrARB size,void* data)const;
GEGL_EXPORT void glSecondaryColor3hNV(GLhalfNV red,GLhalfNV green,GLhalfNV blue)const;
GEGL_EXPORT void glGetPathParameterivNV(GLuint path,GLenum pname,GLint* value)const;
GEGL_EXPORT void glFlushRasterSGIX()const;
GEGL_EXPORT void glElementPointerATI(GLenum type,const void* pointer)const;
GEGL_EXPORT void glGetAttachedObjectsARB(GLhandleARB containerObj,GLsizei maxCount,GLsizei* count,GLhandleARB* obj)const;
GEGL_EXPORT void glUniform4iv(GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glFogxOES(GLenum pname,GLfixed param)const;
GEGL_EXPORT void glSharpenTexFuncSGIS(GLenum target,GLsizei n,const GLfloat* points)const;
GEGL_EXPORT void glClearDepthfOES(GLclampf depth)const;
GEGL_EXPORT void glDeleteCommandListsNV(GLsizei n,const GLuint* lists)const;
GEGL_EXPORT void glSpecializeShader(GLuint shader,const GLchar* pEntryPoint,GLuint numSpecializationConstants,const GLuint* pConstantIndex,const GLuint* pConstantValue)const;
GEGL_EXPORT void glVertex4hNV(GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)const;
GEGL_EXPORT void glSecondaryColor3dvEXT(const GLdouble* v)const;
GEGL_EXPORT void glGenTextures(GLsizei n,GLuint* textures)const;
GEGL_EXPORT void glTextureStorage2DMultisample(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)const;
GEGL_EXPORT void glUniform3ui64vNV(GLint location,GLsizei count,const GLuint64EXT* value)const;
GEGL_EXPORT void glBlendFuncSeparateIndexedAMD(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)const;
GEGL_EXPORT void glMakeBufferResidentNV(GLenum target,GLenum access)const;
GEGL_EXPORT void glShaderOp2EXT(GLenum op,GLuint res,GLuint arg1,GLuint arg2)const;
GEGL_EXPORT void glGetVertexAttribivNV(GLuint index,GLenum pname,GLint* params)const;
GEGL_EXPORT void glTexParameterIivEXT(GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glGetPerfQueryDataINTEL(GLuint queryHandle,GLuint flags,GLsizei dataSize,GLvoid* data,GLuint* bytesWritten)const;
GEGL_EXPORT void glVertexAttrib4dvARB(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glTextureSubImage1DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glGetActiveUniformBlockName(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei* length,GLchar* uniformBlockName)const;
GEGL_EXPORT void glVertexAttrib2dvARB(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glVertexAttribPointer(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glDepthBoundsdNV(GLdouble zmin,GLdouble zmax)const;
GEGL_EXPORT void glDeleteTexturesEXT(GLsizei n,const GLuint* textures)const;
GEGL_EXPORT void glDrawBuffersATI(GLsizei n,const GLenum* bufs)const;
GEGL_EXPORT void glLightModelxvOES(GLenum pname,const GLfixed* param)const;
GEGL_EXPORT void glApplyTextureEXT(GLenum mode)const;
GEGL_EXPORT GLuint64 glGetImageHandleNV(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)const;
GEGL_EXPORT void glGetMinmax(GLenum target,GLboolean reset,GLenum format,GLenum types,GLvoid* values)const;
GEGL_EXPORT void glGetFixedvOES(GLenum pname,GLfixed* params)const;
GEGL_EXPORT void glSamplePatternEXT(GLenum pattern)const;
GEGL_EXPORT void glUniform1f(GLint location,GLfloat v0)const;
GEGL_EXPORT void glColor4fNormal3fVertex3fSUN(GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glFogCoorddvEXT(const GLdouble* coord)const;
GEGL_EXPORT void glCopyTextureImage1DEXT(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)const;
GEGL_EXPORT void glFlushMappedBufferRangeAPPLE(GLenum target,GLintptr offset,GLsizeiptr size)const;
GEGL_EXPORT void glVertex3sv(const GLshort* v)const;
GEGL_EXPORT void glFlushStaticDataIBM(GLenum target)const;
GEGL_EXPORT void glProgramUniform4ui64NV(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)const;
GEGL_EXPORT void glRasterPos4xOES(GLfixed x,GLfixed y,GLfixed z,GLfixed w)const;
GEGL_EXPORT void glVertexAttribP1ui(GLuint index,GLenum type,GLboolean normalized,GLuint value)const;
GEGL_EXPORT void glProgramUniform4dvEXT(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
GEGL_EXPORT void glEndTransformFeedbackEXT()const;
GEGL_EXPORT void glBinormal3dEXT(GLdouble bx,GLdouble by,GLdouble bz)const;
GEGL_EXPORT void glGetTextureSubImage(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,GLsizei bufSize,void* pixels)const;
GEGL_EXPORT void glGetNamedRenderbufferParameteriv(GLuint renderbuffer,GLenum pname,GLint* params)const;
GEGL_EXPORT void glBindBuffersRange(GLenum target,GLuint first,GLsizei count,const GLuint* buffers,const GLintptr* offsets,const GLsizeiptr* sizes)const;
GEGL_EXPORT GLint glFinishAsyncSGIX(GLuint* markerp)const;
GEGL_EXPORT void glBindFragDataLocationIndexed(GLuint program,GLuint colorNumber,GLuint index,const GLchar* name)const;
GEGL_EXPORT void glMultiTexCoord2dv(GLenum target,const GLdouble* v)const;
GEGL_EXPORT void glUniform2iv(GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glProgramUniform2i64vNV(GLuint program,GLint location,GLsizei count,const GLint64EXT* value)const;
GEGL_EXPORT void glFlushVertexArrayRangeAPPLE(GLsizei length,void* pointer)const;
GEGL_EXPORT void glTextureParameterf(GLuint texture,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glMultiTexCoord3dvARB(GLenum target,const GLdouble* v)const;
GEGL_EXPORT void glFeedbackBuffer(GLsizei size,GLenum type,GLfloat* buffer)const;
GEGL_EXPORT void glDebugMessageInsertARB(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar* buf)const;
GEGL_EXPORT void glMultiTexCoord2i(GLenum target,GLint s,GLint t)const;
GEGL_EXPORT void glTextureSubImage3D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glFramebufferTexture1D(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)const;
GEGL_EXPORT void glGetShaderiv(GLuint shader,GLenum pname,GLint* params)const;
GEGL_EXPORT void glMultiTexCoord2d(GLenum target,GLdouble s,GLdouble t)const;
GEGL_EXPORT void glArrayObjectATI(GLenum array,GLint size,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)const;
GEGL_EXPORT void glGetPointeri_vEXT(GLenum pname,GLuint index,void** params)const;
GEGL_EXPORT void glGetPerfMonitorCountersAMD(GLuint group,GLint* numCounters,GLint* maxActiveCounters,GLsizei counterSize,GLuint* counters)const;
GEGL_EXPORT void glNamedBufferStorage(GLuint buffer,GLsizeiptr size,const void* data,GLbitfield flags)const;
GEGL_EXPORT void glTexEnvxvOES(GLenum target,GLenum pname,const GLfixed* params)const;
GEGL_EXPORT void glProgramUniform2ui64NV(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y)const;
GEGL_EXPORT void glMultiTexCoord3bOES(GLenum texture,GLbyte s,GLbyte t,GLbyte r)const;
GEGL_EXPORT void glUniform1dv(GLint location,GLsizei count,const GLdouble* value)const;
GEGL_EXPORT void glPixelTransferi(GLenum pname,GLint param)const;
GEGL_EXPORT void glSecondaryColor3usvEXT(const GLushort* v)const;
GEGL_EXPORT void glProgramEnvParameterI4uivNV(GLenum target,GLuint index,const GLuint* params)const;
GEGL_EXPORT void glVertex2sv(const GLshort* v)const;
GEGL_EXPORT void glWindowPos4dMESA(GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glDebugMessageControlARB(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint* ids,GLboolean enabled)const;
GEGL_EXPORT GLboolean glIsTextureEXT(GLuint texture)const;
GEGL_EXPORT void glFragmentMaterialivSGIX(GLenum face,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glLinkProgramARB(GLhandleARB programObj)const;
GEGL_EXPORT void glFinishFenceAPPLE(GLuint fence)const;
GEGL_EXPORT void glVertexArrayVertexAttribBindingEXT(GLuint vaobj,GLuint attribindex,GLuint bindingindex)const;
GEGL_EXPORT void glTexStorageMem3DMultisampleEXT(GLenum target,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset)const;
GEGL_EXPORT void glUniform1ui64vARB(GLint location,GLsizei count,const GLuint64* value)const;
GEGL_EXPORT void glMultiTexCoord4fv(GLenum target,const GLfloat* v)const;
GEGL_EXPORT void glMulticastFramebufferSampleLocationsfvNV(GLuint gpu,GLuint framebuffer,GLuint start,GLsizei count,const GLfloat* v)const;
GEGL_EXPORT void glRasterPos3d(GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT GLint glPollAsyncSGIX(GLuint* markerp)const;
GEGL_EXPORT void glRasterPos3f(GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glCompressedTexImage3D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid* data)const;
GEGL_EXPORT void glVariantivEXT(GLuint id,const GLint* addr)const;
GEGL_EXPORT void glUnmapTexture2DINTEL(GLuint texture,GLint level)const;
GEGL_EXPORT void glMulticastWaitSyncNV(GLuint signalGpu,GLbitfield waitGpuMask)const;
GEGL_EXPORT void glGetVertexAttribiv(GLuint index,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetPathCoordsNV(GLuint path,GLfloat* coords)const;
GEGL_EXPORT void glColor4xvOES(const GLfixed* components)const;
GEGL_EXPORT void glVertexAttrib3fv(GLuint index,const GLfloat* v)const;
GEGL_EXPORT void glRasterPos3s(GLshort x,GLshort y,GLshort z)const;
GEGL_EXPORT void glVertex4bOES(GLbyte x,GLbyte y,GLbyte z,GLbyte w)const;
GEGL_EXPORT void glTransformFeedbackVaryingsEXT(GLuint program,GLsizei count,const GLchar*const* varyings,GLenum bufferMode)const;
GEGL_EXPORT void glCombinerOutputNV(GLenum stage,GLenum portion,GLenum abOutput,GLenum cdOutput,GLenum sumOutput,GLenum scale,GLenum bias,GLboolean abDotProduct,GLboolean cdDotProduct,GLboolean muxSum)const;
GEGL_EXPORT void glWindowPos4sMESA(GLshort x,GLshort y,GLshort z,GLshort w)const;
GEGL_EXPORT void glVertexAttrib4svARB(GLuint index,const GLshort* v)const;
GEGL_EXPORT GLboolean glIsList(GLuint list)const;
GEGL_EXPORT void glGetInfoLogARB(GLhandleARB obj,GLsizei maxLength,GLsizei* length,GLcharARB* infoLog)const;
GEGL_EXPORT void glUniformMatrix2fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glVertexAttribs3dvNV(GLuint index,GLsizei count,const GLdouble* v)const;
GEGL_EXPORT void glGlobalAlphaFactorsSUN(GLshort factor)const;
GEGL_EXPORT void glGetTrackMatrixivNV(GLenum target,GLuint address,GLenum pname,GLint* params)const;
GEGL_EXPORT void glTextureParameterfvEXT(GLuint texture,GLenum target,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT GLboolean glIsNamedBufferResidentNV(GLuint buffer)const;
GEGL_EXPORT void glProgramUniform4ui64vARB(GLuint program,GLint location,GLsizei count,const GLuint64* value)const;
GEGL_EXPORT void glTbufferMask3DFX(GLuint mask)const;
GEGL_EXPORT void glCoverFillPathNV(GLuint path,GLenum coverMode)const;
GEGL_EXPORT void glVertexAttrib1fvARB(GLuint index,const GLfloat* v)const;
GEGL_EXPORT void glGenerateTextureMipmap(GLuint texture)const;
GEGL_EXPORT void glNamedProgramLocalParameterI4uivEXT(GLuint program,GLenum target,GLuint index,const GLuint* params)const;
GEGL_EXPORT void glMultiDrawElementsBaseVertex(GLenum mode,const GLsizei* count,GLenum type,const void*const* indices,GLsizei drawcount,const GLint* basevertex)const;
GEGL_EXPORT void glProgramSubroutineParametersuivNV(GLenum target,GLsizei count,const GLuint* params)const;
GEGL_EXPORT void glProgramUniformMatrix2x4dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glRotatexOES(GLfixed angle,GLfixed x,GLfixed y,GLfixed z)const;
GEGL_EXPORT void glMemoryBarrierEXT(GLbitfield barriers)const;
GEGL_EXPORT void glVertexAttrib3svNV(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glVertexStream3iATI(GLenum stream,GLint x,GLint y,GLint z)const;
GEGL_EXPORT void glCompressedTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const GLvoid* data)const;
GEGL_EXPORT void glSetFenceNV(GLuint fence,GLenum condition)const;
GEGL_EXPORT void glAttachObjectARB(GLhandleARB containerObj,GLhandleARB obj)const;
GEGL_EXPORT void glCopyConvolutionFilter1D(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)const;
GEGL_EXPORT void glTexStorageMem2DMultisampleEXT(GLenum target,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset)const;
GEGL_EXPORT void glProgramParameters4fvNV(GLenum target,GLuint index,GLsizei count,const GLfloat* v)const;
GEGL_EXPORT void glNamedFramebufferParameteriEXT(GLuint framebuffer,GLenum pname,GLint param)const;
GEGL_EXPORT void glVertexAttrib4Nsv(GLuint index,const GLshort* v)const;
GEGL_EXPORT void glVertexAttribI4usvEXT(GLuint index,const GLushort* v)const;
GEGL_EXPORT void glTextureBufferRangeEXT(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
GEGL_EXPORT void glVertexP3uiv(GLenum type,const GLuint* value)const;
GEGL_EXPORT GLboolean glIsPathNV(GLuint path)const;
GEGL_EXPORT void glGetnUniformi64vARB(GLuint program,GLint location,GLsizei bufSize,GLint64* params)const;
GEGL_EXPORT void glFramebufferTextureMultiviewOVR(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint baseViewIndex,GLsizei numViews)const;
GEGL_EXPORT void glCompressedMultiTexSubImage2DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void* bits)const;
GEGL_EXPORT void glGetnMapdv(GLenum target,GLenum query,GLsizei bufSize,GLdouble* v)const;
GEGL_EXPORT void glDebugMessageCallback(GLDEBUGPROC callback,const void* userParam)const;
GEGL_EXPORT void glTangent3svEXT(const GLshort* v)const;
GEGL_EXPORT void glVertexAttribParameteriAMD(GLuint index,GLenum pname,GLint param)const;
GEGL_EXPORT void glBufferSubDataARB(GLenum target,GLintptrARB offset,GLsizeiptrARB size,const void* data)const;
GEGL_EXPORT void glGetVertexAttribLui64vARB(GLuint index,GLenum pname,GLuint64EXT* params)const;
GEGL_EXPORT void glVertexAttribL4ui64NV(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)const;
GEGL_EXPORT void glReplacementCodeuiColor4ubVertex3fSUN(GLuint rc,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glImageTransformParameterfHP(GLenum target,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glMap1f(GLenum target,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat* points)const;
GEGL_EXPORT void glRasterPos4fv(const GLfloat* v)const;
GEGL_EXPORT void glVertex2bvOES(const GLbyte* coords)const;
GEGL_EXPORT void glGetMapControlPointsNV(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLboolean packed,void* points)const;
GEGL_EXPORT void glNamedProgramLocalParametersI4ivEXT(GLuint program,GLenum target,GLuint index,GLsizei count,const GLint* params)const;
GEGL_EXPORT void glBindBufferRangeNV(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
GEGL_EXPORT void glVertexStream3dvATI(GLenum stream,const GLdouble* coords)const;
GEGL_EXPORT void glNormalPointerListIBM(GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
GEGL_EXPORT void glFogFuncSGIS(GLsizei n,const GLfloat* points)const;
GEGL_EXPORT void glMultiModeDrawArraysIBM(const GLenum* mode,const GLint* first,const GLsizei* count,GLsizei primcount,GLint modestride)const;
GEGL_EXPORT void glGetNamedFramebufferAttachmentParameterivEXT(GLuint framebuffer,GLenum attachment,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetFloatv(GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glVertexArrayVertexAttribIFormatEXT(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)const;
GEGL_EXPORT void glHint(GLenum target,GLenum mode)const;
GEGL_EXPORT void glVertexStream2svATI(GLenum stream,const GLshort* coords)const;
GEGL_EXPORT void glMultiDrawArraysIndirect(GLenum mode,const void* indirect,GLsizei drawcount,GLsizei stride)const;
GEGL_EXPORT void glMultiTexEnvfvEXT(GLenum texunit,GLenum target,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glVertexAttribP2uiv(GLuint index,GLenum type,GLboolean normalized,const GLuint* value)const;
GEGL_EXPORT void glProgramUniform1i64vARB(GLuint program,GLint location,GLsizei count,const GLint64* value)const;
GEGL_EXPORT void glFramebufferTextureARB(GLenum target,GLenum attachment,GLuint texture,GLint level)const;
GEGL_EXPORT void glPushClientAttribDefaultEXT(GLbitfield mask)const;
GEGL_EXPORT void glScalef(GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glScaled(GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glGetConvolutionParameterxvOES(GLenum target,GLenum pname,GLfixed* params)const;
GEGL_EXPORT void glGetProgramResourceName(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei* length,GLchar* name)const;
GEGL_EXPORT void glCopyColorTable(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)const;
GEGL_EXPORT void glDepthRangeArrayv(GLuint first,GLsizei count,const GLdouble* v)const;
GEGL_EXPORT void glCoverFillPathInstancedNV(GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat* transformValues)const;
GEGL_EXPORT void glMultiTexParameterivEXT(GLenum texunit,GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glGetActiveAtomicCounterBufferiv(GLuint program,GLuint bufferIndex,GLenum pname,GLint* params)const;
GEGL_EXPORT void glStencilOpSeparate(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)const;
GEGL_EXPORT void glVertexAttrib4fNV(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glGetColorTableParameterivSGI(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glVertexArrayAttribBinding(GLuint vaobj,GLuint attribindex,GLuint bindingindex)const;
GEGL_EXPORT GLboolean glIsSemaphoreEXT(GLuint semaphore)const;
GEGL_EXPORT void glProgramParameters4dvNV(GLenum target,GLuint index,GLsizei count,const GLdouble* v)const;
GEGL_EXPORT void glVertexAttribL4dv(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glGetTexParameteriv(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT GLintptr glGetUniformOffsetEXT(GLuint program,GLint location)const;
GEGL_EXPORT void glGetVertexAttribPointerv(GLuint index,GLenum pname,void** pointer)const;
GEGL_EXPORT void glResumeTransformFeedbackNV()const;
GEGL_EXPORT void glProgramUniform3i64vNV(GLuint program,GLint location,GLsizei count,const GLint64EXT* value)const;
GEGL_EXPORT void glTangent3fEXT(GLfloat tx,GLfloat ty,GLfloat tz)const;
GEGL_EXPORT void glGetPathMetricRangeNV(GLbitfield metricQueryMask,GLuint firstPathName,GLsizei numPaths,GLsizei stride,GLfloat* metrics)const;
GEGL_EXPORT void glWindowPos2iMESA(GLint x,GLint y)const;
GEGL_EXPORT void glVertex2xvOES(const GLfixed* coords)const;
GEGL_EXPORT void glGetnCompressedTexImage(GLenum target,GLint lod,GLsizei bufSize,void* pixels)const;
GEGL_EXPORT void glWindowPos2dv(const GLdouble* v)const;
GEGL_EXPORT void glReplacementCodeuiVertex3fSUN(GLuint rc,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glGetTransformFeedbackVaryingEXT(GLuint program,GLuint index,GLsizei bufSize,GLsizei* length,GLsizei* size,GLenum* type,GLchar* name)const;
GEGL_EXPORT void glWindowPos3fARB(GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void* glMapNamedBufferEXT(GLuint buffer,GLenum access)const;
GEGL_EXPORT void glDisable(GLenum cap)const;
GEGL_EXPORT GLboolean glIsPointInFillPathNV(GLuint path,GLuint mask,GLfloat x,GLfloat y)const;
GEGL_EXPORT void glVertexAttribI2uiEXT(GLuint index,GLuint x,GLuint y)const;
GEGL_EXPORT void glProgramUniform4uiv(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glQueryCounter(GLuint id,GLenum target)const;
GEGL_EXPORT void glFramebufferRenderbufferEXT(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)const;
GEGL_EXPORT void glBinormal3svEXT(const GLshort* v)const;
GEGL_EXPORT void glBindBufferOffsetNV(GLenum target,GLuint index,GLuint buffer,GLintptr offset)const;
GEGL_EXPORT void glCopyTextureSubImage2D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glGetProgramResourcefvNV(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum* props,GLsizei bufSize,GLsizei* length,GLfloat* params)const;
GEGL_EXPORT void glBinormalPointerEXT(GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glGetLightfv(GLenum light,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glMulticastCopyImageSubDataNV(GLuint srcGpu,GLbitfield dstGpuMask,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)const;
GEGL_EXPORT void glVertex2bOES(GLbyte x,GLbyte y)const;
GEGL_EXPORT void glUniform2ivARB(GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glMultiTexCoord3s(GLenum target,GLshort s,GLshort t,GLshort r)const;
GEGL_EXPORT void glGetHistogramParameterfvEXT(GLenum target,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glGetProgramStringNV(GLuint id,GLenum pname,GLubyte* program)const;
GEGL_EXPORT void glGetTexGenxvOES(GLenum coord,GLenum pname,GLfixed* params)const;
GEGL_EXPORT void glTextureSubImage2D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT GLenum glObjectPurgeableAPPLE(GLenum objectType,GLuint name,GLenum option)const;
GEGL_EXPORT void glColorTableSGI(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void* table)const;
GEGL_EXPORT void glCopyConvolutionFilter2DEXT(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glMultiTexCoord3f(GLenum target,GLfloat s,GLfloat t,GLfloat r)const;
GEGL_EXPORT void glMultiTexCoord3d(GLenum target,GLdouble s,GLdouble t,GLdouble r)const;
GEGL_EXPORT void glFogCoorddv(const GLdouble* coord)const;
GEGL_EXPORT void glGetBufferPointerv(GLenum target,GLenum pname,void** params)const;
GEGL_EXPORT void glProgramUniform1fEXT(GLuint program,GLint location,GLfloat v0)const;
GEGL_EXPORT void glWindowPos2fvMESA(const GLfloat* v)const;
GEGL_EXPORT void glAlphaToCoverageDitherControlNV(GLenum mode)const;
GEGL_EXPORT void glPolygonOffsetxOES(GLfixed factor,GLfixed units)const;
GEGL_EXPORT void glVertexAttrib4dARB(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glUniformHandleui64vARB(GLint location,GLsizei count,const GLuint64* value)const;
GEGL_EXPORT void glFragmentLightModelfvSGIX(GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glSwizzleEXT(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)const;
GEGL_EXPORT void glBindFragmentShaderATI(GLuint id)const;
GEGL_EXPORT void glVertexAttribs3hvNV(GLuint index,GLsizei n,const GLhalfNV* v)const;
GEGL_EXPORT void glGenBuffersARB(GLsizei n,GLuint* buffers)const;
GEGL_EXPORT void glTextureStorageMem2DMultisampleEXT(GLuint texture,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset)const;
GEGL_EXPORT void glListParameterfvSGIX(GLuint list,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glNamedRenderbufferStorageMultisample(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glVertexAttribI1iEXT(GLuint index,GLint x)const;
GEGL_EXPORT void glMultiTexCoord2ivARB(GLenum target,const GLint* v)const;
GEGL_EXPORT void glLightModelxOES(GLenum pname,GLfixed param)const;
GEGL_EXPORT void glColor3xOES(GLfixed red,GLfixed green,GLfixed blue)const;
GEGL_EXPORT void glReadBuffer(GLenum mode)const;
GEGL_EXPORT void glStencilFillPathInstancedNV(GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum transformType,const GLfloat* transformValues)const;
GEGL_EXPORT void glVDPAUUnmapSurfacesNV(GLsizei numSurface,const GLvdpauSurfaceNV* surfaces)const;
GEGL_EXPORT void glProgramUniform4i64NV(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)const;
GEGL_EXPORT void glVertexStream4dvATI(GLenum stream,const GLdouble* coords)const;
GEGL_EXPORT GLboolean glIsQuery(GLuint id)const;
GEGL_EXPORT void glProgramUniformMatrix4fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glVertexAttrib3hNV(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z)const;
GEGL_EXPORT void glFlushMappedNamedBufferRange(GLuint buffer,GLintptr offset,GLsizeiptr length)const;
GEGL_EXPORT void glPushName(GLuint name)const;
GEGL_EXPORT void glGetClipPlane(GLenum plane,GLdouble* equation)const;
GEGL_EXPORT void glVertex4dv(const GLdouble* v)const;
GEGL_EXPORT void glVertexAttrib3d(GLuint index,GLdouble x,GLdouble y,GLdouble z)const;
GEGL_EXPORT void glBlendColor(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)const;
GEGL_EXPORT void glBindTransformFeedbackNV(GLenum target,GLuint id)const;
GEGL_EXPORT void glSamplerParameterIuiv(GLuint sampler,GLenum pname,const GLuint* param)const;
GEGL_EXPORT void glIndexubv(const GLubyte* c)const;
GEGL_EXPORT void glNamedBufferPageCommitmentEXT(GLuint buffer,GLintptr offset,GLsizeiptr size,GLboolean commit)const;
GEGL_EXPORT GLenum glCheckNamedFramebufferStatus(GLuint framebuffer,GLenum target)const;
GEGL_EXPORT void glGetObjectBufferfvATI(GLuint buffer,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glRasterPos4d(GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glRasterPos4f(GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glGetPerfMonitorCounterStringAMD(GLuint group,GLuint counter,GLsizei bufSize,GLsizei* length,GLchar* counterString)const;
GEGL_EXPORT void glVertexAttrib3s(GLuint index,GLshort x,GLshort y,GLshort z)const;
GEGL_EXPORT void glDrawElementsInstancedEXT(GLenum mode,GLsizei count,GLenum type,const void* indices,GLsizei primcount)const;
GEGL_EXPORT void glNamedProgramLocalParameterI4iEXT(GLuint program,GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)const;
GEGL_EXPORT void glRasterPos4s(GLshort x,GLshort y,GLshort z,GLshort w)const;
GEGL_EXPORT void glGetProgramStageiv(GLuint program,GLenum shadertype,GLenum pname,GLint* values)const;
GEGL_EXPORT void glGetMaterialxOES(GLenum face,GLenum pname,GLfixed param)const;
GEGL_EXPORT void glPopMatrix()const;
GEGL_EXPORT void glGetVideoui64vNV(GLuint video_slot,GLenum pname,GLuint64EXT* params)const;
GEGL_EXPORT void glTangent3bEXT(GLbyte tx,GLbyte ty,GLbyte tz)const;
GEGL_EXPORT GLenum glGetGraphicsResetStatusARB()const;
GEGL_EXPORT void glUniform4i(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)const;
GEGL_EXPORT void glActiveTexture(GLenum texture)const;
GEGL_EXPORT void glEnableVertexAttribArray(GLuint index)const;
GEGL_EXPORT void glTexCoord4fVertex4fvSUN(const GLfloat* tc,const GLfloat* v)const;
GEGL_EXPORT void glUniform4d(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT void glUniform4f(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)const;
GEGL_EXPORT void glRenderbufferStorageMultisample(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glCreateProgramPipelines(GLsizei n,GLuint* pipelines)const;
GEGL_EXPORT void glVertexAttribLPointer(GLuint index,GLint size,GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glUniform2uiEXT(GLint location,GLuint v0,GLuint v1)const;
GEGL_EXPORT void glMultiTexCoord3sv(GLenum target,const GLshort* v)const;
GEGL_EXPORT void glDrawElementsInstancedBaseVertex(GLenum mode,GLsizei count,GLenum type,const void* indices,GLsizei instancecount,GLint basevertex)const;
GEGL_EXPORT void glPixelTransformParameterfvEXT(GLenum target,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glDrawTransformFeedbackNV(GLenum mode,GLuint id)const;
GEGL_EXPORT void glTextureImage2DMultisampleCoverageNV(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)const;
GEGL_EXPORT void glNamedRenderbufferStorageMultisampleCoverageEXT(GLuint renderbuffer,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)const;
GEGL_EXPORT GLboolean glIsTexture(GLuint texture)const;
GEGL_EXPORT void glMultiTexCoord4iv(GLenum target,const GLint* v)const;
GEGL_EXPORT void glTexEnvfv(GLenum target,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glPopDebugGroup()const;
GEGL_EXPORT void glUniformBlockBinding(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)const;
GEGL_EXPORT void glWindowPos2svMESA(const GLshort* v)const;
GEGL_EXPORT void glGenerateTextureMipmapEXT(GLuint texture,GLenum target)const;
GEGL_EXPORT GLuint glBindLightParameterEXT(GLenum light,GLenum value)const;
GEGL_EXPORT void glTexCoord3bOES(GLbyte s,GLbyte t,GLbyte r)const;
GEGL_EXPORT void glTexCoordPointer(GLint size,GLenum type,GLsizei stride,const GLvoid* ptr)const;
GEGL_EXPORT void glProgramUniformMatrix3x2fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glUniform2fvARB(GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glProgramLocalParameterI4uivNV(GLenum target,GLuint index,const GLuint* params)const;
GEGL_EXPORT void glFlushVertexArrayRangeNV()const;
GEGL_EXPORT void glSecondaryColor3svEXT(const GLshort* v)const;
GEGL_EXPORT void glGetBufferParameteriv(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetQueryIndexediv(GLenum target,GLuint index,GLenum pname,GLint* params)const;
GEGL_EXPORT void glFramebufferTexture3DEXT(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)const;
GEGL_EXPORT void glLoadTransposeMatrixxOES(const GLfixed* m)const;
GEGL_EXPORT void glDeleteTransformFeedbacksNV(GLsizei n,const GLuint* ids)const;
GEGL_EXPORT void glGetCompressedTextureImageEXT(GLuint texture,GLenum target,GLint lod,void* img)const;
GEGL_EXPORT void glIndexMaterialEXT(GLenum face,GLenum mode)const;
GEGL_EXPORT void glFogCoorddEXT(GLdouble coord)const;
GEGL_EXPORT void glTexCoord2hvNV(const GLhalfNV* v)const;
GEGL_EXPORT void glGetFramebufferParameterfvAMD(GLenum target,GLenum pname,GLuint numsamples,GLuint pixelindex,GLsizei size,GLfloat* values)const;
GEGL_EXPORT void glTexEnviv(GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glEndTransformFeedbackNV()const;
GEGL_EXPORT void glGlobalAlphaFactoruiSUN(GLuint factor)const;
GEGL_EXPORT void glSelectBuffer(GLsizei size,GLuint* buffer)const;
GEGL_EXPORT void glNamedBufferSubDataEXT(GLuint buffer,GLintptr offset,GLsizeiptr size,const void* data)const;
GEGL_EXPORT void glDisableVertexArrayAttrib(GLuint vaobj,GLuint index)const;
GEGL_EXPORT void glBlendFunc(GLenum sfactor,GLenum dfactor)const;
GEGL_EXPORT GLuint glCreateProgram()const;
GEGL_EXPORT void glVertexStream2dATI(GLenum stream,GLdouble x,GLdouble y)const;
GEGL_EXPORT void glUniform4ui64vARB(GLint location,GLsizei count,const GLuint64* value)const;
GEGL_EXPORT void glGetSemaphoreParameterui64vEXT(GLuint semaphore,GLenum pname,GLuint64* params)const;
GEGL_EXPORT void glPrimitiveRestartIndex(GLuint index)const;
GEGL_EXPORT void glNormalStream3fATI(GLenum stream,GLfloat nx,GLfloat ny,GLfloat nz)const;
GEGL_EXPORT void glProgramUniformMatrix2fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glVertexAttribs1hvNV(GLuint index,GLsizei n,const GLhalfNV* v)const;
GEGL_EXPORT void glWindowPos4svMESA(const GLshort* v)const;
GEGL_EXPORT void glDeleteFragmentShaderATI(GLuint id)const;
GEGL_EXPORT void glBindImageTextures(GLuint first,GLsizei count,const GLuint* textures)const;
GEGL_EXPORT void glMap2xOES(GLenum target,GLfixed u1,GLfixed u2,GLint ustride,GLint uorder,GLfixed v1,GLfixed v2,GLint vstride,GLint vorder,GLfixed points)const;
GEGL_EXPORT void glEnd()const;
GEGL_EXPORT void glMultiTexCoord2dARB(GLenum target,GLdouble s,GLdouble t)const;
GEGL_EXPORT void glUniform1i64NV(GLint location,GLint64EXT x)const;
GEGL_EXPORT void glPathStringNV(GLuint path,GLenum format,GLsizei length,const void* pathString)const;
GEGL_EXPORT void glGetNamedFramebufferParameterivEXT(GLuint framebuffer,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetProgramNamedParameterdvNV(GLuint id,GLsizei len,const GLubyte* name,GLdouble* params)const;
GEGL_EXPORT void glPathDashArrayNV(GLuint path,GLsizei dashCount,const GLfloat* dashArray)const;
GEGL_EXPORT void glUniform3uiv(GLint location,GLsizei count,const GLuint* value)const;
GEGL_EXPORT void glColor3fVertex3fvSUN(const GLfloat* c,const GLfloat* v)const;
GEGL_EXPORT void glMultTransposeMatrixd(const GLdouble m[16])const;
GEGL_EXPORT void glClearColor(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)const;
GEGL_EXPORT GLuint64 glGetImageHandleARB(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)const;
GEGL_EXPORT void glTangent3dEXT(GLdouble tx,GLdouble ty,GLdouble tz)const;
GEGL_EXPORT void glGetQueryObjectivARB(GLuint id,GLenum pname,GLint* params)const;
GEGL_EXPORT void glGetLocalConstantFloatvEXT(GLuint id,GLenum value,GLfloat* data)const;
GEGL_EXPORT void glUseShaderProgramEXT(GLenum type,GLuint program)const;
GEGL_EXPORT void glBindRenderbufferEXT(GLenum target,GLuint renderbuffer)const;
GEGL_EXPORT void glInterleavedArrays(GLenum format,GLsizei stride,const GLvoid* pointer)const;
GEGL_EXPORT void glGetPerfMonitorGroupStringAMD(GLuint group,GLsizei bufSize,GLsizei* length,GLchar* groupString)const;
GEGL_EXPORT void glUniform3ui(GLint location,GLuint v0,GLuint v1,GLuint v2)const;
GEGL_EXPORT void glGetNamedProgramLocalParameterdvEXT(GLuint program,GLenum target,GLuint index,GLdouble* params)const;
GEGL_EXPORT void glDeleteQueryResourceTagNV(GLsizei n,const GLint* tagIds)const;
GEGL_EXPORT void glVertexAttribI4uiv(GLuint index,const GLuint* v)const;
GEGL_EXPORT void glVertexAttrib4bv(GLuint index,const GLbyte* v)const;
GEGL_EXPORT void glMultiTexCoord3xOES(GLenum texture,GLfixed s,GLfixed t,GLfixed r)const;
GEGL_EXPORT void glSecondaryColor3ub(GLubyte red,GLubyte green,GLubyte blue)const;
GEGL_EXPORT void glFragmentMaterialfSGIX(GLenum face,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glGetVariantArrayObjectivATI(GLuint id,GLenum pname,GLint* params)const;
GEGL_EXPORT void glSecondaryColor3ui(GLuint red,GLuint green,GLuint blue)const;
GEGL_EXPORT void glVertexAttrib1dARB(GLuint index,GLdouble x)const;
GEGL_EXPORT void glGetNamedBufferPointerv(GLuint buffer,GLenum pname,void** params)const;
GEGL_EXPORT void glLockArraysEXT(GLint first,GLsizei count)const;
GEGL_EXPORT void glVertexAttribPointerNV(GLuint index,GLint fsize,GLenum type,GLsizei stride,const void* pointer)const;
GEGL_EXPORT void glConvolutionParameterf(GLenum target,GLenum pname,GLfloat params)const;
GEGL_EXPORT void glBindBufferBaseEXT(GLenum target,GLuint index,GLuint buffer)const;
GEGL_EXPORT void glTexCoord2xvOES(const GLfixed* coords)const;
GEGL_EXPORT void glGetQueryBufferObjectui64v(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)const;
GEGL_EXPORT void glSetMultisamplefvAMD(GLenum pname,GLuint index,const GLfloat* val)const;
GEGL_EXPORT void glPathColorGenNV(GLenum color,GLenum genMode,GLenum colorFormat,const GLfloat* coeffs)const;
GEGL_EXPORT void glVertexAttrib3sARB(GLuint index,GLshort x,GLshort y,GLshort z)const;
GEGL_EXPORT void glVertexAttrib4ivARB(GLuint index,const GLint* v)const;
GEGL_EXPORT void glGenTransformFeedbacks(GLsizei n,GLuint* ids)const;
GEGL_EXPORT void glGetVertexAttribIuiv(GLuint index,GLenum pname,GLuint* params)const;
GEGL_EXPORT void glPixelTransformParameterfEXT(GLenum target,GLenum pname,GLfloat param)const;
GEGL_EXPORT void glGetTexParameterIuivEXT(GLenum target,GLenum pname,GLuint* params)const;
GEGL_EXPORT void glGetObjectParameterivARB(GLhandleARB obj,GLenum pname,GLint* params)const;
GEGL_EXPORT void glVertexArraySecondaryColorOffsetEXT(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
GEGL_EXPORT void glWindowPos2fARB(GLfloat x,GLfloat y)const;
GEGL_EXPORT void glCompressedTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid* data)const;
GEGL_EXPORT void glCompressedTexSubImage3DARB(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void* data)const;
GEGL_EXPORT void glProgramBinary(GLuint program,GLenum binaryFormat,const void* binary,GLsizei length)const;
GEGL_EXPORT void glPresentFrameKeyedNV(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLuint key0,GLenum target1,GLuint fill1,GLuint key1)const;
GEGL_EXPORT void glVertexAttribI4bv(GLuint index,const GLbyte* v)const;
GEGL_EXPORT void glPathCoverDepthFuncNV(GLenum func)const;
GEGL_EXPORT void glTransformFeedbackStreamAttribsNV(GLsizei count,const GLint* attribs,GLsizei nbuffers,const GLint* bufstreams,GLenum bufferMode)const;
GEGL_EXPORT void glSecondaryColor3usEXT(GLushort red,GLushort green,GLushort blue)const;
GEGL_EXPORT void glCopyColorTableSGI(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)const;
GEGL_EXPORT void glProgramEnvParameter4fvARB(GLenum target,GLuint index,const GLfloat* params)const;
GEGL_EXPORT void glMultiTexCoord4sARB(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)const;
GEGL_EXPORT void glGetVertexArrayIndexed64iv(GLuint vaobj,GLuint index,GLenum pname,GLint64* param)const;
GEGL_EXPORT void glMatrixMultTranspose3x3fNV(GLenum matrixMode,const GLfloat* m)const;
GEGL_EXPORT void glTexParameterIiv(GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glVertexArrayAttribFormat(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)const;
GEGL_EXPORT void glEndTransformFeedback()const;
GEGL_EXPORT void glDrawCommandsStatesAddressNV(const GLuint64* indirects,const GLsizei* sizes,const GLuint* states,const GLuint* fbos,GLuint count)const;
GEGL_EXPORT void glUniform4ui64NV(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)const;
GEGL_EXPORT void glMaterialiv(GLenum face,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glTexImage2DMultisample(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)const;
GEGL_EXPORT void glBindTextureEXT(GLenum target,GLuint texture)const;
GEGL_EXPORT GLboolean glIsBuffer(GLuint buffer)const;
GEGL_EXPORT void glVertexAttribI1iv(GLuint index,const GLint* v)const;
GEGL_EXPORT void glGetFinalCombinerInputParameterfvNV(GLenum variable,GLenum pname,GLfloat* params)const;
GEGL_EXPORT void glMultiTexCoord3bvOES(GLenum texture,const GLbyte* coords)const;
GEGL_EXPORT void glVertexAttribDivisor(GLuint index,GLuint divisor)const;
GEGL_EXPORT void glCopyBufferSubData(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)const;
GEGL_EXPORT GLuint glBindTexGenParameterEXT(GLenum unit,GLenum coord,GLenum value)const;
GEGL_EXPORT void glNormalStream3bATI(GLenum stream,GLbyte nx,GLbyte ny,GLbyte nz)const;
GEGL_EXPORT void glTexStorageMem2DEXT(GLenum target,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLuint memory,GLuint64 offset)const;
GEGL_EXPORT void glTextureImage2DEXT(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glGetColorTableParameteriv(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glActiveTextureARB(GLenum texture)const;
GEGL_EXPORT void glTexCoord4xOES(GLfixed s,GLfixed t,GLfixed r,GLfixed q)const;
GEGL_EXPORT void glNamedBufferStorageExternalEXT(GLuint buffer,GLintptr offset,GLsizeiptr size,GLeglClientBufferEXT clientBuffer,GLbitfield flags)const;
GEGL_EXPORT void glSecondaryColor3fvEXT(const GLfloat* v)const;
GEGL_EXPORT void glUniformMatrix4x2fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glStartInstrumentsSGIX()const;
GEGL_EXPORT void glProgramNamedParameter4fvNV(GLuint id,GLsizei len,const GLubyte* name,const GLfloat* v)const;
GEGL_EXPORT void glEndVideoCaptureNV(GLuint video_capture_slot)const;
GEGL_EXPORT GLuint glGenLists(GLsizei range)const;
GEGL_EXPORT void glUniform1fARB(GLint location,GLfloat v0)const;
GEGL_EXPORT void glNamedFramebufferTexture1DEXT(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)const;
GEGL_EXPORT void* glMapBufferRange(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)const;
GEGL_EXPORT void glMultiDrawElementsIndirectCountARB(GLenum mode,GLenum type,const void* indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)const;
GEGL_EXPORT void glProgramUniformMatrix4x2fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glGetTextureParameterIivEXT(GLuint texture,GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glMultiTexCoord3hNV(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r)const;
GEGL_EXPORT void glNamedProgramLocalParametersI4uivEXT(GLuint program,GLenum target,GLuint index,GLsizei count,const GLuint* params)const;
GEGL_EXPORT void glEndList()const;
GEGL_EXPORT void glTexCoord2fColor4fNormal3fVertex3fSUN(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
GEGL_EXPORT void glGenTransformFeedbacksNV(GLsizei n,GLuint* ids)const;
GEGL_EXPORT void glEdgeFlagv(const GLboolean* flag)const;
GEGL_EXPORT void glVertexAttribI2iv(GLuint index,const GLint* v)const;
GEGL_EXPORT void glCopyMultiTexImage2DEXT(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)const;
GEGL_EXPORT void glUniformMatrix3x2dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GEGL_EXPORT void glTexImage3DMultisampleCoverageNV(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)const;
GEGL_EXPORT void glGetShaderPrecisionFormat(GLenum shadertype,GLenum precisiontype,GLint* range,GLint* precision)const;
GEGL_EXPORT void glTexSubImage4DSGIS(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint woffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glRasterSamplesEXT(GLuint samples,GLboolean fixedsamplelocations)const;
GEGL_EXPORT void glTextureView(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)const;
GEGL_EXPORT void glEvalMapsNV(GLenum target,GLenum mode)const;
GEGL_EXPORT GLint glGetFragDataLocationEXT(GLuint program,const GLchar* name)const;
GEGL_EXPORT void glGetCompressedMultiTexImageEXT(GLenum texunit,GLenum target,GLint lod,void* img)const;
GEGL_EXPORT void glIndexMask(GLuint mask)const;
GEGL_EXPORT void glPushClientAttrib(GLbitfield mask)const;
GEGL_EXPORT void glShaderSource(GLuint shader,GLsizei count,const GLchar*const* string,const GLint* length)const;
GEGL_EXPORT void glDispatchComputeGroupSizeARB(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z)const;
GEGL_EXPORT void glLGPUNamedBufferSubDataNVX(GLbitfield gpuMask,GLuint buffer,GLintptr offset,GLsizeiptr size,const void* data)const;
GEGL_EXPORT void glGetnPixelMapfv(GLenum map,GLsizei bufSize,GLfloat* values)const;
GEGL_EXPORT void glTexCoordP2uiv(GLenum type,const GLuint* coords)const;
GEGL_EXPORT void glUniform2f(GLint location,GLfloat v0,GLfloat v1)const;
GEGL_EXPORT void glGetNamedBufferParameteri64v(GLuint buffer,GLenum pname,GLint64* params)const;
GEGL_EXPORT void glCommandListSegmentsNV(GLuint list,GLuint segments)const;
GEGL_EXPORT void glTextureParameterIivEXT(GLuint texture,GLenum target,GLenum pname,const GLint* params)const;
GEGL_EXPORT void glMultiTexParameterfvEXT(GLenum texunit,GLenum target,GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glProgramUniform2ui64ARB(GLuint program,GLint location,GLuint64 x,GLuint64 y)const;
GEGL_EXPORT void glVertex4d(GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GEGL_EXPORT GLuint glNewObjectBufferATI(GLsizei size,const void* pointer,GLenum usage)const;
GEGL_EXPORT void glViewportSwizzleNV(GLuint index,GLenum swizzlex,GLenum swizzley,GLenum swizzlez,GLenum swizzlew)const;
GEGL_EXPORT void glBufferData(GLenum target,GLsizeiptr size,const void* data,GLenum usage)const;
GEGL_EXPORT void glTextureImage1DEXT(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void* pixels)const;
GEGL_EXPORT void glGetTexParameterIiv(GLenum target,GLenum pname,GLint* params)const;
GEGL_EXPORT void glCopyTexSubImage1DEXT(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)const;
GEGL_EXPORT void glVertex4f(GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
GEGL_EXPORT void glUniformMatrix3fvARB(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GEGL_EXPORT void glTexCoordP1ui(GLenum type,GLuint coords)const;
GEGL_EXPORT void glPointParameterfvEXT(GLenum pname,const GLfloat* params)const;
GEGL_EXPORT void glUniform4fARB(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)const;
GEGL_EXPORT void glImportMemoryFdEXT(GLuint memory,GLuint64 size,GLenum handleType,GLint fd)const;
GEGL_EXPORT void glCopyTextureSubImage3D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glMultiTexCoord2fv(GLenum target,const GLfloat* v)const;
GEGL_EXPORT void glNamedFramebufferSamplePositionsfvAMD(GLuint framebuffer,GLuint numsamples,GLuint pixelindex,const GLfloat* values)const;
GEGL_EXPORT void glNormalP3ui(GLenum type,GLuint coords)const;
GEGL_EXPORT void glDrawRangeElementArrayATI(GLenum mode,GLuint start,GLuint end,GLsizei count)const;
GEGL_EXPORT void glVertexAttribI1i(GLuint index,GLint x)const;
GEGL_EXPORT void glDrawArraysInstancedARB(GLenum mode,GLint first,GLsizei count,GLsizei primcount)const;
GEGL_EXPORT void glEnableVertexAttribAPPLE(GLuint index,GLenum pname)const;
GEGL_EXPORT GLuint glGetDebugMessageLogARB(GLuint count,GLsizei bufSize,GLenum* sources,GLenum* types,GLuint* ids,GLenum* severities,GLsizei* lengths,GLchar* messageLog)const;
GEGL_EXPORT void glGetPathTexGenfvNV(GLenum texCoordSet,GLenum pname,GLfloat* value)const;
GEGL_EXPORT void glNamedProgramLocalParameters4fvEXT(GLuint program,GLenum target,GLuint index,GLsizei count,const GLfloat* params)const;
GEGL_EXPORT void glQueryResourceTagNV(GLint tagId,const GLchar* tagString)const;
GEGL_EXPORT void glVertexStream3fvATI(GLenum stream,const GLfloat* coords)const;
GEGL_EXPORT void glFramebufferTexture3D(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)const;
GEGL_EXPORT void glCompressedTextureSubImage2DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void* bits)const;
GEGL_EXPORT void glWindowPos3dv(const GLdouble* v)const;
GEGL_EXPORT void glCopyConvolutionFilter2D(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)const;
GEGL_EXPORT void glReadInstrumentsSGIX(GLint marker)const;
GEGL_EXPORT void glProgramUniform2dvEXT(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
GEGL_EXPORT void glSamplerParameterfv(GLuint sampler,GLenum pname,const GLfloat* param)const;
GEGL_EXPORT void glBindBufferARB(GLenum target,GLuint buffer)const;
GEGL_EXPORT void glVertexAttrib1sNV(GLuint index,GLshort x)const;
GEGL_EXPORT void glGetMaterialiv(GLenum face,GLenum pname,GLint* params)const;
GEGL_EXPORT void glUniform1fv(GLint location,GLsizei count,const GLfloat* value)const;
GEGL_EXPORT void glBeginOcclusionQueryNV(GLuint id)const;
GEGL_EXPORT void glGenFencesAPPLE(GLsizei n,GLuint* fences)const;
GEGL_EXPORT void glScissorIndexedv(GLuint index,const GLint* v)const;
GEGL_EXPORT void glDisableVariantClientStateEXT(GLuint id)const;
GEGL_EXPORT void glMinmaxEXT(GLenum target,GLenum internalformat,GLboolean sink)const;
GEGL_EXPORT void glNormalPointervINTEL(GLenum type,const void** pointer)const;
GEGL_EXPORT void glNormal3s(GLshort nx,GLshort ny,GLshort nz)const;
GEGL_EXPORT void glGetnPixelMapuiv(GLenum map,GLsizei bufSize,GLuint* values)const;
GEGL_EXPORT void glNormalStream3bvATI(GLenum stream,const GLbyte* coords)const;
GEGL_EXPORT void glGetObjectParameterivAPPLE(GLenum objectType,GLuint name,GLenum pname,GLint* params)const;
GEGL_EXPORT void glNormal3i(GLint nx,GLint ny,GLint nz)const;
GEGL_EXPORT void glUniform1ivARB(GLint location,GLsizei count,const GLint* value)const;
GEGL_EXPORT void glNormal3d(GLdouble nx,GLdouble ny,GLdouble nz)const;
GEGL_EXPORT void glUpdateObjectBufferATI(GLuint buffer,GLuint offset,GLsizei size,const void* pointer,GLenum preserve)const;
GEGL_EXPORT void glNormal3b(GLbyte nx,GLbyte ny,GLbyte nz)const;
GEGL_EXPORT GLint glGetUniformBufferSizeEXT(GLuint program,GLint location)const;
GEGL_EXPORT void glMultiTexCoord4dv(GLenum target,const GLdouble* v)const;
GEGL_EXPORT void glProgramUniform3i64ARB(GLuint program,GLint location,GLint64 x,GLint64 y,GLint64 z)const;
GEGL_EXPORT void glVertexAttrib2d(GLuint index,GLdouble x,GLdouble y)const;
GEGL_EXPORT void glVertexAttrib2f(GLuint index,GLfloat x,GLfloat y)const;
GEGL_EXPORT void glMultiDrawElementsEXT(GLenum mode,const GLsizei* count,GLenum type,const void*const* indices,GLsizei primcount)const;
GEGL_EXPORT void glVertexAttrib3dv(GLuint index,const GLdouble* v)const;
GEGL_EXPORT void glMultiTexCoord2bOES(GLenum texture,GLbyte s,GLbyte t)const;
GEGL_EXPORT void glVertexAttrib2s(GLuint index,GLshort x,GLshort y)const;
GEGL_EXPORT void glTexImage3DMultisample(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)const;
GEGL_EXPORT GLuint glGetUniformBlockIndex(GLuint program,const GLchar* uniformBlockName)const;
GEGL_EXPORT GLboolean glReleaseKeyedMutexWin32EXT(GLuint memory,GLuint64 key)const;
GEGL_EXPORT void glFrontFace(GLenum mode)const;
GEGL_EXPORT void glEvalCoord1xOES(GLfixed u)const;
GEGL_EXPORT void glDrawArraysInstancedBaseInstance(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)const;
GEGL_EXPORT GLboolean glIsPointInStrokePathNV(GLuint path,GLfloat x,GLfloat y)const;
